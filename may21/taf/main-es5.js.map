{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login-main/forgot-password-username/forgot-password-username.component.ts","webpack:///src/app/login-main/forgot-password-username/forgot-password-username.component.html","webpack:///src/app/login-main/forgot-password/forgot-password.component.ts","webpack:///src/app/login-main/forgot-password/forgot-password.component.html","webpack:///src/app/login-main/login-main.component.ts","webpack:///src/app/login-main/login-main.component.html","webpack:///src/app/login-main/login/login.component.ts","webpack:///src/app/login-main/login/login.component.html","webpack:///src/app/login-main/signup/signup.component.ts","webpack:///src/app/login-main/signup/signup.component.html","webpack:///src/app/main/admin-console/admin-console.component.ts","webpack:///src/app/main/admin-console/admin-console.component.html","webpack:///src/app/main/automation-factory/automation-factory.component.ts","webpack:///src/app/main/automation-factory/automation-factory.component.html","webpack:///src/app/main/automation-factory/create-order/create-order.component.ts","webpack:///src/app/main/automation-factory/create-order/create-order.component.html","webpack:///src/app/main/automation-factory/order-list/order-list.component.ts","webpack:///src/app/main/automation-factory/order-list/order-list.component.html","webpack:///src/app/main/automation-factory/scheduled-job-list/scheduled-job-edit/scheduled-job-edit.component.ts","webpack:///src/app/main/automation-factory/scheduled-job-list/scheduled-job-edit/scheduled-job-edit.component.html","webpack:///src/app/main/automation-factory/scheduled-job-list/scheduled-job-list.component.ts","webpack:///src/app/main/automation-factory/scheduled-job-list/scheduled-job-list.component.html","webpack:///src/app/main/automation-factory/scheduled-job-list/scheduled-job-view/scheduled-job-view.component.ts","webpack:///src/app/main/automation-factory/scheduled-job-list/scheduled-job-view/scheduled-job-view.component.html","webpack:///src/app/main/dashboard/dashboard.component.ts","webpack:///src/app/main/dashboard/dashboard.component.html","webpack:///src/app/main/dashboard/productivity-dashboard/productivity-dashboard.component.ts","webpack:///src/app/main/dashboard/productivity-dashboard/productivity-dashboard.component.html","webpack:///src/app/main/intake/automated/automated.component.ts","webpack:///src/app/main/intake/automated/automated.component.html","webpack:///src/app/main/intake/automated/automation-intake-form/automation-intake-form.component.ts","webpack:///src/app/main/intake/automated/automation-intake-form/automation-intake-form.component.html","webpack:///src/app/main/intake/intake-all/intake-all.component.ts","webpack:///src/app/main/intake/intake-all/intake-all.component.html","webpack:///src/app/main/intake/intake-approval/intake-approval.component.ts","webpack:///src/app/main/intake/intake-approval/intake-approval.component.html","webpack:///src/app/main/intake/intake-automation-edit/intake-automation-edit.component.ts","webpack:///src/app/main/intake/intake-automation-edit/intake-automation-edit.component.html","webpack:///src/app/main/intake/intake-create/intake-create.component.ts","webpack:///src/app/main/intake/intake-create/intake-create.component.html","webpack:///src/app/main/intake/intake-edit/intake-edit.component.ts","webpack:///src/app/main/intake/intake-edit/intake-edit.component.html","webpack:///src/app/main/intake/intake-user-created/intake-user-created.component.ts","webpack:///src/app/main/intake/intake-user-created/intake-user-created.component.html","webpack:///src/app/main/intake/intake-view/intake-view.component.ts","webpack:///src/app/main/intake/intake-view/intake-view.component.html","webpack:///src/app/main/intake/intake.component.ts","webpack:///src/app/main/intake/intake.component.html","webpack:///src/app/main/intake/pending/pending.component.ts","webpack:///src/app/main/intake/pending/pending.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/numbers.directive.ts","webpack:///src/app/realNumbers.directive.ts","webpack:///src/app/route-animation.ts","webpack:///src/app/service/admin-portal.service.ts","webpack:///src/app/service/automation-factory.service.ts","webpack:///src/app/service/intake.service.ts","webpack:///src/app/service/loader.service.ts","webpack:///src/app/service/loaderinterceptor.service.ts","webpack:///src/app/service/login.service.ts","webpack:///src/app/shared/alert/alert.component.ts","webpack:///src/app/shared/alert/alert.component.html","webpack:///src/app/shared/loader/loader.component.ts","webpack:///src/app/shared/loader/loader.component.html","webpack:///src/app/twodigitdecimaldirective.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","animations","AppModule","provide","useClass","multi","declarations","providers","bootstrap","ForgotPasswordUsernameComponent","http","loginService","formBuilder","router","username","usernameCheck","alertMessage","alertdata","baseUrl","document","getElementById","value","trim","includes","selectedUser","userList","filter","item","email","length","maildata","mailContent","to","cc","Bcc","testingRecipients","subject","sendMail","JSON","stringify","subscribe","val","message","response","setTimeout","bind","onFPSubmit","ForgotPasswordComponent","activatedRoute","submitted","queryParams","params","resetPassword","group","password","required","minLength","confirmPassword","checks","counter","i","hasLower","hasUpper","hasNum","hasSpecial","lowercaseRegex","RegExp","test","uppercaseRegex","numRegex","specialcharRegex","invalidPassword","passwordFails","invalid","newData","changePassword","error","controls","validatePassword","onSubmit","LoginMainComponent","LoginComponent","passwordCheck","encryptionKey","passwordd","encrypt","toString","loginData","lanId","auth","localStorage","setItem","login","user","userData","menuList","role","navigateByUrl","console","log","onLoginSubmit","SignupComponent","name","emailCheck","registerForm","pattern","signUpData","signup","window","location","reload","duplicateUsernameCheck","duplicateEmailCheck","AdminConsoleComponent","adminPortalService","serverState","serverStatus","isActive","serverType","pageSize","serverTypeName","serverTypeNameEdit","getServerList","serverList","data","getServerType","serverTypeList","serverDetailsForm","modalName","modalTitle","event","forEach","element","typeName","serverName","serverTypeId","typeId","setValidators","updateValueAndValidity","clearValidators","serverNameEdit","serverTypeIdEdit","serverDetailUpadte","serverTypeEdit","target","checked","passwordencrypted","pojo","baseDn","bindDn","serverIp","serverPort","serverUrl","createServer","createdServerId","serverAlreadyExits","resetform","errorResponse","classnames","className","getServerDetailList","serverDetailList","serverIdEdit","decrypt","Utf8","serverIpEdit","bindDnEdit","baseDnEdit","passwordEdit","serverUrlEdit","serverPortEdit","activeShow","active","submittedEdit","pageOfItems","reset","ngOnInit","getModal","AutomationFactoryComponent","automationFactoryService","orderListActive","scheduleListActive","refresh","schedulerRefresh","total","accepted","completed","failed","scheduled","scheduleTotal","inactive","deleted","refreshList","display","adminReportStart","adminReportEnd","adminSchedulerReportStart","adminSchedulerReportEnd","reportStart","reportMid","reportEnd","schedulerReportStart","schedulerReportMid","schedulerReportEnd","orderList","scheduledJobs","orderReport","schedulerReport","createOrder","adminFlag","actionEvent","parse","getItem","roles","r","rolePermission","permission","mainMenu","menuName","subMenu","j","link","src","index","roleCode","schedulerLink","subscription","pipe","getAllOrders","orders","totalOrders","totalCount","orderStatus","completedCount","acceptedCount","failedCount","schedulerId","scheduledCount","getScheduleList","val1","scheduledOrders","totalOrdersScheduler","refreshlist","emit","status","orderCount","jobStatus","CreateOrderComponent","automationService","catalougue","selectedBots","selectedBotsConfigData","selectedBotIds","summaryCatalogue","summaryCatalogueFinal","orderTypeSelected","botDetailProvided","suitsIds","botIds","selectedSuits","isJsonError","scheduleChecked","orderType","createdOrderId","selectedRole","confType","jobAlreadyExits","disabled","ShowFilter","limitSelection","hoursMultiSelectSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","daysMultiSelectSettings","minutes","hours","minutes_mins","hours_hrs","hoursEndRange","daysEndRange","days","daysOfWeek","months","hourlyRadio","dailyRadio","monthlyRadio","push","getUserRole","chosenBot","botId","orderDetailForm","minuteScheduleForm","scheduleForm","hoursScheduleForm","dailyScheduleForm","weeklyScheduleForm","monthlyScheduleForm","getOrderType","patchValue","jobName","user_id","roleTypeuser","day","indexOf","splice","hour","assign","suit","chosenBotName","replace","Bots","BotId","arr","BotName","SuiteName","SuiteId","bot","getBotConfig","BotInput","botName","getCatalogueByorderType","click","y","everyHours","errors","hoursMultiSelect","hoursFrom","hoursTo","z","dailyHours","dailyMinutes","daysMultiSelect","daysFrom","daysTo","u","weeklyHours","weeklyMinutes","m","monthlyHours","monthlyMinutes","innerpojo","suite","suiteDetails","bots","botargs","roleId","Number","suiteElement","suiteIndex","botcount","suiteId","suitearray","botDetails","botarray","schedulePojo","day_of_week","input","jobname","minute","month","schedulerCreatedBy","jobModifiedBy","join","monthlyDays","monthssecond","monthlyDayofWeek","weeks","scheduleOrder","scheduler_id","resetOrderCreate","orderid","element1","getBotLibrary","roleChange","submitOrderCreate","OrderListComponent","serviceUrlRogers","livelogStart","livelogMid","livelogEnd","play","pause","ascOrderIdSort","ascOrderTypeSort","ascScheduleNameSort","ascBotCount","ascCreatedBy","ascCreatedDate","selectedBot","logorderId","selectedOrder","orderId","sortValue","sort","a","b","orderCreatedBy","schedulerName","val2","Date","orderCreatedDate","valueOf","onChangePage","botlogClosed","ScheduledJobEditComponent","jobAlreadyExitsEdit","minutes_minsEdit","ShowFilterEdit","hours_hrsEdit","hoursEdit","hoursEndRangeEdit","hoursMultiSelectSettingsEdit","daysMultiSelectSettingsEdit","hoursMultiSelectEdit","hoursFromEdit","hoursToEdit","everyHoursEdit","daysEdit","minutesEdit","daysOfWeekEdit","everyMinuteEdit","daysMultiSelectEdit","daysFromEdit","daysToEdit","daysOfWeekArray","monthsEdit","weeklyHoursEdit","weeklyMinutesEdit","monthlyMinutesEdit","monthlyHoursEdit","schedularDetails","scheduleFormEdit","hourlyRadioEdit","array","split","getHoursEndRangeEdit","substring","dailyRadioEdit","dailyHoursEdit","dailyMinutesEdit","getDaysEndRangeEdit","monthssecondEdit","monthlyDayofWeekEdit","weeksEdit","monthlyDaysEdit","monthsFormEdit","minuteScheduleFormEdit","hoursScheduleFormEdit","dailyScheduleFormEdit","weeklyScheduleFormEdit","monthlyScheduleFormEdit","daysEndRangeEdit","monthlyRadioEdit","botInfo","minuteEdit","scheduleOrderUpdate","scheduleNameCheckEdit","changeHoursRadioEdit","changeDailyRadioEdit","selectDaysOfWeekEdit","changeMonthlyRadioEdit","updateSchedular","ScheduledJobListComponent","toggle","ascScheduleIdSort","ascServiceType","ascScheduledDate","deleteSchedule","scheduledOrderList","resumeSchedule","pauseSchedule","getSchedularDetails","suitDetails","activeId","serviceType","nextRun","jobCreatedAt","ScheduledJobViewComponent","cronExecationarray","changes","hasOwnProperty","cronNextExecutionDates","changedate","transform","DashboardComponent","ProductivityDashboardComponent","intakeService","userDashboardStart","userDashboardEnd","adminUserDashboard","deptDashboardStart","deptDashboardEnd","adminDeptDashboard","executiveDashboardStart","executiveDashboardEnd","adminExecutiveDashboard","dashboardUser","dashboardExecutive","dashboardDept","approverFlag","deptFlag","execFlag","userFlag","getUserRoleMapping","val6","userRoleMapping","k","departmentHead","subDepartmentHead","businessUnitHead","subBusinessUnitHead","subDepartments","encodedValue","encodeURIComponent","teamName","AutomatedComponent","datePipe","readWriteFlag","intakes","team","ldapRole","automateFlag","intake","editData","viewData","viewindex","alertindex","deleteIntake","intakeId","automate","AutomationIntakeFormComponent","costWeitage","restrictSuite","errorValue","hideCostWeitage","errorAlert","enterdCostSum","automationForm","botcatalogue","get","suiteName","botDetailsList","intakeData","newSuite","suitIndex","removeAt","costWeitageCal","at","botweightage","botInput","newBot","botIndex","sum","diff","suiteCatalogue","suits","automateIntake","automateIdea","IntakeAllComponent","viewfield","commonApprover","getcommonApprover","alertIndex","comment","undefined","approve","approver","approvercomments","rfStatus","approveIntake","approvalMessage","ideaName","toISOString","createdby","reject","rfEffort","device","application","jiraCreateAndUpdate","upadateJiraContent","automatedData","automatedIndex","IntakeApprovalComponent","IntakeAutomationEditComponent","alertMessageModal","hideCostWeitageEdit","errorAlertEdit","costWeitageEdit","errorValueEdit","enterdCostSumEdit","automationFormEdit","orderTypeEdit","botcatalogueEdit","getAutomateById","intakeFormDetails","suitArray","suiteCatalogues","botCatalogue","addSuitEdit","addNewBotEdit","costWeitageCalEdit","savingPercentage","suiteNameEdit","botDetailsListEdit","newSuiteEditEmpty","newSuiteEdit","suitIndexEdit","botNameEdit","botweightageEdit","botInputEdit","botDetailsEdit","newBotEditEmpty","newBotEdit","botIndexEdit","suiteCatalogueEdit","automateIntakeEdit","selectOrderType","updateAutomate","IntakeCreateComponent","errorAlertDevice","errorAlertApp","zeromessage","messageroledevice","messageroleApp","filenamearray","spcharmessage","fileInfo","buttonSubmitted","summaryOpened","finalfilearray","totalsize","allowedType","ideanamearray","isideanameDuplicate","firstMonthRoiNegative","secondMonthRoiNegative","thirdMonthRoiNegative","nbiTypeSelected","sbiTypeSelected","savingsReturned","sbitype","nbiTypeArray","otherDeviceName","otherApplicationName","sbiRoleInvalid","nbiRoleInvalid","sbitypeRole","nbitypeRole","validation","ideaBenefitsDropdownSettings","enableCheckAll","nbiTypeDropdownSettings","sbiTypeDropdownSettings","dayPickerConfig","format","monthFormat","firstDayOfWeek","min","max","benefitsList","formValueBB","d","year","getFullYear","getMonth","getDate","othersbiValue","othernbiValue","SBItableLength","NBItableLength","getBusinessUnitList","businessUnitList","getBusinessBenefitsList","getComplexityList","val3","complexityList","getNBIList","val4","nbiList","getSBIList","val5","sbiList","getFTErate","fteRate","getAllIntakes","intakelist","coe","spoc","financialBenefits","savings","intakeCreate","submitter","dateFrom","businessUnitName","benefittingDirector","ideaDescription","automationObjectives","averageDailyVolume","aet","noOfNBI","automationRatio","noOfSBI","typeOfNBI","dataInterpretation","decisionMaking","manualActivity","actualFTE","typeOfSBI","requestedComplexity","noOfMonths","ideaBenefits","benefitsForm","ideaBenefitName","description","maxLength","createBenefitsForm","addIdeaBenefit","index2","findIndex","x","businessBenefit","nbitype","userinputname","myTrim","count","clipboardData","getData","which","key","ratio","toFixed","items","selectedBusinessUnit","department","director","checkFilesizeCreate","files","type","filenameduplication","concat","fileInputsCreate","nativeElement","filename","some","word","size","benefitArry","pojobenefits","businessBenefitId","nbiTypeList","sbiTypeList","deviceNames","applicationNames","textContent","draftIntakeValues","savingType","avgDailyVolume","manualActivityCost","manualCost","fteRateId","costPerFTE","noOfApplication","noOfDeviceInterfaces","applicationsNames","noOfWorkingDays","assignedComplexity","complexityCode","complexity","automationCost","revenue","spocrequirement","targetImplementationDate","automationBenefits","benefitingdirector","pathupload","remarks","modifiedby","createddate","modifieddate","intakeDraftPojo","rfIntake","monthlyRevenue","saveIntake","createdIntake","fileUpload","createIntakeValues","intakeCreatePojo","createIntake","error1","subj","num","styleObj","selectedComplexity","getComplexityValues","noOfNorthBoundInterface","noOfSouthBoundInterface","getComplexity","roiCalcValues","timeDuration","ftecostPerAutomation","costPerAutomation","getROICalculation","calcValues","calculation","manualHours","hoursSaving","costSaving","roiPerc","vaildationspcl_character","ideanameDuplicateCheck","onPaste","onideaBenefitsSelect","onideaBenefitsDeSelect","changeSavingsType","vaildateZero","changeFinancialBenefits","calculateRatio","limitSBI","onSbiItemSelect","onItemDeSelect","limitNBI","onItemDeSelectApp","onNbiItemSelect","onFileSelectCreate","viewSummary","IntakeEditComponent","deviceapplicationNames","roleInvalidNbi","ideaBenefitsDropdownSettingsEdit","benefitsListEdit","benefitsSelected","indexValueNbi","indexValueSbi","rfUploadFile","elementname","fileName","splitfilename","otherDeviceSbiId","otherFlag","devicename","otherDeviceSbi","otherDeviceNbiId","applicationName","otherDeviceNbi","intakeEdit","businessBenefits","benefitsFormEdit","benefittemp","addBusinessBenefit","benefitId","mapId","EditBenefitsFormNew","benefit","EditBenefitsForm","addBusinessBenefitNew","roleInAutomation","checkFilesize","fileInputs","file","deleteFile","downloadFile","editIntake","submitMessage","onideaBenefitsSelectEdit","onideaBenefitsDeSelectEdit","onFileSelect","IntakeUserCreatedComponent","IntakeViewComponent","sanitizer","serviceUrl","jiraurl","automationtable","generateSafeUrl","jirakey","jiraId","safeurl","bypassSecurityTrustUrl","noOfDevices","noOfSystems","IntakeComponent","intakeList","fullIntakeList","createdByMeList","approvalPendingList","pendingList","automationPendingList","pending","draft","approved","rejected","automated","all","byMe","approval","automationTab","add","pendingCount","approvedCount","rejectedCount","draftCount","automatedCount","filterBasedonStatus","PendingComponent","MainComponent","tabHeading","adminConsole","dashboard","intakePortal","automationFactory","heading","removeItem","logout","NumberDirective","el","regex","specialKeys","current","position","selectionStart","next","slice","String","match","preventDefault","RealNumberDirective","slider","slideTo","direction","optional","width","opacity","AdminPortalService","url8080","headers","httpOptions","head","append","btoa","post","providedIn","AutomationFactoryService","url1","schedular_id","IntakeService","userid","intakeid","put","userId","fileId","HttpUploadOptions","formData","FormData","LoaderService","loaderSubject","loaderState","asObservable","show","LoaderinterceptorService","loaderService","urlarray","apiendpoint","url","currentpath","isSpinnerneed","showLoader","handle","onEnd","err","hideLoader","hide","LoginService","ldapurllogin","ldaplogin","AlertComponent","LoaderComponent","Spinnerservice","state","unsubscribe","TwodigitdecimaldirectiveDirective","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login-main/login/login.component';\nimport { LoginMainComponent } from './login-main/login-main.component';\nimport { MainComponent } from './main/main.component';\nimport { SignupComponent } from './login-main/signup/signup.component';\nimport { ForgotPasswordUsernameComponent } from './login-main/forgot-password-username/forgot-password-username.component';\nimport { ForgotPasswordComponent } from './login-main/forgot-password/forgot-password.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'loginmain', pathMatch: 'full'},\n  // { path: 'login', component: LoginComponent, data: { animation: 'isRight' } },\n  // { path: 'signup', component: SignupComponent, data: { animation: 'isLeft' } },\n  // { path: 'forgotPasswordUsername', component: ForgotPasswordUsernameComponent },\n  { path: 'forgotPassword', component: ForgotPasswordComponent },\n  { path: 'main', component: MainComponent },\n  { path: 'loginmain', component: LoginMainComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// import { routerAnimation } from './common/animations';\nimport { slider } from './route-animation';\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [ // <-- add your animations here\n    // fader,\n    slider,\n    // transformer,\n    // stepper\n  ]\n})\n\nexport class AppComponent {\n  title = 'BOT-UI';\n  // prepareRoute(outlet: RouterOutlet) {\n  //   return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  // }\n}\n","<router-outlet></router-outlet>\n\n<app-loader></app-loader>\n<!-- <div [@routeAnimations]=\"prepareRoute(outlet)\">\n    <router-outlet #outlet=\"outlet\"></router-outlet>\n</div> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login-main/login/login.component';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { AlertComponent } from './shared/alert/alert.component';\nimport { SignupComponent } from './login-main/signup/signup.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { ForgotPasswordUsernameComponent } from './login-main/forgot-password-username/forgot-password-username.component';\nimport { ForgotPasswordComponent } from './login-main/forgot-password/forgot-password.component';\nimport { MainComponent } from './main/main.component';\nimport { IntakeCreateComponent } from './main/intake/intake-create/intake-create.component';\nimport { IntakeAllComponent } from './main/intake/intake-all/intake-all.component';\nimport { IntakeUserCreatedComponent } from './main/intake/intake-user-created/intake-user-created.component';\nimport { IntakeApprovalComponent } from './main/intake/intake-approval/intake-approval.component';\nimport { IntakeEditComponent } from './main/intake/intake-edit/intake-edit.component';\nimport { IntakeViewComponent } from './main/intake/intake-view/intake-view.component';\nimport { AutomationFactoryComponent } from './main/automation-factory/automation-factory.component';\nimport { IntakeComponent } from './main/intake/intake.component';\nimport { OrderListComponent } from './main/automation-factory/order-list/order-list.component';\nimport { CreateOrderComponent } from './main/automation-factory/create-order/create-order.component';\nimport { PendingComponent } from './main/intake/pending/pending.component';\nimport { LoginMainComponent } from './login-main/login-main.component';\nimport { DashboardComponent } from './main/dashboard/dashboard.component';\nimport { ProductivityDashboardComponent } from './main/dashboard/productivity-dashboard/productivity-dashboard.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { JwPaginationModule } from 'jw-angular-pagination';\nimport { ScheduledJobListComponent } from './main/automation-factory/scheduled-job-list/scheduled-job-list.component';\nimport { AutomatedComponent } from './main/intake/automated/automated.component';\nimport { NumberDirective } from './numbers.directive';\nimport { RealNumberDirective } from './realNumbers.directive';\nimport { AdminConsoleComponent } from './main/admin-console/admin-console.component';\nimport {DpDatePickerModule} from 'ng2-date-picker';\nimport { AutomationIntakeFormComponent } from './main/intake/automated/automation-intake-form/automation-intake-form.component';\nimport { IntakeAutomationEditComponent } from './main/intake/intake-automation-edit/intake-automation-edit.component';\nimport { LoaderComponent } from './shared/loader/loader.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoaderinterceptorService } from './service/loaderinterceptor.service';\nimport { ScheduledJobViewComponent } from './main/automation-factory/scheduled-job-list/scheduled-job-view/scheduled-job-view.component';\nimport { ScheduledJobEditComponent } from './main/automation-factory/scheduled-job-list/scheduled-job-edit/scheduled-job-edit.component';\nimport { TwodigitdecimaldirectiveDirective } from './twodigitdecimaldirective.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AlertComponent,\n    SignupComponent,\n    ForgotPasswordUsernameComponent,\n    ForgotPasswordComponent,\n    MainComponent,\n    IntakeCreateComponent,\n    IntakeAllComponent,\n    IntakeUserCreatedComponent,\n    IntakeApprovalComponent,\n    IntakeEditComponent,\n    IntakeViewComponent,\n    AutomationFactoryComponent,\n    IntakeComponent,\n    OrderListComponent,\n    CreateOrderComponent,\n    PendingComponent,\n    LoginMainComponent,\n    DashboardComponent,\n    ProductivityDashboardComponent,\n    ScheduledJobListComponent,\n    AutomatedComponent,\n    NumberDirective,\n    RealNumberDirective,\n    AdminConsoleComponent,\n    AutomationIntakeFormComponent,\n    IntakeAutomationEditComponent,\n    LoaderComponent,\n    ScheduledJobViewComponent,\n    ScheduledJobEditComponent,\n    TwodigitdecimaldirectiveDirective,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    JwPaginationModule,\n    DpDatePickerModule,\n    AppRoutingModule,\n    NgxSpinnerModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n     useClass:LoaderinterceptorService,multi:true\n     \n   }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../service/login.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { environment } from './../../../environments/environment';\n\n@Component({\n  selector: 'app-forgot-password-username',\n  templateUrl: './forgot-password-username.component.html',\n  styleUrls: ['./forgot-password-username.component.scss']\n})\nexport class ForgotPasswordUsernameComponent implements OnInit {\n\n  public message: any;\n  public username: any = '';\n  public selectedUser: any;\n  public usernameCheck: any = false;\n  public alertMessage: any = [];\n  public userList: any;\n  public alertdata = false;\n  public baseUrl = environment.baseUrl;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // this.loginService.getAllUsers().subscribe(\n    //   val => {\n    //     this.userList = val;\n    //     // console.log('users', this.userList);\n    //   });\n  }\n\n  onFPSubmit() {\n    this.username = (<HTMLSelectElement>document.getElementById(\"username_FP\")).value;\n    this.username = this.username.trim();\n    if (this.username === '') {\n      this.usernameCheck = true;\n      return;\n    } else {\n      this.usernameCheck = false;\n      if (this.username.includes('@')) {\n        this.selectedUser = this.userList.filter(item => item.email === this.username);\n      } else {\n        this.selectedUser = this.userList.filter(item => item.username === this.username);\n      }\n      if (this.selectedUser.length > 0) {\n        let maildata = {\n          mailContent: 'Click on the <a href=`' + this.baseUrl + '#/forgotPassword?username=' + this.selectedUser[0].username + '`>link</a> to reset password.',\n          // mailContent: 'Click on the <a href=`http://10.168.160.65:8080/rogers_prototype/#/forgotPassword?username=' + this.selectedUser[0].username + '`>link</a> to reset password.',\n          to: '',\n          cc: '',\n          Bcc: '',\n          testingRecipients: {\n            to: this.selectedUser[0].email,\n            cc: '',\n            Bcc: ''\n          },\n          subject: 'NETBOTS.AI-Password Reset Link'\n        };\n        this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n          val => {\n            this.message = val;\n            if (this.message.response == 'Mail Sent Successfully') {\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"success\", \"close\": true,\n                \"content\": \"<strong>Mail </strong>sent successfully!\",\n              }];\n              setTimeout(function () {\n                this.alertdata = false;\n                // this.router.navigateByUrl('');\n                //window.location.reload();\n                 \n              }.bind(this), 1000);\n            } else {\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"<strong>Failed</strong> to send mail\",\n              }\n              ];\n              // setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n            }\n          });\n      } else {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>Username/Email doesn't exist</strong>\",\n        }\n        ];\n        // setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n      }\n    }\n  }\n\n}\n","<app-alert [data]=\"alertMessage\" *ngIf=\"alertdata\"></app-alert>\n<div class=\"row m-0\">\n    <div class=\"col-md-4 form-fields offset-md-8\">\n        <div class=\"logo text-center\">\n            <img src=\"./assets/images/logo-login.png\" width=\"200px\">\n        </div>\n        <div class=\"title text-center\">Forgot Password</div>\n        <form>\n            <div class=\"form-row\">\n                <div class=\"form-group col\">\n                    <input type=\"email\" class=\"form-control full-width inputText\"\n                        [ngClass]=\" { 'is-invalid'  : usernameCheck } \" id=\"username_FP\" value=\"\"\n                        placeholder=\"name@prodapt.com\" required>\n                    <i class=\"fa fa-user icon signup-icon\" aria-hidden=\"true\"></i>\n                    <span class=\"floating-label signup-label\">Username/Email id</span>\n                    <div *ngIf=\"usernameCheck\" class=\"invalid-feedback d-block\" style=\"font-size:9px; margin: 5px 35px;\">Please enter\n                        a Username/Email id</div>\n                </div>\n            </div>\n            <p class=\"label-link trgslide\" id=\"signIn\">Login</p>\n            <div class=\"text-dark text-center\">\n                <button type=\"submit\" (click)=\"onFPSubmit()\" class=\"btn btn-next\"><i class=\"fa fa-chevron-right\"\n                        aria-hidden=\"true\"></i></button>\n                <div class=\"request-redirection\">Not a member? <span><a href=\"#\" class=\"card-link trgslide\" id=\"sign-up\">Sign Up Now</a></span>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../service/login.service';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public message: any;\n  public selectedUser: any;\n  public alertMessage: any = [];\n  public alertdata = false;\n  resetPassword: FormGroup;\n  submitted = false;\n  public invalidPassword: boolean;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((params: Params) => {\n      // console.log('params', params.username);\n      this.selectedUser = params.username;\n    });\n    this.resetPassword = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required]\n    });\n    // this.selectedUser = localStorage.getItem('selectedUsername');\n    // localStorage.removeItem('selectedUsername');\n  }\n\n  get f() { return this.resetPassword.controls; }\n\n  passwordFails(checks: boolean[]): boolean {\n    let counter = 0;\n    for (let i = 0; i < checks.length; i++) {\n      if (checks[i]) {\n        counter += 1;\n      }\n    }\n    return counter < 4;\n  }\n\n\n  validatePassword(password: string) {\n    let hasLower = false;\n    let hasUpper = false;\n    let hasNum = false;\n    let hasSpecial = false;\n\n    const lowercaseRegex = new RegExp(\"(?=.*[a-z])\");// has at least one lower case letter\n    if (lowercaseRegex.test(password)) {\n      hasLower = true;\n    }\n\n    const uppercaseRegex = new RegExp(\"(?=.*[A-Z])\"); //has at least one upper case letter\n    if (uppercaseRegex.test(password)) {\n      hasUpper = true;\n    }\n\n    const numRegex = new RegExp(\"(?=.*\\\\d)\"); // has at least one number\n    if (numRegex.test(password)) {\n      hasNum = true;\n    }\n\n    const specialcharRegex = new RegExp(\"[!@#$%^&*(),.?\\\":{}|<>]\");\n    if (specialcharRegex.test(password)) {\n      hasSpecial = true;\n    }\n    this.invalidPassword = this.passwordFails([hasLower, hasUpper, hasNum, hasSpecial]);\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetPassword.invalid) {\n      return;\n    }\n\n    if (this.resetPassword.value.password == this.resetPassword.value.confirmPassword) {\n      let newData = {\n        password: this.resetPassword.value.password\n      };\n      this.loginService.changePassword(JSON.stringify(newData), this.selectedUser).subscribe(\n        val => {\n          // this.message = val;\n          // this.message = this.message.message;\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"success\", \"close\": true,\n            \"content\": \"<strong>Password changed successfully</strong>\",\n          }];\n          // setTimeout(function () {\n          //   this.alertdata = false;\n          //   this.router.navigateByUrl('loginmain');\n          // }.bind(this), 5000);\n        },\n        error => {\n          this.message = error;\n          this.message = this.message.error.message;\n          // console.log('login', this.message);\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong>\" + this.message + \"</strong>\",\n          }\n          ];\n          // setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n        }\n      );\n    }\n\n  }\n}\n","<div class=\"login\">\n    <div class=\"container-fluid middle-align\">\n        <div class=\"row m-0\">\n            <div class=\"col-md-8 align-self-center\">\n                <div class=\"heading\">\n                    Together,<br>we make more possible.\n                </div>\n                <div class=\"sub-heading\">\n                    As a team of proud Canadians, we make more possible for our employees, our customers, our\n                    communities, and our country.\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"login-form\">\n        <div class=\"container-fluid middle-align slider-wrap forgot-2 active\" id=\"forgot-pass-2\">\n            <div class=\"row m-0\">\n                <div class=\"col-md-4 form-fields offset-md-8\">\n                    <div class=\"logo text-center\">\n                        <img src=\"./assets/images/logo-login.png\" width=\"200px\">\n                    </div>\n                    <div class=\"title text-center\">Forgot Password</div>\n                    <form>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col\">\n                                <input type=\"password\" placeholder=\"**********\" formControlName=\"password\"\n                                    (keyup)=\"validatePassword($event.target.value)\" class=\"form-control inputText\"\n                                    [ngClass]=\"{ 'is-invalid': (submitted && f.password.errors) || (submitted && invalidPassword) }\" />\n                                    <img class=\"icon-key\" src=\"./assets/images/key.png\" alt=\"password\" width=\"22px\"\n                                    height=\"22px\">\n                                <span class=\"floating-label signup-label\">New Password</span>\n                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\" style=\"font-size:9px; margin: 5px 35px;\">\n                                    <div *ngIf=\"f.password.errors.required\">Password is required.</div>\n                                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 8\n                                        characters.</div>\n                                </div>\n                                <div *ngIf=\"submitted && (!f.password.errors || !f.password.errors.required) && invalidPassword\"\n                                    class=\"invalid-feedback\" style=\"font-size:9px; margin: 5px 35px;\">Password must contain atleast 1\n                                    lower case, 1 upper case, 1 number and a special character.</div>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col\">\n                                <input type=\"password\" placeholder=\"**********\" formControlName=\"confirmPassword\"\n                                    class=\"form-control inputText\"\n                                    [ngClass]=\"{ 'is-invalid': (submitted && f.confirmPassword.errors) || (!f.confirmPassword.errors && (f.password.value !== f.confirmPassword.value)) }\" />\n                                    <img class=\"icon-key\" src=\"./assets/images/key.png\" alt=\"password\" width=\"22px\"\n                                    height=\"22px\">\n                                    <span class=\"floating-label signup-label\">Confirm Password</span>\n                                <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\" style=\"font-size:9px; margin: 5px 35px;\">\n                                    <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is\n                                        required</div>\n                                </div>\n                                <div *ngIf=\"(!f.confirmPassword.errors || !f.confirmPassword.errors.required) && (f.password.value !== f.confirmPassword.value)\"\n                                    class=\"invalid-feedback d-block\" style=\"font-size:9px; margin: 5px 35px;\">Passwords don't match</div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"text-dark text-center\">\n                            <button type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-next\"><i\n                                class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i></button>\n                        </div>\n                    </form>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-main',\n  templateUrl: './login-main.component.html',\n  styleUrls: ['./login-main.component.scss']\n})\nexport class LoginMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"login\">\n    <div class=\"container-fluid middle-align\">\n        <div class=\"row m-0\">\n            <div class=\"col-md-8 align-self-center\">\n                <div class=\"heading\">\n                    Together,<br>we make more possible.\n                </div>\n                <div class=\"sub-heading\">\n                    As a team of proud Canadians, we make more possible for our employees, our customers, our\n                    communities, and our country.\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"login-form\">\n        <div class=\"container-fluid middle-align signIn slider-wrap active\" id=\"login\">\n            <app-login></app-login>\n        </div>\n    </div>\n    <div class=\"login-form\">\n        <div class=\"container-fluid middle-align slider-wrap forgot\" id=\"forgot-pass\">\n            <app-forgot-password-username></app-forgot-password-username>\n        </div>\n    </div>\n    <div class=\"login-form\">\n        <div class=\"container-fluid middle-align slider-wrap sign-up\" id=\"sign-up\">\n            <app-signup></app-signup>\n        </div>\n    </div>\n    <!-- <div class=\"login-form\">\n        <div class=\"container-fluid middle-align slider-wrap forgot-2 active\" id=\"forgot-pass-2\">\n            <div class=\"row m-0\">\n                <div class=\"col-md-4 form-fields offset-md-8\">\n                    <div class=\"logo text-center\">\n                        <img src=\"assets/images/logo-login.png\" width=\"200px\">\n                    </div>\n                    <div class=\"title text-center\">Forgot Password</div>\n                    <form>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col\">\n\n                                <input type=\"password\" class=\"form-control inputText\" placeholder=\"**********\" />\n                                <img class=\"icon-key\" src=\"assets/images/key.png\" alt=\"password\" width=\"22px\"\n                                    height=\"22px\">\n                                <span class=\"floating-label signup-label\">New Password</span>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col\">\n\n                                <input type=\"password\" class=\"form-control inputText\" placeholder=\"**********\" />\n                                <img class=\"icon-key\" src=\"assets/images/key.png\" alt=\"password\" width=\"22px\"\n                                    height=\"22px\">\n                                <span class=\"floating-label signup-label\">Confirm Password</span>\n                            </div>\n                        </div>\n\n\n                        <div class=\"text-dark text-center\">\n                            <button type=\"button\" class=\"btn btn-next\"><i class=\"fa fa-chevron-right\"\n                                    aria-hidden=\"true\"></i></button>\n                        </div>\n                    </form>\n                </div>\n\n            </div>\n        </div>\n    </div> -->\n</div>","import { Component, OnInit } from '@angular/core';\n// import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../service/login.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as CryptoJS from 'crypto-js';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public message: any;\n  public username: any = '';\n  public password: any = '';\n  public email: any = '';\n  public passwordCheck: any = false;\n  public usernameCheck: any = false;\n  public alertMessage: any = [];\n  public alertdata = false;\n  encryptionKey = \"pr#daptR#gers@12\";\n  userList: any;\n  user: any;\n  registerForm: FormGroup;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // this.loginService.getAllUsers().subscribe(\n    //   val => {\n    //     this.userList = val;\n    //     console.log('users', this.userList);\n    //   });\n  }\n\n  onLoginSubmit() {\n    this.passwordCheck = false;\n    this.usernameCheck = false;\n    this.password = (<HTMLSelectElement>document.getElementById(\"loginPassword\")).value;\n    this.username = (<HTMLSelectElement>document.getElementById(\"loginUsername\")).value;\n    this.password = this.password.trim();\n    this.username = this.username.trim();\n    if (this.username !== '' && this.password !== '') {\n      // if (this.username.includes('@')) {\n      //   this.email = this.username;\n      //   this.username = '';\n      // } else {\n      //   this.email = '';\n      // }\n      // console.log('input password', this.password.trim());\n      let passwordd = CryptoJS.AES.encrypt(this.password.trim(), this.encryptionKey.trim()).toString();\n      // console.log('password', passwordd);\n      // let decrypt = CryptoJS.AES.decrypt(passwordd.trim(), this.encryptionKey.trim()).toString(CryptoJS.enc.Utf8);\n      // console.log('decrypt', decrypt);\n      // this.conversionEncryptOutput = CryptoJS.AES.encrypt(this.plainText.trim(), this.encPassword.trim()).toString();\n      let loginData = {\n        lanId: this.username,\n        // email: this.email,\n        password: passwordd\n      };\n      let auth = loginData.lanId+':'+this.password.trim(); \n      localStorage.setItem('basicAuth',auth.toString());\n      this.loginService.login(JSON.stringify(loginData)).subscribe(\n        val => {\n          this.user = val;\n          // this.user = this.user.data;\n          // this.message = this.message.message;\n          // if (this.username) {\n          //   this.user = this.userList.filter(item => item.username === this.username);\n          // } else {\n          //   this.user = this.userList.filter(item => item.email === this.email);\n          // }\n          localStorage.setItem('USER', JSON.stringify(this.user.userData));\n          localStorage.setItem('MENU', JSON.stringify(this.user.menuList));\n          localStorage.setItem('ROLES', JSON.stringify(this.user.role));\n          this.router.navigateByUrl('main');\n          // this.alertdata = true;\n          // this.alertMessage = [{\n          //   \"type\": \"success\", \"close\": true,\n          //   \"content\": \"<strong>\" + this.message + \"</strong>\",\n          // }];\n          // setTimeout(function () {\n          //   this.alertdata = false;\n          //   this.router.navigateByUrl('intake');\n          // }.bind(this), 5000);\n        },\n        error => {\n          console.log('error', error);\n          this.message = error;\n          this.message = this.message.error.message;\n          // console.log('login', this.message);\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong>\" + this.message + \"</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n        }\n      );\n    } else {\n      if (this.password === '') {\n        this.passwordCheck = true;\n      }\n      if (this.username === '') {\n        this.usernameCheck = true;\n      }\n    }\n  }\n\n}\n","<app-alert [data]=\"alertMessage\" *ngIf=\"alertdata\" class=\"alert-message\"></app-alert>\n<div class=\"row m-0\">\n  <div class=\"col-md-4 form-fields offset-md-8\">\n    <div class=\"logo text-center\">\n      <img src=\"./assets/images/logo-login.png\" width=\"200px\">\n    </div>\n    <div class=\"title text-center\">Member Login</div>\n    <form>\n      <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <input type=\"text\" class=\"form-control full-width inputText\" [ngClass]=\" { 'is-invalid'  : usernameCheck } \"\n            id=\"loginUsername\" value=\"\" placeholder=\"\" required>\n          <i class=\"fa fa-user icon signup-icon\" aria-hidden=\"true\"></i>\n          <span class=\"floating-label signup-label\">LAN ID</span>\n          <div *ngIf=\"usernameCheck\" class=\"invalid-feedback d-block\" style=\"font-size:9px; margin: 5px 35px;\">Please\n            enter a\n            LAN ID</div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <input type=\"password\" class=\"form-control inputText\" [ngClass]=\" { 'is-invalid'  : passwordCheck } \"\n            id=\"loginPassword\" value=\"\" placeholder=\"\" required>\n          <!-- <i class=\"fa fa-envelope icon signup-icon\" aria-hidden=\"true\"></i> -->\n          <img class=\"icon-key\" src=\"./assets/images/key.png\" alt=\"password\" width=\"22px\" height=\"22px\">\n          <span class=\"floating-label signup-label\">Password</span>\n          <div *ngIf=\"passwordCheck\" class=\"invalid-feedback d-block\" style=\"font-size:9px; margin: 5px 35px;\">Please\n            enter password\n          </div>\n        </div>\n      </div>\n      <div class=\"row\" style=\"padding: 0 51px;\">\n        <div class=\"col label-link p-0\">Login with your OSS AD ID and PASSWORD</div>\n      </div>\n      <!-- <p class=\"label-link trgslide\" id=\"forgot\">Forgot Password?</p> -->\n      <div class=\"text-dark text-center\">\n        <button type=\"button\" (click)=\"onLoginSubmit()\" class=\"btn btn-next\"><i class=\"fa fa-chevron-right\"\n          aria-hidden=\"true\"></i></button>\n        <!-- <div class=\"request-redirection\">Not a member? <span><a href=\"#\" class=\"card-link trgslide\" id=\"sign-up\">Sign Up Now</a></span>\n        </div> -->\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n// import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../service/login.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as CryptoJS from 'crypto-js';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  public message: any;\n  public username: any = '';\n  public password: any = '';\n  public email: any = '';\n  public name: any = '';\n  public emailCheck: any = false;\n  public usernameCheck: any = false;\n  public confirmPassword: any = '';\n  public alertMessage: any = [];\n  public alertdata = false;\n  registerForm: FormGroup;\n  submitted = false;\n  public invalidPassword: boolean;\n  encryptionKey = \"pr#daptR#gers@12\";\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  duplicateEmailCheck() {\n    this.emailCheck = false;\n  }\n\n  passwordFails(checks: boolean[]): boolean {\n    let counter = 0;\n    for (let i = 0; i < checks.length; i++) {\n      if (checks[i]) {\n        counter += 1;\n      }\n    }\n    return counter < 4;\n  }\n\n\n  validatePassword(password: string) {\n    let hasLower = false;\n    let hasUpper = false;\n    let hasNum = false;\n    let hasSpecial = false;\n\n    const lowercaseRegex = new RegExp(\"(?=.*[a-z])\");// has at least one lower case letter\n    if (lowercaseRegex.test(password)) {\n      hasLower = true;\n    }\n\n    const uppercaseRegex = new RegExp(\"(?=.*[A-Z])\"); //has at least one upper case letter\n    if (uppercaseRegex.test(password)) {\n      hasUpper = true;\n    }\n\n    const numRegex = new RegExp(\"(?=.*\\\\d)\"); // has at least one number\n    if (numRegex.test(password)) {\n      hasNum = true;\n    }\n\n    const specialcharRegex = new RegExp(\"[!@#$%^&*(),.?\\\":{}|<>]\");\n    if (specialcharRegex.test(password)) {\n      hasSpecial = true;\n    }\n    this.invalidPassword = this.passwordFails([hasLower, hasUpper, hasNum, hasSpecial]);\n  }\n\n  duplicateUsernameCheck() {\n    this.usernameCheck = false;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.password = this.registerForm.value.password;\n    this.username = this.registerForm.value.username;\n    this.name = this.registerForm.value.name;\n    this.email = this.registerForm.value.email;\n    this.confirmPassword = this.registerForm.value.confirmPassword;\n    console.log('input password', this.password.trim());\n    let passwordd = CryptoJS.AES.encrypt(this.password.trim(), this.encryptionKey.trim()).toString();\n    console.log('password', passwordd);\n    if (this.password === this.confirmPassword) {\n      let signUpData = {\n        name: this.name,\n        username: this.username,\n        email: this.email,\n        password: passwordd\n      };\n      this.loginService.signup(JSON.stringify(signUpData)).subscribe(\n        val => {\n          // this.message = val;\n          // this.message = this.message.message;\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"success\", \"close\": true,\n            \"content\": \"<strong>User registered successfully</strong>\",\n          }];\n          setTimeout(function () {\n            this.alertdata = false;\n            // this.router.navigateByUrl('loginmain');\n            window.location.reload();\n          }.bind(this), 1000);\n        },\n        error => {\n          this.message = error;\n          this.message = this.message.error.message;\n          // console.log('login', this.message);\n          if (this.message.includes('Email')) {\n            this.emailCheck = true;\n          } else if (this.message.includes('Username')) {\n            this.usernameCheck = true;\n          } else {\n            this.alertdata = true;\n            this.alertMessage = [{\n              \"type\": \"danger\", \"close\": true,\n              \"content\": \"<strong>\" + this.message + \"</strong>\",\n            }\n            ];\n            setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n          }\n        }\n      );\n    } else {\n      return;\n    }\n\n\n  }\n}\n","<!-- <body>\n    <div class=\"page-login\">\n        <div class=\"card\" style=\"width: 19rem;\">\n            <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata\"></app-alert>\n            <div class=\"card-body\">\n                <div class=\"card-logo\">TAF</div>\n                <h5 class=\"card-title\">Welcome</h5>\n                <h6 class=\"card-subtitle\">Sign Up</h6>\n                <form [formGroup]=\"registerForm\">\n                    <div class=\"form-group\">\n\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control inputText\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n                        <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                        <span class=\"floating-label\">Enter Name</span>\n                        <div *ngIf=\"submitted && f.name.errors\"\n                            style=\"font-size:9px; margin-top: -10px; margin-bottom: 10px;\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.name.errors.required\">Name is required</div>\n                        </div>\n\n\n\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\"\n                            (keyup)=\"duplicateUsernameCheck()\"\n                            [ngClass]=\"{ 'is-invalid': (submitted && f.username.errors) || usernameCheck }\" />\n                        <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                        <span class=\"floating-label\">Enter Username</span>\n                        <div *ngIf=\"!f.username.errors && usernameCheck\" class=\"invalid-feedback d-block\"\n                            style=\"font-size:9px; margin-top: -10px;\">Username already exists</div>\n                        <div *ngIf=\"submitted && f.username.errors\"\n                            style=\"font-size:9px; margin-top: -10px; margin-bottom: 10px;\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                        </div>\n\n\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\" (keyup)=\"duplicateEmailCheck()\"\n                            [ngClass]=\"{ 'is-invalid': (submitted && f.email.errors) || emailCheck }\" />\n                        <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                        <span class=\"floating-label\">Enter Your email address</span>\n                        <div *ngIf=\"!f.email.errors && emailCheck\" class=\"invalid-feedback d-block\"\n                            style=\"font-size:9px; margin-top: -10px;\">Email address already exists</div>\n                        <div *ngIf=\"submitted && f.email.errors\"\n                            style=\"font-size:9px; margin-top: -10px; margin-bottom: 10px;\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"f.email.errors.email || f.email.errors.pattern\">Email must be a valid email\n                                address\n                            </div>\n                        </div>\n\n\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" (keyup)=\"validatePassword($event.target.value)\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                        <i class=\"fa fa-key\" aria-hidden=\"true\"></i>\n                        <span class=\"floating-label\">Enter the Password</span>\n                        <div *ngIf=\"submitted && f.password.errors\"\n                            style=\"font-size:9px; margin-top: -10px; margin-bottom: 10px;\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 8\n                                characters</div>\n                            <div *ngIf=\"!f.password.errors.required && invalidPassword\">Password must contain atleast 1 lower case, 1 upper case, 1 number and a special character</div>\n                        </div>\n\n\n                        <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': (submitted && f.confirmPassword.errors) || (f.password.value !== f.confirmPassword.value) }\" />\n                        <i class=\"fa fa-key\" aria-hidden=\"true\"></i>\n                        <span class=\"floating-label\">Confirm Password</span>\n                        <div *ngIf=\"submitted && f.confirmPassword.errors\" style=\"font-size:9px; margin-top: -10px;\"\n                            class=\"invalid-feedback\">\n                            <div *ngIf=\"f.confirmPassword.errors.required\" style=\"font-size:9px;\">Confirm Password is\n                                required</div>\n                        </div>\n                        <div *ngIf=\"!f.confirmPassword.errors && (f.password.value !== f.confirmPassword.value)\"\n                            class=\"invalid-feedback d-block\" style=\"font-size:9px; margin-top: -10px;\">Passwords don't\n                            match</div>\n\n                        <button type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-danger\">SIGN UP<i\n                                class=\"fa fa-chevron-right\" aria-hidden=\"true\"></i></button>\n                        \n                        <p style=\"text-align: center;\">Already have an account? <a routerLink=\"/login\" routerLinkActive=\"active-link\">Signin</a></p>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</body> -->\n<app-alert [data]=\"alertMessage\" *ngIf=\"alertdata\"></app-alert>\n<div class=\"row m-0\">\n    <div class=\"cold-md-4 form-fileds offset-md-8 w-100\">\n        <div class=\"logo text-center\">\n            <img src=\"./assets/images/logo-login.png\" width=\"200px\">\n        </div>\n        <div class=\"title text-center\">Member Login</div> \n        <form [formGroup]=\"registerForm\">\n            <div class=\"form-row\">\n                <div class=\"form-group col\">\n                    <input type=\"text\" formControlName=\"name\" class=\"form-control full-width inputText\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n                    <i class=\"fa fa-user icon signup-icon\" aria-hidden=\"true\"></i>\n                    <span class=\"floating-label signup-label\">Enter Name</span>\n                    <div *ngIf=\"submitted && f.name.errors\"\n                        style=\"font-size:9px; margin-bottom: 10px;\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.name.errors.required\">Name is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group col\">\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control full-width inputText\"\n                        (keyup)=\"duplicateUsernameCheck()\"\n                        [ngClass]=\"{ 'is-invalid': (submitted && f.username.errors) || usernameCheck }\" />\n                    <i class=\"fa fa-user icon signup-icon\" aria-hidden=\"true\"></i>\n                    <span class=\"floating-label signup-label\">Enter Username</span>\n                    <div *ngIf=\"!f.username.errors && usernameCheck\" class=\"invalid-feedback d-block\"\n                        style=\"font-size:9px;\">Username already exists</div>\n                    <div *ngIf=\"submitted && f.username.errors\"\n                        style=\"font-size:9px; margin-bottom: 10px;\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col\">\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control full-width\" (keyup)=\"duplicateEmailCheck()\"\n                        [ngClass]=\"{ 'is-invalid': (submitted && f.email.errors) || emailCheck }\" />\n                    <i class=\"fa fa-envelope icon signup-icon\" aria-hidden=\"true\"></i>\n                    <span class=\"floating-label signup-label\">Enter Your email address</span>\n                    <div *ngIf=\"!f.email.errors && emailCheck\" class=\"invalid-feedback d-block\"\n                        style=\"font-size:9px;\">Email address already exists</div>\n                    <div *ngIf=\"submitted && f.email.errors\"\n                        style=\"font-size:9px; margin-bottom: 10px;\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                        <div *ngIf=\"f.email.errors.email || f.email.errors.pattern\">Email must be a valid email\n                            address\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col\">\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control full-width inputText\" (keyup)=\"validatePassword($event.target.value)\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <i class=\"fa fa-key icon signup-icon\" aria-hidden=\"true\"></i>\n                <span class=\"floating-label signup-label\">Enter the Password</span>\n                <div *ngIf=\"submitted && f.password.errors\"\n                    style=\"font-size:9px; margin-bottom: 10px;\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 8\n                        characters</div>\n                    <div *ngIf=\"!f.password.errors.required && invalidPassword\">Password must contain atleast 1 lower case, 1 upper case, 1 number and a special character</div>\n                </div>\n                </div>\n                <div class=\"form-group col\">\n                    <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control full-width inputText\"\n                        [ngClass]=\"{ 'is-invalid': (submitted && f.confirmPassword.errors) || (f.password.value !== f.confirmPassword.value) }\" />\n                    <i class=\"fa fa-key icon signup-icon\" aria-hidden=\"true\"></i>\n                    <span class=\"floating-label signup-label\">Confirm Password</span>\n                    <div *ngIf=\"submitted && f.confirmPassword.errors\" style=\"font-size:9px;\"\n                        class=\"invalid-feedback\">\n                        <div *ngIf=\"f.confirmPassword.errors.required\" style=\"font-size:9px;\">Confirm Password is\n                            required</div>\n                    </div>\n                    <div *ngIf=\"!f.confirmPassword.errors && (f.password.value !== f.confirmPassword.value)\"\n                        class=\"invalid-feedback d-block\" style=\"font-size:9px;\">Passwords don't\n                        match</div>\n                </div>\n            </div>\n            <div class=\"text-dark text-center\">\n                <button type=\"button\" (click)=\"onSubmit()\" class=\"btn btn-next mt-3\"><i class=\"fa fa-chevron-right\"\n                        aria-hidden=\"true\"></i></button>\n    \n                <p class=\"request-redirection\">Already have an account? <span><a href=\"#\" class=\"trgslide\" id=\"signIn \">Sign In</a></span></p>\n            </div>\n        </form>\n    </div>\n</div>\n    \n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginService } from '../../service/login.service';\nimport { AdminPortalService } from '../../service/admin-portal.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder,FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as CryptoJS from 'crypto-js';\nimport { Subscription, timer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-admin-console',\n  templateUrl: './admin-console.component.html',\n  styleUrls: ['./admin-console.component.scss']\n})\nexport class AdminConsoleComponent implements OnInit {\n  public modalTitle:any;\n  public serverList:any;\n  public serverDetailUpadte:any;\n  public serverDetailsForm:any;\n  public serverDetailList:any;\n  public submitted = false;\n  public serverTypeList:any;\n  public serverType:any;\n  public serverName :any;\n  public serverState = false;\n  public serverStatus= 'Inactive';\n  public alertdata = false;\n  public alertMessage: any = [];\n  public serverTypeName:any;\n  public createdServerId:any;\n  public serverDetailsFormEdit:any;\n  public activeShow:any;\n  public isActive= false;\n  public serverTypeNameEdit:any;\n  public serverNameEdit:any;\n  public serverTypeEdit:any;\n  public serverIdEdit:any;\n  public submittedEdit:any;\n  public passwordEdit:any;\n  public serverTypeId:any;\n  public serverTypeIdEdit:any;\n  encryptionKey = \"pr#daptR#gers@12\";\n  public password:any;\n  pageOfItems: Array<any>;\n  pageSize: any;\n  public serverAlreadyExits:any;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private adminPortalService: AdminPortalService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.serverStatus = 'Active';\n    this.serverState = true;\n    this.serverType = {};\n    this.pageSize = 10;\n    this.serverType['typeId']= '';\n    this.serverTypeName = '';\n    this.serverTypeNameEdit = '';\n    /*******GET ALL SERVER LIST***********/\n    this.adminPortalService.getServerList().subscribe(val =>{\n      this.serverList = val;\n      this.serverList = this.serverList.data;\n      console.log(this.serverList);\n    })\n\n    /***********GET SERVER TYPE LIST************/\n    this.adminPortalService.getServerType().subscribe(val =>{\n      this.serverTypeList = val;\n      this.serverTypeList = this.serverTypeList.data;\n      console.log(\"**************server Type************\",this.serverTypeList);\n    })\n\n    /****CREATE A NEW FORM GROUP*****/\n    this.serverDetailsForm = new FormGroup({\n      'serverType': new FormControl('', Validators.required),\n      'serverName': new FormControl('', Validators.required),\n      'serverIp': new FormControl('', Validators.required),\n      'bindDn': new FormControl('', Validators.required),\n      'baseDn': new FormControl(''),\n      'password': new FormControl('', Validators.required),\n      'serverUrl': new FormControl('', Validators.required),\n      'serverPort': new FormControl('', Validators.required),\n    });\n  }\n\n   /*****FORM CONTROL*******/\n   get v() {\n    return this.serverDetailsForm.controls;\n  }\n  get m() {\n    return this.serverDetailUpadte.controls;\n  }\n\n  /*******MODAL HEADER*********/\n  getModal(modalName){\n    this.modalTitle = modalName;\n    console.log(this.modalTitle);\n  }\n\n  /*****GET SERVER-ID FROM SERVER TYPE******/\n  getServerId(event: any){\n    console.log(event);\n    this.serverTypeList.forEach(element => {\n      if (element.typeName == event) {\n        this.serverName = element.typeName;\n        this.serverTypeId = element.typeId;\n      }\n    });\n    if(this.serverName == 'LDAP'){\n      this.serverDetailsForm.controls['baseDn'].setValidators(Validators.required);\n      this.serverDetailsForm.controls[\"baseDn\"].updateValueAndValidity();\n    }\n    else{\n      this.serverDetailsForm.controls['baseDn'].clearValidators(Validators.required);\n      this.serverDetailsForm.controls[\"baseDn\"].updateValueAndValidity();\n    }\n    this.serverType = {};\n    this.serverType['typeId']= this.serverTypeId;\n    this.serverTypeName = event;\n    console.log(this.serverType);\n  }\n  /*****GET SERVER-ID FROM SERVER TYPE FOR EDIT******/\n  getServerIdEdit(event: any){\n    console.log(event);\n    this.serverTypeList.forEach(element => {\n      if (element.typeName == event) {\n        this.serverNameEdit = element.typeName;\n        this.serverTypeIdEdit = element.typeId;\n      }\n    });\n    if(this.serverNameEdit == 'LDAP'){\n      this.serverDetailUpadte.controls['baseDnEdit'].setValidators(Validators.required);\n      this.serverDetailUpadte.controls[\"baseDnEdit\"].updateValueAndValidity();\n    }\n    else{\n      this.serverDetailUpadte.controls['baseDnEdit'].clearValidators(Validators.required);\n      this.serverDetailUpadte.controls[\"baseDnEdit\"].updateValueAndValidity();\n    }\n    this.serverTypeEdit = {};\n    this.serverTypeEdit['typeId']= this.serverTypeIdEdit;\n    this.serverTypeNameEdit = this.serverNameEdit;\n  }\n\n  /*****GET SERVER-STATUS FROM CHECKBOX******/\n  activateServer(event: any){\n    if (event.target.checked === true) {\n      this.serverState = true;\n      this.serverStatus = 'Active';\n    } else {\n      this.serverState = false;\n      this.serverStatus = 'Inactive';\n    }\n  }\n  /*****GET SERVER-STATUS FROM CHECKBOX FOR EDIT******/\n  activateServerEdit(event: any){\n    if (event.target.checked === true) {\n      this.isActive = true;\n      this.serverStatus = 'Active';\n    } else {\n      this.isActive = false;\n      this.serverStatus = 'Inactive';\n    }\n  }\n\n  /*******CREATE A NEW SERVER DETAILS*********/\n  createNew(){\n    this.submitted = true;\n    console.log(this.serverDetailsForm);\n    console.log(this.serverDetailsForm.controls);\n    this.password = this.serverDetailsForm.value.password.trim();\n    let passwordencrypted = CryptoJS.AES.encrypt(this.password.trim(), this.encryptionKey.trim()).toString();\n    if (this.serverDetailsForm.invalid) {\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"<strong> Kindly provide the Server details</strong>\",\n      }\n      ];\n      setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n      return;\n    } else {\n      let pojo={};\n      pojo['active'] = this.serverState;\n      pojo['baseDn'] = this.serverDetailsForm.value.baseDn;\n      pojo['bindDn'] = this.serverDetailsForm.value.bindDn;\n      pojo['id'] = 0;\n      pojo['password'] = passwordencrypted;\n      pojo['serverIp'] = this.serverDetailsForm.value.serverIp;\n      pojo['serverName'] = this.serverDetailsForm.value.serverName;\n      pojo['serverPort'] = this.serverDetailsForm.value.serverPort;\n      pojo['serverType'] = this.serverType;\n      pojo['serverUrl'] = this.serverDetailsForm.value.serverUrl;\n      // pojo['status'] = this.serverStatus;\n      console.log(pojo);\n      pojo = JSON.stringify(pojo);\n      this.adminPortalService.createServer(pojo).subscribe(val=>{\n        let response: any = val;\n            this.createdServerId = response.data.serverName;\n            if(response.message == \"Another Server of this type is already active. Please make it inactive!\"){\n              this.alertdata = true;\n              this.serverAlreadyExits = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"Another Server with HostName \"+\"<strong>'\"+ this.createdServerId +\"'</strong>\" + \" is already active. Please make it inactive!\",\n              }\n              ];\n              setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n            }\n            else{\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"success\", \"close\": true,\n                \"content\": \"<strong>Server created successfully!</strong>\",\n              }];\n              setTimeout(function () {\n                this.alertdata = false;\n                this.resetform();\n              }.bind(this), 1000);\n            }    \n      }, error => {\n        let errorResponse = error;\n     })\n    }\n    console.log(this.serverType);\n  }\n\n  /*********FETCH SERVER DETAILS BY ID*************/\n  fetchDetails(event,id){\n      let classnames = (<HTMLInputElement>document.getElementById('list'+id)).className;\n      if(classnames.includes('collapsed')){\n          this.adminPortalService.getServerDetailList(event).subscribe(val =>{\n          this.serverDetailList = val;\n          console.log(this.serverDetailList);\n          this.serverDetailList = this.serverDetailList.data;\n          this.serverIdEdit = this.serverDetailList.id;\n          this.serverTypeEdit = {};\n          this.serverTypeNameEdit = this.serverDetailList.serverType.typeName;\n          console.log(this.serverNameEdit);\n          this.serverTypeEdit['typeId']= this.serverDetailList.serverType.typeId;\n          let decrypt = CryptoJS.AES.decrypt(this.serverDetailList.password.trim(), this.encryptionKey.trim()).toString(CryptoJS.enc.Utf8);\n          console.log(this.serverDetailList.password);\n          this.serverDetailUpadte = new FormGroup({\n            serverNameEdit: new FormControl(this.serverDetailList.serverName, Validators.required),\n            serverTypeEdit: new FormControl(this.serverDetailList.serverType.typeName, Validators.required),\n            serverIpEdit: new FormControl(this.serverDetailList.serverIp, Validators.required),\n            bindDnEdit: new FormControl(this.serverDetailList.bindDn, Validators.required),\n            baseDnEdit: new FormControl(this.serverDetailList.baseDn),\n            passwordEdit: new FormControl(decrypt, Validators.required),\n            serverUrlEdit: new FormControl(this.serverDetailList.serverUrl, Validators.required),\n            serverPortEdit: new FormControl(this.serverDetailList.serverPort, Validators.required),\n          })\n          this.activeShow = id;\n          if(this.serverDetailList.active){\n            this.isActive = true;\n          }\n          else{\n            this.isActive = false;\n          }\n        });\n      }\n      else{\n        this.activeShow = null;\n        console.log(this.serverDetailList);\n      }\n  }\n\n  /**********UPDATE THE SERVER DETAILS***************/\n  updateDetails(){\n    this.submittedEdit = true;\n    this.passwordEdit = this.serverDetailUpadte.value.passwordEdit;\n    let passwordencrypted = CryptoJS.AES.encrypt(this.passwordEdit.trim(), this.encryptionKey.trim()).toString();\n    if (this.serverDetailUpadte.invalid) {\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"<strong> Kindly provide the Server details</strong>\",\n      }\n      ];\n      setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n      return;\n    } else {\n      let pojo={};\n      pojo['active'] = this.isActive;\n      pojo['baseDn'] = this.serverDetailUpadte.value.baseDnEdit;\n      pojo['bindDn'] = this.serverDetailUpadte.value.bindDnEdit;\n      pojo['id'] = this.serverIdEdit;\n      pojo['password'] = passwordencrypted;\n      pojo['serverIp'] = this.serverDetailUpadte.value.serverIpEdit;    \n      pojo['serverName'] = this.serverDetailUpadte.value.serverNameEdit;\n      pojo['serverPort'] = this.serverDetailUpadte.value.serverPortEdit;\n      pojo['serverType'] = this.serverTypeEdit;\n      pojo['serverUrl'] = this.serverDetailUpadte.value.serverUrlEdit;\n      console.log(pojo);\n      pojo = JSON.stringify(pojo);\n      this.adminPortalService.createServer(pojo).subscribe(val =>{\n        let response: any = val;\n        this.createdServerId = response.data.serverName;\n            if(response.message == \"Another Server of this type is already active. Please make it inactive!\"){\n              this.alertdata = true;\n              this.serverAlreadyExits = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"Another Server with HostName \"+\"<strong>'\"+ this.createdServerId +\"'</strong>\" + \" is already active. Please make it inactive!\",\n              }\n              ];\n              setTimeout(function () { this.alertdata = false;this.resetform(); }.bind(this), 3000);\n            }\n            else{\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"success\", \"close\": true,\n                \"content\": \"<strong>Server Updated successfully!</strong>\",\n              }];\n              setTimeout(function () {\n                this.alertdata = false;\n                this.resetform();\n              }.bind(this), 1000);\n            }   \n      }, error => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>Failed to update Server details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n      })\n    }\n  }\n\n  ngOnChanges(): void {\n    this.pageSize = 10;\n  }\n\n  onChangePage(pageOfItems: Array<any>) {\n    this.pageOfItems = pageOfItems;\n  }\n\n  /*****RESET FORM*******/\n  resetform(){\n    this.submitted = false;\n    this.serverDetailsForm.reset();\n    this.ngOnInit();\n  }\n\n}\n","<div class=\"admin-portal\">\n    <div class=\"heading\">\n        Administrator\n    </div>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-2\">\n                <div class=\"list\">\n                    <div class=\"tile\">\n                        <div class=\"tile-icon\">\n                            <i class=\"fa fa-server icon\" aria-hidden=\"true\"></i>  \n                        </div>\n                        <div class=\"tile-name\">\n                            Server\n                        </div>\n                        <div class=\"btn-quick-view\">\n                            <button type=\"button\" id=\"serverDetails\" (click)=\"getModal('SERVER DETAILS')\" class=\"btn btn-lg btn-view\" data-toggle=\"modal\" data-target=\"#exampleModalLong\">Quick Look</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- <div class=\"col-md-2\">\n                <div class=\"list\">\n                    <div class=\"tile\">\n                        <div class=\"tile-icon\">\n                            <i class=\"fa fa-users icon\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"tile-name\">\n                            Role\n                        </div>\n                        <div class=\"btn-quick-view\">\n                            <button type=\"button\" id=\"roleDetails\" (click)=\"getModal('ROLE DETAILS')\" class=\"btn btn-lg btn-view\" data-toggle=\"modal\" data-target=\"#exampleModalLong\">Quick Look</button>\n                        </div>\n                    </div>\n                </div>\n            </div> -->\n        </div>\n    </div>\n</div>\n<div class=\"modal fade\" id=\"exampleModalLong\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <i _ngcontent-nfy-c68=\"\" aria-hidden=\"true\" class=\"fa fa-file mr-3\"></i>\n          <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">{{modalTitle}}</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\" *ngIf=\"modalTitle == 'SERVER DETAILS'\">\n          <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata\"></app-alert>\n          <div class=\"serverTable\">\n            <div class=\"card mb-4\">\n              <div class=\"card-header p-0 addNew d-flex\" id=\"heading\"  data-toggle=\"collapse\" data-target=\"#serveradd\" aria-expanded=\"true\" aria-controls=\"serveradd\">\n                <div class=\"add-icon\"><i class=\"fa fa-server\" aria-hidden=\"true\"></i><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></div>\n                \n                <div class=\"add-header\">Add Server Detail</div>\n              </div>\n              <div id=\"serveradd\" class=\"collapse show\" aria-labelledby=\"heading\">\n                <div class=\"card-body\">\n                    <div class=\"serverEdit\">\n                        <form [formGroup]=\"serverDetailsForm\">\n                            <div class=\"form-row\">\n                            <div class=\"form-group col-md-3\">\n                                <label for=\"serverName\">Hostname</label>\n                                <input type=\"text\" class=\"form-control\" id=\"serverName\" placeholder=\"\" formControlName=\"serverName\" [ngClass]=\"{ 'is-invalid': submitted && v.serverName.errors }\">\n                                <div *ngIf=\"submitted && v.serverName.errors\" class=\"invalid-feedback\">\n                                  <div *ngIf=\"v.serverName.errors\">Host Name is required</div>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                              <label for=\"serverIp\">Server IP</label>\n                              <input type=\"text\" class=\"form-control\" id=\"serverIp\" placeholder=\"\" formControlName=\"serverIp\" [ngClass]=\"{ 'is-invalid': submitted && v.serverIp.errors }\">\n                              <div *ngIf=\"submitted && v.serverIp.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"v.serverIp.errors\">Server IP is required</div>\n                              </div>\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                              <label for=\"serverPort\">Server Port</label>\n                              <input type=\"text\" class=\"form-control\" id=\"serverPort\" placeholder=\"\" formControlName=\"serverPort\" [ngClass]=\"{ 'is-invalid': submitted && v.serverPort.errors }\">\n                              <div *ngIf=\"submitted && v.serverPort.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"v.serverPort.errors\">Server Port is required</div>\n                              </div>\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                              <label for=\"serverType\">Server Type</label>\n                              <select class=\"custom-select\" formControlName=\"serverType\" (change)=\"getServerId($event.target.value)\" [ngClass]=\"{ 'is-invalid': submitted && v.serverType.errors }\">\n                                <option selected value=\"\">Select</option>\n                                <option *ngFor=\"let item of serverTypeList\" value=\"{{item.typeName}}\">{{item.typeName}}</option>\n                              </select>\n                              <div *ngIf=\"submitted && v.serverType.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"v.serverType.errors\">Server Type is required</div>\n                              </div>\n                            </div>\n                            <div class=\"form-group col-md-9\">\n                              <label for=\"url\">URL</label>\n                              <input type=\"text\" class=\"form-control\" id=\"url\" placeholder=\"\" formControlName=\"serverUrl\" [ngClass]=\"{ 'is-invalid': submitted && v.serverUrl.errors }\">\n                              <div *ngIf=\"submitted && v.serverUrl.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"v.serverUrl.errors\">Url is required</div>\n                              </div>\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                              <label for=\"bindDn\">Bind Dn / Username</label>\n                              <input type=\"text\" class=\"form-control\" id=\"bindDn\" placeholder=\"\" formControlName=\"bindDn\" [ngClass]=\"{ 'is-invalid': submitted && v.bindDn.errors }\">\n                              <div *ngIf=\"submitted && v.bindDn.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"v.bindDn.errors\">Bind Dn is required</div>\n                              </div>\n                            </div>\n                            <div class=\"form-group col-md-3\">\n                                <label for=\"password\">Password</label>\n                                <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': submitted && v.password.errors }\">\n                                <span data-target=\"#password\" class=\"fa fa-fw fa-eye field-icon toggle-password\"></span>\n                                <div *ngIf=\"submitted && v.password.errors\" class=\"invalid-feedback\">\n                                  <div *ngIf=\"v.password.errors\">Password is required</div>\n                                </div>\n                            </div>\n                            <div class=\"form-group col-md-3\"  *ngIf=\"serverTypeName == 'LDAP'\">\n                                <label for=\"baseDn\">Base Dn</label>\n                                <input type=\"text\" class=\"form-control\" id=\"baseDn\" placeholder=\"\" formControlName=\"baseDn\" [ngClass]=\"{ 'is-invalid': submitted && v.baseDn.errors }\">\n                                <div *ngIf=\"submitted && v.baseDn.errors\" class=\"invalid-feedback\">\n                                  <div *ngIf=\"v.baseDn.errors\">Base Dn is required</div>\n                                </div>\n                            </div>\n                            </div>\n                            <div class=\"form-check mt-3 ml-2\">\n                              <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" checked (change)=\"activateServer($event)\">\n                              <label class=\"form-check-label\" for=\"exampleCheck1\">Check to enable the server</label>\n                            </div>\n                            <div class=\"text-right\">\n                              <button type=\"submit\" class=\"btn btn-update\" (click)=\"createNew()\">Add</button>\n                            </div> \n                        </form>\n                    </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"Heading\">\n                List of all Server details \n            </div>\n            <table class=\"w-100\">\n                <thead>\n                    <tr>\n                        <th style=\"width:25%\">Server Type</th>\n                        <th style=\"width:30%\">Hostname</th>\n                        <th style=\"width:35%\">Server IP</th>\n                        <th style=\"width:10%\">Status</th>\n                    </tr>\n                </thead>\n            </table>\n            <div id=\"serverList\">\n              <ng-container *ngFor=\"let item of pageOfItems; let id = index\">\n                <div class=\"card mb-2\">\n                  <div class=\"card-header collapsed\" (click)=\"fetchDetails(item.id,id)\" id=\"list{{id}}\" data-toggle=\"collapse\" [attr.data-target]=\"'#server'+id\" aria-expanded=\"false\" [attr.aria-controls]=\"'server'+id\">\n                      <table class=\"w-100\">\n                        <thead>\n                            <tr>\n                              <th style=\"width:25%\">{{item.serverType.typeName}}</th>\n                              <th style=\"width:30%\">{{item.serverName}}</th>\n                              <th style=\"width:35%\">{{item.serverIp}}</th>\n                              <th style=\"width:10%\">{{item.status}}</th>\n                            </tr>\n                        </thead>\n                      </table>\n                  </div>\n                  <div id=\"server{{id}}\" class=\"collapse\" [attr.aria-labelledby]=\"'list'+id\" data-parent=\"#serverList\">\n                    <div *ngIf=\"activeShow == id\" class=\"card-body\">\n                        <div class=\"serverEdit\">\n                            <div class=\"Heading\">\n                                Customize \n                            </div>\n                            <form [formGroup]=\"serverDetailUpadte\">\n                              <div class=\"form-row\">\n                                <div class=\"form-group col-md-3\">\n                                  <label for=\"serverNameEdit\">Hostname</label>\n                                  <input type=\"text\" class=\"form-control\" id=\"serverNameEdit{{id}}\" formControlName=\"serverNameEdit\">\n                                  <div *ngIf=\"submitted && v.serverNameEdit.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"v.serverNameEdit.errors\">Host Name is required</div>\n                                  </div>\n                                </div>\n                                <div class=\"form-group col-md-3\">\n                                  <label for=\"serverIpEdit\">Server IP</label>\n                                  <input type=\"text\" class=\"form-control\" id=\"serverIpEdit{{id}}\" formControlName=\"serverIpEdit\">\n                                  <div *ngIf=\"submitted && v.serverIpEdit.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"v.serverIpEdit.errors\">Server IP is required</div>\n                                  </div>\n                                </div>\n                                <div class=\"form-group col-md-3\">\n                                  <label for=\"inputEmail4\">Server Port</label>\n                                  <input type=\"text\" class=\"form-control\" id=\"serverPortEdit{{id}}\" formControlName=\"serverPortEdit\">\n                                  <div *ngIf=\"submitted && v.serverPortEdit.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"v.serverPortEdit.errors\">Server Port is required</div>\n                                  </div>\n                                </div>\n                                <div class=\"form-group col-md-3\">\n                                  <label>Server Type</label>\n                                  <select class=\"custom-select\" formControlName=\"serverTypeEdit\" (change)=\"getServerIdEdit($event.target.value)\">\n                                    <!-- <option selected value=\"\">Select</option> -->\n                                    <option *ngFor=\"let item of serverTypeList\" value=\"{{item.typeName}}\">{{item.typeName}}</option>\n                                  </select>\n                                  <div *ngIf=\"submitted && m.serverTypeEdit.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"m.serverTypeEdit.errors\">Server Type is required</div>\n                                  </div>\n                                </div>\n                                <div class=\"form-group col-md-9\">\n                                  <label for=\"inputEmail4\">URL</label>\n                                  <input type=\"text\" class=\"form-control\" id=\"urlEdit{{id}}\" formControlName=\"serverUrlEdit\">\n                                  <div *ngIf=\"submitted && v.serverUrlEdit.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"v.serverUrlEdit.errors\">Url is required</div>\n                                  </div>\n                                </div> \n                                <div class=\"form-group col-md-3\">\n                                  <label for=\"inputEmail4\" >Bind Dn / Username</label>\n                                  <input type=\"text\" class=\"form-control\" id=\"bindDnEdit{{id}}\" formControlName=\"bindDnEdit\">\n                                  <div *ngIf=\"submitted && v.bindDnEdit.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"v.bindDnEdit.errors\">Bind Dn is required</div>\n                                  </div>\n                                </div>\n                                <div class=\"form-group col-md-3\">\n                                  <label for=\"inputPassword4\">Password</label>\n                                  <input type=\"password\" class=\"form-control\" id=\"PasswordEdit{{id}}\" formControlName=\"passwordEdit\">\n                                  <div [attr.data-target]=\"'#PasswordEdit'+id\" class=\"fa fa-fw fa-eye field-icon toggle-password\"></div>\n                                  <div *ngIf=\"submitted && v.passwordEdit.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"v.passwordEdit.errors\">Password is required</div>\n                                  </div>\n                                </div>\n                                <div class=\"form-group col-md-3\" *ngIf=\"serverTypeNameEdit == 'LDAP'\">\n                                  <label for=\"inputEmail4\" >Base Dn</label>\n                                  <input type=\"text\" class=\"form-control\" id=\"baseDnEdit{{id}}\" formControlName=\"baseDnEdit\">\n                                  <div *ngIf=\"submitted && v.baseDnEdit.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"v.baseDnEdit.errors\">Base Dn is required</div>\n                                  </div>\n                                </div>   \n                              </div>\n                              <div class=\"form-check mt-3 ml-2\">\n                                <input type=\"checkbox\" [checked]=\"isActive\" class=\"form-check-input\" id=\"check{{id}}\" (change)=\"activateServerEdit($event)\">\n                                <label class=\"form-check-label\" for=\"check{{id}}\">Check to enable the server</label>\n                              </div>\n                              <div class=\"text-right mt-4\">\n                                <button type=\"submit\" class=\"btn btn-update\" (click)=\"updateDetails()\">Save</button>\n                              </div> \n                            </form>\n                        </div>\n                    </div>\n                  </div>\n                </div>\n              </ng-container> \n                <!-- <div class=\"card mb-2\">\n                  <div class=\"card-header\" id=\"listTwo\" data-toggle=\"collapse\" data-target=\"#server2\" aria-expanded=\"false\" aria-controls=\"server2\">\n                    <table class=\"w-100\">\n                        <thead>\n                            <tr>\n                              <th>Server Type</th>\n                              <th>Server Name</th>\n                              <th>Ip Address</th>\n                              <th>Status</th>\n                            </tr>\n                        </thead>\n                      </table>\n                  </div>\n                  <div id=\"server2\" class=\"collapse\" aria-labelledby=\"listTwo\" data-parent=\"#serverList\">\n                    <div class=\"card-body\">\n                        <div class=\"serverEdit\">\n                            <div class=\"Heading\">\n                                Customize \n                            </div>\n                            <form>\n                                <div class=\"form-row\">\n                                  <div class=\"form-group col-md-3\">\n                                    <label for=\"inputEmail4\">Server Name</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n                                  </div>\n                                  <div class=\"form-group col-md-3\">\n                                    <label for=\"inputPassword4\">Password</label>\n                                    <input type=\"password\" class=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\">\n                                  </div>\n                                  <div class=\"form-group col-md-3\">\n                                    <label for=\"inputEmail4\">Server Ip</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n                                  </div>\n                                  <div class=\"form-group col-md-3\">\n                                    <label for=\"inputEmail4\">Server Port</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n                                  </div>\n                                  <div class=\"form-group col-md-9\">\n                                    <label for=\"inputEmail4\">Url</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n                                  </div>\n                                  <div class=\"form-group col-md-3\">\n                                    <label for=\"inputEmail4\">Server Type</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n                                  </div>\n                                  <div class=\"form-group col-md-3\">\n                                    <label for=\"inputEmail4\">Bind Dn</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n                                  </div>\n                                  <div class=\"form-group col-md-3\">\n                                    <label for=\"inputEmail4\">Base Dn</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\">\n                                  </div>\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-primary\">Sign in</button>\n                            </form>\n                        </div>\n                    </div>\n                  </div>\n                </div> -->\n            </div>\n            <div class=\"card-footer pb-0 pt-3\">\n              <jw-pagination [items]=\"serverList\" (changePage)=\"onChangePage($event)\" [pageSize]=\"pageSize\"></jw-pagination>\n            </div>\n                \n          </div>\n          \n        </div>\n        <!-- <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n        </div> -->\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from '../../service/login.service';\nimport { AutomationFactoryService } from '../../service/automation-factory.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription, timer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { environment } from './../../../environments/environment';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-automation-factory',\n  templateUrl: './automation-factory.component.html',\n  styleUrls: ['./automation-factory.component.scss']\n})\nexport class AutomationFactoryComponent implements OnInit {\n  user: any;\n  roles: any;\n  orders: any;\n  ordersSheduler: any;\n  totalOrders: any;\n  totalOrdersScheduler: any;\n  totalCount: any;\n  completedCount: any;\n  acceptedCount: any;\n  failedCount: any;\n  scheduledCount: any;\n  subscription: Subscription;\n  orderListActive = true;\n  scheduleListActive = false;\n  refresh = true;\n  schedulerRefresh = true;\n  total = true;\n  accepted = false;\n  completed = false;\n  failed = false;\n  scheduled = false;\n  scheduleTotal = true;\n  inactive = false;\n  active = false;\n  deleted = false;\n  orderCount: any;\n  refreshList = true;\n  display = 'none';\n  public adminReportStart = environment.adminReportStart;\n  public adminReportEnd = environment.adminReportEnd;\n  public adminSchedulerReportStart = environment.adminSchedulerReportStart;\n  public adminSchedulerReportEnd = environment.adminSchedulerReportEnd;\n  public reportStart = environment.reportStart;\n  public reportMid = environment.reportMid;\n  public reportEnd = environment.reportEnd;\n  public schedulerReportStart = environment.schedulerReportStart;\n  public schedulerReportMid = environment.schedulerReportMid;\n  public schedulerReportEnd = environment.schedulerReportEnd;\n  scheduledOrders: any;\n  menuList: any;\n  orderList = false;\n  scheduledJobs = false;\n  orderReport = false;\n  schedulerReport = false;\n  createOrder = false;\n  adminFlag = false;\n  // reportClicked = false;\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private automationFactoryService: AutomationFactoryService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    let r = this.roles.filter(item => item.rolePermission.permission === 'Admin');\n    if (r.length > 0) {\n      this.adminFlag = true;\n    }\n    // console.log(this.user);\n    if (!this.user) {\n      this.router.navigateByUrl('loginmain');\n    }\n    this.menuList = JSON.parse(localStorage.getItem('MENU'));\n    this.menuList = this.menuList.filter(item => item.mainMenu.menuName === 'Automation factory');\n    this.menuList = this.menuList[0].subMenu;\n    let j = this.menuList.filter(item => item.menuName === 'Orders');\n    if (j.length > 0) {\n      this.orderList = true;\n    }\n    j = this.menuList.filter(item => item.menuName === 'Scheduled Jobs');\n    if (j.length > 0) {\n      this.scheduledJobs = true;\n    }\n    j = this.menuList.filter(item => item.menuName === 'Create Order');\n    if (j.length > 0) {\n      this.createOrder = true;\n    }\n    j = this.menuList.filter(item => item.menuName === 'Order Report');\n    if (j.length > 0) {\n      this.orderReport = true;\n      setTimeout(function () {\n        if (this.adminFlag) {\n          let link = this.adminReportStart + 'refreshInterval:(pause:!t,value:0),' + this.adminReportEnd;\n          (<HTMLIFrameElement>document.getElementById('iframe')).src = link;\n        } else {\n          let link = this.reportStart + 'refreshInterval:(pause:!t,value:0),' + this.reportMid + \"query:(language:kuery,query:'\"\n          this.roles.forEach((element, index) => {\n            if (index == 0) {\n              link = link + \"role.keyword : \" + element.roleCode;\n            } else {\n              link = link + \" or role.keyword : \" + element.roleCode;\n            }\n          });\n          link = link + \"'),\" + this.reportEnd;\n          (<HTMLIFrameElement>document.getElementById('iframe')).src = link;\n        }\n      }.bind(this), 1000);\n    }\n    j = this.menuList.filter(item => item.menuName === 'Scheduled Jobs Report');\n    if (j.length > 0) {\n      this.schedulerReport = true;\n      setTimeout(function () {\n        if (this.adminFlag) {\n          let schedulerLink = this.adminSchedulerReportStart + 'refreshInterval:(pause:!t,value:0),' + this.adminSchedulerReportEnd;\n          (<HTMLIFrameElement>document.getElementById('scheduleriframe')).src = schedulerLink;\n        } else {\n          let schedulerLink = this.schedulerReportStart + 'refreshInterval:(pause:!t,value:0),' + this.schedulerReportMid + \"query:(language:kuery,query:'\"\n          this.roles.forEach((element, index) => {\n            if (index == 0) {\n              schedulerLink = schedulerLink + \"Role.keyword : \" + element.roleCode;\n            } else {\n              schedulerLink = schedulerLink + \" or Role.keyword : \" + element.roleCode;\n            }\n          });\n          schedulerLink = schedulerLink + \"'),\" + this.schedulerReportEnd;\n          (<HTMLIFrameElement>document.getElementById('scheduleriframe')).src = schedulerLink;\n        }\n\n      }.bind(this), 1000);\n    }\n    if (this.orderList) {\n      this.subscription = timer(0, 600000).pipe(\n        switchMap(() => this.automationFactoryService.getAllOrders(this.roles))\n      ).subscribe(val => {\n        this.orders = val;\n        this.total = true;\n        this.accepted = false;\n        this.completed = false;\n        this.failed = false;\n        this.scheduled = false;\n        this.inactive = false;\n        this.active = false;\n        this.deleted = false;\n        this.totalOrders = JSON.parse(JSON.stringify(this.orders));\n        this.totalCount = this.orders.length;\n        let j = this.orders.filter(item => item.orderStatus === 'Completed' || item.orderStatus === 'completed');\n        this.completedCount = j.length;\n        j = this.orders.filter(item => item.orderStatus === 'Accepted');\n        this.acceptedCount = j.length;\n        j = this.orders.filter(item => item.orderStatus === 'Failed');\n        this.failedCount = j.length;\n        j = this.orders.filter(item => item.schedulerId !== 0);\n        this.scheduledCount = j.length;\n        // console.log('orders', val);\n      });\n    }\n\n    if (this.scheduledJobs) {\n      this.subscription = timer(0, 600000).pipe(\n        switchMap(() => this.automationFactoryService.getScheduleList(this.roles))\n      ).subscribe(val1 => {\n        this.scheduledOrders = val1;\n        this.totalOrdersScheduler = JSON.parse(JSON.stringify(this.scheduledOrders));\n      });\n    }\n  }\n  @Output() actionEvent = new EventEmitter();\n  updateorderList() {\n    AutomationFactoryService.refreshlist.emit();\n    this.actionEvent.emit();\n    this.ngOnInit();\n  }\n\n  filterBasedonStatus(status) {\n    if (status === 'total') {\n      this.total = true;\n      this.accepted = false;\n      this.completed = false;\n      this.failed = false;\n      this.scheduled = false;\n      this.orders = JSON.parse(JSON.stringify(this.totalOrders));\n    } else if (status === 'accepted') {\n      this.total = false;\n      this.accepted = true;\n      this.completed = false;\n      this.failed = false;\n      this.scheduled = false;\n      this.orders = JSON.parse(JSON.stringify(this.totalOrders.filter(item => item.orderStatus === 'Accepted')));\n    } else if (status === 'completed') {\n      this.total = false;\n      this.accepted = false;\n      this.completed = true;\n      this.failed = false;\n      this.scheduled = false;\n      this.orders = JSON.parse(JSON.stringify(this.totalOrders.filter(item => item.orderStatus === 'Completed' || item.orderStatus === 'completed')));\n    } else if (status === 'scheduled') {\n      this.total = false;\n      this.accepted = false;\n      this.completed = false;\n      this.failed = false;\n      this.scheduled = true;\n      this.orders = JSON.parse(JSON.stringify(this.totalOrders.filter(item => item.schedulerId !== 0)));\n    } else if (status === 'failed') {\n      this.total = false;\n      this.accepted = false;\n      this.completed = false;\n      this.failed = true;\n      this.scheduled = false;\n      this.orders = JSON.parse(JSON.stringify(this.totalOrders.filter(item => item.orderStatus === 'Failed')));\n    }\n    this.orderCount = this.orders.length;\n  }\n\n  filterBasedonSheduleStatus(status) {\n    if (status === 'total') {\n      this.scheduleTotal = true;\n      this.inactive = false;\n      this.active = false;\n      this.deleted = false;\n      this.scheduledOrders = JSON.parse(JSON.stringify(this.totalOrdersScheduler));\n    } else if (status === 'inactive') {\n      this.scheduleTotal = false;\n      this.inactive = true;\n      this.active = false;\n      this.deleted = false;\n      this.scheduledOrders = JSON.parse(JSON.stringify(this.totalOrdersScheduler.filter(item => item.jobStatus === 'Inactive')));\n    } else if (status === 'active') {\n      this.scheduleTotal = false;\n      this.inactive = false;\n      this.active = true;\n      this.deleted = false;\n      this.scheduledOrders = JSON.parse(JSON.stringify(this.totalOrdersScheduler.filter(item => item.jobStatus === 'Active')));\n    }  else if (status === 'deleted') {\n      this.scheduleTotal = false;\n      this.inactive = false;\n      this.active = false;\n      this.deleted = true;\n      this.scheduledOrders = JSON.parse(JSON.stringify(this.totalOrdersScheduler.filter(item => item.jobStatus === 'Deleted')));\n    }\n\n  }\n\n  refreshOrderList() {\n    // this.display = 'block';\n    this.refreshList = false;\n    this.automationFactoryService.getAllOrders(this.roles).subscribe(\n      val => {\n        setTimeout(function () {\n          this.refreshList = true;\n        }.bind(this), 2000);\n        this.orders = val;\n        this.total = true;\n        this.accepted = false;\n        this.completed = false;\n        this.failed = false;\n        this.scheduled = false;\n        this.totalOrders = JSON.parse(JSON.stringify(this.orders));\n        this.totalCount = this.orders.length;\n        let j = this.orders.filter(item => (item.orderStatus === 'Completed' || item.orderStatus === 'completed'));\n        this.completedCount = j.length;\n        j = this.orders.filter(item => item.orderStatus === 'Accepted');\n        this.acceptedCount = j.length;\n        j = this.orders.filter(item => item.orderStatus === 'Failed');\n        this.failedCount = j.length;\n        j = this.orders.filter(item => item.schedulerId !== 0);\n        this.scheduledCount = j.length;\n      });\n  }\n\n  reportRefresh() {\n    this.refresh = false;\n    // console.log('refresh');\n    if (this.adminFlag) {\n      let link = this.adminReportStart + 'refreshInterval:(pause:!f,value:1000),' + this.adminReportEnd;\n      (<HTMLIFrameElement>document.getElementById('iframe')).src = link;\n      setTimeout(function () {\n        this.refresh = true;\n        link = this.adminReportStart + 'refreshInterval:(pause:!t,value:0),' + this.adminReportEnd;\n        (<HTMLIFrameElement>document.getElementById('iframe')).src = link;\n      }.bind(this), 5000);\n    } else {\n      let link = this.reportStart + 'refreshInterval:(pause:!f,value:1000),' + this.reportMid + \"query:(language:kuery,query:'\"\n      this.roles.forEach((element, index) => {\n        if (index == 0) {\n          link = link + \"role.keyword : \" + element.roleCode;\n        } else {\n          link = link + \" or role.keyword : \" + element.roleCode;\n        }\n      });\n      link = link + \"'),\" + this.reportEnd;\n      (<HTMLIFrameElement>document.getElementById('iframe')).src = link;\n      setTimeout(function () {\n        this.refresh = true;\n        link = this.reportStart + 'refreshInterval:(pause:!t,value:0),' + this.reportMid + \"query:(language:kuery,query:'\"\n        this.roles.forEach((element, index) => {\n          if (index == 0) {\n            link = link + \"role.keyword : \" + element.roleCode;\n          } else {\n            link = link + \" or role.keyword : \" + element.roleCode;\n          }\n        });\n        link = link + \"'),\" + this.reportEnd;\n        (<HTMLIFrameElement>document.getElementById('iframe')).src = link;\n      }.bind(this), 5000);\n    }\n  }\n\n  schedulerReportRefresh() {\n    this.schedulerRefresh = false;\n    // console.log('refresh');\n    if (this.adminFlag) {\n      let link = this.adminSchedulerReportStart + 'refreshInterval:(pause:!f,value:1000),' + this.adminSchedulerReportEnd;\n      (<HTMLIFrameElement>document.getElementById('scheduleriframe')).src = link;\n      setTimeout(function () {\n        this.schedulerRefresh = true;\n        link = this.adminSchedulerReportStart + 'refreshInterval:(pause:!t,value:0),' + this.adminSchedulerReportEnd;\n        (<HTMLIFrameElement>document.getElementById('scheduleriframe')).src = link;\n      }.bind(this), 5000);\n    } else {\n      let link = this.schedulerReportStart + 'refreshInterval:(pause:!f,value:1000),' + this.schedulerReportMid + \"query:(language:kuery,query:'\"\n      this.roles.forEach((element, index) => {\n        if (index == 0) {\n          link = link + \"role.keyword : \" + element.roleCode;\n        } else {\n          link = link + \" or role.keyword : \" + element.roleCode;\n        }\n      });\n      link = link + \"'),\" + this.schedulerReportEnd;\n      (<HTMLIFrameElement>document.getElementById('scheduleriframe')).src = link;\n      setTimeout(function () {\n        this.schedulerRefresh = true;\n        link = this.schedulerReportStart + 'refreshInterval:(pause:!t,value:0),' + this.schedulerReportMid + \"query:(language:kuery,query:'\"\n        this.roles.forEach((element, index) => {\n          if (index == 0) {\n            link = link + \"role.keyword : \" + element.roleCode;\n          } else {\n            link = link + \" or role.keyword : \" + element.roleCode;\n          }\n        });\n        link = link + \"'),\" + this.schedulerReportEnd;\n        (<HTMLIFrameElement>document.getElementById('scheduleriframe')).src = link;\n      }.bind(this), 5000);\n    }\n  }\n}\n","<div class=\"container-fluid intake-summary\">\n    <div *ngIf=\"orderList\" class=\"row summary-chart\">\n        <div class=\"col-md-2 summary-value\">\n            <div class=\"value\">\n                {{totalCount}}\n            </div>\n            <div *ngIf=\"createOrder\" type=\"button\" class=\"btn-plus summary trgslide\" data-toggle=\"modal\" data-target=\"#order-create\" id=\"create-order\">+</div>\n            <!-- <div type=\"button\" class=\"btn-plus\" data-toggle=\"modal\" data-target=\"#order-create\">+</div><a\n                class=\"create-link\">Create\n                Order</a> -->\n            <div class=\"title-summary\">\n                <span class=\"filter-indicator total-bots\"></span>\n                <span class=\"summary-name\">TOTAL ORDERS</span>\n                <div class=\"graph\">\n                    <figure class=\"highcharts-figure h-100\">\n                        <div id=\"highchart-container\" class=\"h-100\"></div>\n                    </figure>\n                </div>\n            </div>\n        </div>\n        <!-- <span class=\"divider\"></span>\n        <div class=\"col-md-2 summary-value\">\n            <div class=\"value\">\n                {{acceptedCount}}\n            </div>\n            <div class=\"title-summary\">\n                <div class=\"filter-indicator in-progress\"></div>\n                <span class=\"summary-name\">ACCEPTED</span>\n                <div class=\"graph\">\n                    <figure class=\"highcharts-figure h-100\">\n                        <div id=\"highchart-container-2\" class=\"h-100\"></div>\n                    </figure>\n                </div>\n            </div>\n        </div> -->\n        <span class=\"divider\"></span>\n        <div class=\" col-md-2 summary-value\">\n            <div class=\"value\">\n                {{completedCount}}\n            </div>\n            <div class=\"title-summary\">\n                <div class=\"filter-indicator completed\"></div>\n                <span class=\"summary-name\">COMPLETED</span>\n                <div class=\"graph\">\n                    <figure class=\"highcharts-figure h-100\">\n                        <div id=\"highchart-container-3\" class=\"h-100\"></div>\n                    </figure>\n                </div>\n            </div>\n        </div>\n        <span class=\"divider\"></span>\n        <div class=\" col-md-2 summary-value\">\n            <div class=\"value\">\n                {{failedCount}}\n            </div>\n            <div class=\"title-summary\">\n                <div class=\"filter-indicator failed\"></div>\n                <span class=\"summary-name\">FAILED</span>\n                <div class=\"graph\">\n                    <figure class=\"highcharts-figure h-100\">\n                        <div id=\"highchart-container-3\" class=\"h-100\"></div>\n                    </figure>\n                </div>\n            </div>\n        </div>\n        <span class=\"divider\"></span>\n        <div class=\" col-md-2 summary-value\">\n            <div class=\"value\">\n                {{scheduledCount}}\n            </div>\n            <div class=\"title-summary\">\n                <div class=\"filter-indicator scheduled\"></div>\n                <span class=\"summary-name\">SCHEDULED</span>\n                <div class=\"graph\">\n                    <figure class=\"highcharts-figure h-100\">\n                        <div id=\"highchart-container-3\" class=\"h-100\"></div>\n                    </figure>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"Order-lists\">\n    <nav>\n        <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n            <a *ngIf=\"orderList\" class=\"nav-item nav-link active\" id=\"order-list-tab\" data-toggle=\"tab\" href=\"#order-list\" role=\"tab\"\n                aria-controls=\"order-list\" aria-selected=\"true\"\n                (click)=\"updateorderList();orderListActive=true;scheduleListActive=false;\">Orders</a>\n            <a *ngIf=\"scheduledJobs\" class=\"nav-item nav-link\" id=\"team-scheduled-order-list-tab\" data-toggle=\"tab\"\n                href=\"#team-scheduled-order-list\" role=\"tab\" aria-controls=\"team-scheduled-order-list\"\n                aria-selected=\"false\" (click)=\"updateorderList();orderListActive=false;scheduleListActive=true;\">Scheduled Jobs</a>\n            <a *ngIf=\"orderReport\" class=\"nav-item nav-link\" id=\"team-order-list-tab\" data-toggle=\"tab\" href=\"#team-order-list\" role=\"tab\"\n                aria-controls=\"team-order-list\" aria-selected=\"false\" (click)=\"orderListActive=false;scheduleListActive=false;\">Order Report</a>\n            <a *ngIf=\"schedulerReport\" class=\"nav-item nav-link\" id=\"team-scheduler-report-tab\" data-toggle=\"tab\" href=\"#team-scheduler-report\" role=\"tab\"\n                aria-controls=\"team-scheduler-report\" aria-selected=\"false\" (click)=\"orderListActive=false;scheduleListActive=false;\">Scheduled Jobs Report</a>\n            <div *ngIf=\"createOrder\" type=\"button\" class=\"btn-plus\" data-toggle=\"modal\" data-target=\"#order-create\">+</div><a *ngIf=\"createOrder\"\n                class=\"create-link\">Create\n                Order</a>\n            <div class=\"float-right ml-auto orderFilter\">\n                <div class=\"filter-options\" *ngIf=\"orderListActive\">\n                    <div class=\"filter-status d-flex mr-4\">\n                        <i class=\"fa fa-refresh clearActiveRefresh\" *ngIf=\"refreshList\" aria-hidden=\"true\"\n                            (click)=\"refreshOrderList()\"></i>\n                        <!-- <i class=\"d-inline order-list-serach fa fa-search\"></i> -->\n                        <div class=\"btn filter-indicator total-bots\" [ngClass]=\" { 'active' : total}\"\n                            (click)='filterBasedonStatus(\"total\")'></div>\n                        <!-- <div class=\"btn filter-indicator in-progress\" [ngClass]=\" { 'active' : accepted}\"\n                            (click)='filterBasedonStatus(\"accepted\")'></div> -->\n                        <div class=\"btn filter-indicator completed\" [ngClass]=\" { 'active' : completed}\"\n                            (click)='filterBasedonStatus(\"completed\")'></div>\n                        <div class=\"btn filter-indicator failed\" [ngClass]=\" { 'active' : failed}\"\n                            (click)='filterBasedonStatus(\"failed\")'></div>\n                        <div class=\"btn filter-indicator scheduled\" [ngClass]=\" { 'active' : scheduled}\"\n                            (click)='filterBasedonStatus(\"scheduled\")'></div>\n                    </div>\n                    <!-- <i class=\"fa fa-list mr-4\" aria-hidden=\"true\"></i>\n                    <i class=\"fa fa-th-large ml-1\" aria-hidden=\"true\"></i>\n                    <i class=\"fa fa-th\" aria-hidden=\"true\"></i> -->\n                </div>\n                <div class=\"filter-options\" *ngIf=\"scheduleListActive\">\n                    <div class=\"filter-status d-flex mr-4\">\n                        <div class=\"btn filter-indicator total-bots\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"All\" [ngClass]=\" { 'active' : scheduleTotal}\"\n                            (click)='filterBasedonSheduleStatus(\"total\")'></div>\n                        <div class=\"btn filter-indicator schedule_inactive\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Inactive\" [ngClass]=\" { 'active' : inactive}\"\n                            (click)='filterBasedonSheduleStatus(\"inactive\")'></div>\n                        <div class=\"btn filter-indicator schedule_active\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Active\" [ngClass]=\" { 'active' : active}\"\n                            (click)='filterBasedonSheduleStatus(\"active\")'></div>\n                        <!-- <div class=\"btn filter-indicator schedule_del\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Delete\" [ngClass]=\" { 'active' : deleted}\"\n                            (click)='filterBasedonSheduleStatus(\"deleted\")'></div> -->\n                    </div>\n                </div>\n            </div>\n            <!-- <div class=\"float-right ml-auto\">\n                \n            </div> -->\n        </div>\n    </nav>\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n        <div *ngIf=\"orderList && orders\" class=\"tab-pane fade show active\" id=\"order-list\" role=\"tabpanel\"\n            aria-labelledby=\"order-list-tab\">\n            <app-order-list *ngIf=\"orders.length > 0\" j [orderList]=\"orders\"></app-order-list>\n        </div>\n        <div *ngIf=\"scheduledJobs && scheduledOrders\" class=\"tab-pane fade show\" id=\"team-scheduled-order-list\" role=\"tabpanel\"\n            aria-labelledby=\"team-scheduled-order-list\">\n            <app-scheduled-job-list *ngIf=\"scheduledOrders.length > 0\" [scheduledOrderList]=\"scheduledOrders\">\n            </app-scheduled-job-list>\n        </div>\n        <div *ngIf=\"orderReport\" class=\"tab-pane fade\" id=\"team-order-list\" role=\"tabpanel\" aria-labelledby=\"team-order-list-tab\">\n            <img *ngIf=\"refresh\" src=\"./assets/images/report-refresh.jpg\" alt=\"\" id=\"refresh-report\"\n                data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Refresh\" style=\"width:35px;height:35px\"\n                (click)=\"reportRefresh()\">\n            <iframe id=\"iframe\" style=\"height: 600px; width: 100%;\"></iframe>\n        </div>\n        <div *ngIf=\"schedulerReport\" class=\"tab-pane fade\" id=\"team-scheduler-report\" role=\"tabpanel\"\n            aria-labelledby=\"team-scheduler-report-tab\">\n            <img *ngIf=\"schedulerRefresh\" src=\"./assets/images/report-refresh.jpg\" alt=\"\" id=\"refresh-report\"\n                data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Refresh\" style=\"width:35px;height:35px\"\n                (click)=\"schedulerReportRefresh()\">\n            <iframe id=\"scheduleriframe\" style=\"height: 600px; width: 100%;\"></iframe>\n        </div>\n    </div>\n</div>\n\n<!--Modal-OrderList-create-->\n<div *ngIf=\"createOrder\" class=\"modal fade\" id=\"order-create\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"order-create\" aria-hidden=\"true\">\n    <app-create-order></app-create-order>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AutomationFactoryService } from 'src/app/service/automation-factory.service';\n\ndeclare function roadMap(): void;\n\n@Component({\n  selector: 'app-create-order',\n  templateUrl: './create-order.component.html',\n  styleUrls: ['./create-order.component.scss']\n})\nexport class CreateOrderComponent implements OnInit {\n\n  public orderDetailForm: any;\n  public scheduleForm: any;\n  public minuteScheduleForm: any;\n  public hoursScheduleForm: any;\n  public dailyScheduleForm: any;\n  public weeklyScheduleForm: any;\n  public monthlyScheduleForm: any;\n  public user: any;\n  public catalougue: any = [];\n  public selectedBots: any = []; // final selected bots\n  public selectedBotsConfigData: any = []; //config data for final seleted bots\n  public selectedBotIds: any = []; //bot selected on bot selection page\n  public summaryCatalogue: any = []; //For post data\n  public summaryCatalogueFinal: any = []; //final selected suits and bot details\n\n  // public serviceTypeSelected = '';\n  public orderTypeSelected = '';\n  public botDetailProvided = '';\n  public chosenBot: any;\n  public chosenBotName: any;\n\n  public suitsIds: any = []; // suits id array on choose of suits\n  public botIds: any = []; // bots id array on choose of bot\n  public submitted = false;\n  public selectedSuits: any = []; // final selected suits\n\n  public alertMessage: any = [];\n  public alertdata = false;\n  public isJsonError = false;\n  public scheduleChecked = false;\n  public orderType: any = [];\n  // public serviceType: any = [];\n  public createdOrderId: any = '';\n  // public selectedServiceType: any = '';\n  // public configType: any = '';\n  public roles: any;\n  public selectedRole: any = '';\n  public confType = true;\n  jobAlreadyExits = false;\n  disabled = false;\n  ShowFilter = false;\n  limitSelection = true;\n  hoursMultiSelectSettings: any = {\n    singleSelection: false,\n    idField: '',\n    textField: '',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 2,\n    limitSelection: 24,\n    allowSearchFilter: this.ShowFilter\n  };\n  daysMultiSelectSettings: any = {\n    singleSelection: false,\n    idField: '',\n    textField: '',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 2,\n    limitSelection: 24,\n    allowSearchFilter: this.ShowFilter\n  };\n  public minutes: any = [];\n  public hours: any = [];\n  public minutes_mins: any = [];\n  public hours_hrs: any = [];\n  public hoursEndRange: any = [];\n  public daysEndRange: any = [];\n  public days: any = [];\n  public daysOfWeek: any = [];\n  public months: any = [];\n  public hourlyRadio: any = \"hourlyOption1\";\n  public dailyRadio: any = \"dailyOption1\";\n  public monthlyRadio: any = \"monthlyOption1\";\n\n  constructor(private automationService: AutomationFactoryService) {\n    for (let i = 0; i < 60; i++) {\n      this.minutes.push(i);\n    }\n    for (let i = 0; i < 24; i++) {\n      this.hours.push(i);\n    }\n    for (let i = 1; i < 60; i++) {\n      this.minutes_mins.push(i);\n    }\n    for (let i = 1; i < 24; i++) {\n      this.hours_hrs.push(i);\n    }\n    for (let i = 1; i <= 31; i++) {\n      this.days.push(i);\n    }\n    for (let i = 1; i <= 12; i++) {\n      this.months.push(i);\n    }\n  }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    this.getUserRole()\n    // this.roles = this.roles.filter(item => item.roleCode === 'taf_prodapt' && item.roleCode !== 'taf_oss_automation' && item.roleCode !== 'taf_guest');\n   // this.roles = this.roles.filter(item => item.rolePermission.permission === 'Read Write');\n    this.jobAlreadyExits = false;\n    this.hourlyRadio = \"hourlyOption1\";\n    this.dailyRadio = \"dailyOption1\";\n    this.monthlyRadio = \"monthlyOption1\"\n    this.chosenBot = [\n      {\n        botId: ''\n      }\n    ];\n\n\n\n    // roadMap();\n\n    this.orderDetailForm = new FormGroup({\n      'createdBy': new FormControl({ value: this.user.name, disabled: true }),\n      // 'serviceType': new FormControl('', Validators.required),\n      'orderType': new FormControl('', Validators.required),\n      // 'configType': new FormControl('', Validators.required),\n      'role': new FormControl('', Validators.required),\n    });\n\n    this.minuteScheduleForm = new FormGroup({\n      'minute': new FormControl('', Validators.required),\n    });\n\n    this.scheduleForm = new FormGroup({\n      'jobName': new FormControl('', Validators.required),\n    });\n\n    this.hoursScheduleForm = new FormGroup({\n      'everyHours': new FormControl('', Validators.required),\n      'hoursMultiSelect': new FormControl('', Validators.required),\n      'hoursFrom': new FormControl('', Validators.required),\n      'hoursTo': new FormControl('', Validators.required),\n    });\n\n    this.dailyScheduleForm = new FormGroup({\n      // 'everyHours': new FormControl('*/*', Validators.required),\n      'daysMultiSelect': new FormControl('', Validators.required),\n      'daysFrom': new FormControl('', Validators.required),\n      'daysTo': new FormControl('', Validators.required),\n      'dailyHours': new FormControl('', Validators.required),\n      'dailyMinutes': new FormControl('', Validators.required),\n    });\n\n    this.weeklyScheduleForm = new FormGroup({\n      'weeklyHours': new FormControl('', Validators.required),\n      'weeklyMinutes': new FormControl('', Validators.required),\n      'monday': new FormControl('', Validators.required),\n      'tuesday': new FormControl('', Validators.required),\n      'wednesday': new FormControl('', Validators.required),\n      'thursday': new FormControl('', Validators.required),\n      'friday': new FormControl('', Validators.required),\n      'saturday': new FormControl('', Validators.required),\n      'sunday': new FormControl('', Validators.required),\n    });\n    this.monthlyScheduleForm = new FormGroup({\n      'monthlyDays': new FormControl('*', Validators.required),\n      'months': new FormControl('*', Validators.required),\n      'weeks': new FormControl('1', Validators.required),\n      'monthlyDayofWeek': new FormControl('MON', Validators.required),\n      'monthssecond': new FormControl('*', Validators.required),\n      'monthlyHours': new FormControl('', Validators.required),\n      'monthlyMinutes': new FormControl('', Validators.required),\n    });\n\n    this.automationService.getOrderType().subscribe(val => {\n      this.orderType = val;\n    }, error => {\n\n    });\n\n\n  }\n  scheduleNameCheck(value){\n    this.scheduleForm.patchValue({\n    jobName: value.trim(),\n  });\n\n  }\n  getUserRole()\n  {\n   let user_id=this.user.id\n    this.automationService.roleTypeuser(user_id).subscribe(val=>\n      {\n        this.roles=val\n \n      })\n \n    \n  }\n\n  resetTab(){\n    this.dailyScheduleForm.reset();\n    this.minuteScheduleForm.reset();\n    this.hoursScheduleForm.reset();\n    this.weeklyScheduleForm.reset();\n    this.monthlyScheduleForm.reset();\n    (<HTMLInputElement>document.getElementById('hourlyOption1')).checked = true;\n    (<HTMLInputElement>document.getElementById('dailyOption1')).checked = true;\n    (<HTMLInputElement>document.getElementById('monthlyOption1')).checked = true;\n    this.hourlyRadio = \"hourlyOption1\";\n    this.dailyRadio = \"dailyOption1\";\n    this.monthlyRadio = \"monthlyOption1\"\n    console.log(\"check\");\n\n  }\n\n  selectDaysOfWeek(day, event: any) {\n    if (event.target.checked === true) {\n      this.daysOfWeek.push(day);\n    } else {\n      let index = this.daysOfWeek.indexOf(day);\n      this.daysOfWeek.splice(index, 1);\n    }\n    // console.log('daysofWeek', this.daysOfWeek);\n  }\n\n  changeHoursRadio(event: any) {\n    this.hoursScheduleForm.reset();\n    (<HTMLInputElement>document.getElementById(event.target.value)).checked = true;\n    this.hourlyRadio = event.target.value;\n  }\n\n  changeDailyRadio(event: any) {\n    this.dailyScheduleForm.reset();\n    (<HTMLInputElement>document.getElementById(event.target.value)).checked = true;\n    this.dailyRadio = event.target.value;\n  }\n\n  changeMonthlyRadio(event: any) {\n    this.monthlyScheduleForm.reset();\n    (<HTMLInputElement>document.getElementById(event.target.value)).checked = true;\n    this.monthlyRadio = event.target.value;\n  }\n\n  getHoursEndRange(hour) {\n    this.hoursEndRange = [];\n    if (hour === \"\") {\n      this.hoursEndRange = [];\n    } else {\n      hour = hour * 1;\n      for (let i = hour + 1; i < 24; i++) {\n        this.hoursEndRange.push(i);\n      }\n    }\n  }\n\n  getDaysEndRange(day) {\n    this.daysEndRange = [];\n    if (day === \"\") {\n      this.daysEndRange = [];\n    } else {\n      day = day * 1;\n      for (let i = day + 1; i < 32; i++) {\n        this.daysEndRange.push(i);\n      }\n    }\n  }\n\n  toogleShowFilter() {\n    this.ShowFilter = !this.ShowFilter;\n    this.hoursMultiSelectSettings = Object.assign({}, this.hoursMultiSelectSettings, { allowSearchFilter: this.ShowFilter });\n  }\n\n  selectAllBots(event: any, suit: any) {\n    this.selectedBotsConfigData = [];\n    this.chosenBotName = \"\";\n    this.chosenBot = [\n      {\n        botId: ''\n      }\n    ];\n    this.scheduleChecked = false;\n    let classnames = (<HTMLInputElement>document.getElementById('collapseThree')).className;\n    (<HTMLInputElement>document.getElementById('collapseThree')).className = classnames.replace('show', '');\n    // console.log(event.target.value);\n    // console.log(suit);\n    if (event.target.checked == true) {\n      suit.Bots.forEach(element => {\n        if (this.selectedBotIds.includes(element.BotId)) {\n          console.log('');\n        } else {\n          this.selectedBotIds.push(element.BotId);\n          let arr: any = {};\n          arr['botName'] = element.BotName;\n          arr['suitName'] = suit.SuiteName;\n          arr['botId'] = element.BotId;\n          arr['suiteId'] = suit.SuiteId;\n          this.summaryCatalogue.push(arr);\n          this.botIds.push(element.BotId);\n          this.suitsIds.push(suit.SuiteId);\n        }\n      });\n    } else {\n      suit.Bots.forEach(element => {\n        let index = this.selectedBotIds.indexOf(element.BotId);\n        this.selectedBotIds.splice(index, 1);\n        this.summaryCatalogue.splice(index, 1);\n        this.botIds.splice(index, 1);\n        this.suitsIds.splice(index, 1);\n        // console.log(this.selectedBotIds);\n      });\n    }\n  }\n\n  scheduleJobCheck(event: any) {\n    if (event.target.checked === true) {\n      this.scheduleChecked = true;\n    } else {\n      this.scheduleChecked = false;\n    }\n  }\n\n  botSelected(suit: any, bot: any, event: any) {\n    this.selectedBotsConfigData = [];\n    this.chosenBotName = \"\";\n    this.chosenBot = [\n      {\n        botId: ''\n      }\n    ];\n    this.scheduleChecked = false;\n    let classnames = (<HTMLInputElement>document.getElementById('collapseThree')).className;\n    (<HTMLInputElement>document.getElementById('collapseThree')).className = classnames.replace('show', '');\n    // console.log(suit);\n    // console.log(bot);\n    if (event.target.checked == true) {\n      this.selectedBotIds.push(bot.BotId);\n      let arr: any = {};\n      arr['botName'] = bot.BotName;\n      arr['suitName'] = suit.SuiteName;\n      arr['botId'] = bot.BotId;\n      arr['suiteId'] = suit.SuiteId;\n      this.summaryCatalogue.push(arr);\n      this.botIds.push(bot.BotId);\n      this.suitsIds.push(suit.SuiteId);\n      // console.log(\"Selected Bots: \" + this.selectedBotIds);\n      // console.log(\"Selected Suits:\" + this.suitsIds);\n      // console.log(\"Selected BotsIds:\" + this.botIds);\n    } else {\n      //this.selectedBotIds.findIndex(item => item === event.target.value);\n      let index = this.selectedBotIds.indexOf(bot.BotId);\n      this.selectedBotIds.splice(index, 1);\n      this.summaryCatalogue.splice(index, 1);\n      this.botIds.splice(index, 1);\n      this.suitsIds.splice(index, 1);\n      // console.log(this.selectedBotIds);\n    }\n    // console.log('summaryCatalogue', this.summaryCatalogue);\n  }\n\n  loadBotConfig() {\n    if (this.selectedBots.length == 0) {\n      this.automationService.getBotConfig(this.selectedBotIds).subscribe(val => {\n        // console.log(val);\n        this.selectedBotsConfigData = val;\n      });\n      this.selectedBotIds.forEach(element => {\n        this.selectedBots.push(element);\n      });\n      this.selectedSuits = [];\n      this.suitsIds.forEach(element => {\n        this.selectedSuits.push(element);\n      });\n      this.summaryCatalogue.forEach(element => {\n        this.summaryCatalogueFinal.push(element);\n      });\n\n\n    } else {\n      // let indexToBespliced = [];\n      this.selectedBots = this.selectedBots.filter(item => this.selectedBotIds.includes(item));\n      this.automationService.getBotConfig(this.selectedBotIds).subscribe(val => {\n        this.selectedBotsConfigData = val;\n        // console.log(val);\n      });\n      this.selectedBotIds.forEach(element => {\n        if (this.selectedBots.includes(element)) {\n          // console.log('');\n        } else {\n          this.selectedBots.push(element);\n        }\n\n      });\n      this.selectedSuits = [];\n      this.suitsIds.forEach(element => {\n        this.selectedSuits.push(element);\n      });\n      this.summaryCatalogueFinal = [];\n      this.summaryCatalogue.forEach(element => {\n        this.summaryCatalogueFinal.push(element);\n      });\n    }\n    for (let i = 0; i < this.selectedBotsConfigData.length; i++) {\n      this.selectedBotsConfigData[i].BotInput = JSON.parse(this.selectedBotsConfigData[i].BotInput);\n    }\n    if (this.selectedBotsConfigData.length == 0) {\n      let classnames = (<HTMLInputElement>document.getElementById('collapseThree')).className;\n      (<HTMLInputElement>document.getElementById('collapseThree')).className = classnames.replace('show', '');\n      classnames = (<HTMLInputElement>document.getElementById('collapseFour')).className;\n      (<HTMLInputElement>document.getElementById('collapseFour')).className = classnames.replace('show', '');\n    }\n  }\n\n  showConfig(bot) {\n    // console.log('bot', bot);\n    // console.log('config', this.selectedBotsConfigData);\n    this.chosenBot = this.selectedBotsConfigData.filter(item => item.botId === bot.botId);\n    if (this.chosenBot.length > 0) {\n      this.chosenBotName = bot.botName;\n    }\n    // (<HTMLSelectElement>document.getElementById(\"botConfig\")).value = this.chosenBot[0].BotInput.input;\n    // console.log('chosenBot', this.chosenBot);\n  }\n  // convenience getter for easy access to form fields\n  get v() {\n    return this.orderDetailForm.controls;\n  }\n\n  get w() {\n    return this.scheduleForm.controls;\n  }\n\n  get x() {\n    return this.minuteScheduleForm.controls;\n  }\n\n  get y() {\n    return this.hoursScheduleForm.controls;\n  }\n\n  get z() {\n    return this.dailyScheduleForm.controls;\n  }\n\n  get u() {\n    return this.weeklyScheduleForm.controls;\n  }\n\n  get m() {\n    return this.monthlyScheduleForm.controls;\n  }\n\n\n  getServiceType(event: any) {\n    this.chosenBot = [\n      {\n        botId: ''\n      }\n    ];\n    this.chosenBotName = '';\n    this.selectedBotIds = [];\n    this.selectedBots = [];\n    this.botIds = [];\n    this.suitsIds = [];\n    this.summaryCatalogue = [];\n    this.summaryCatalogueFinal = [];\n    //this.serviceType=[];\n    this.selectedBotsConfigData = [];\n    this.scheduleChecked = false;\n    this.selectedSuits = [];\n    // console.log(event);\n    // if (event == '') {\n    //   this.serviceType = [];\n    //   this.orderDetailForm.patchValue({\n    //     'serviceType': '',\n    //   });\n    // } else {\n    //   this.orderType.forEach(element => {\n    //     if (element.orderType == event) {\n    //       this.serviceType = element.serviceType;\n    //     }\n    //   });\n    // }\n    if (this.orderDetailForm.invalid) {\n      let classnames = (<HTMLInputElement>document.getElementById('collapseTwo')).className;\n      (<HTMLInputElement>document.getElementById('collapseTwo')).className = classnames.replace('show', '');\n      classnames = (<HTMLInputElement>document.getElementById('collapseThree')).className;\n      (<HTMLInputElement>document.getElementById('collapseThree')).className = classnames.replace('show', '');\n      classnames = (<HTMLInputElement>document.getElementById('collapseFour')).className;\n      (<HTMLInputElement>document.getElementById('collapseFour')).className = classnames.replace('show', '');\n    }\n  }\n\n  // enableConfigType(event: any) {\n  //   this.chosenBot = [\n  //     {\n  //       botId: ''\n  //     }\n  //   ];\n  //   this.chosenBotName = '';\n  //   this.selectedBotIds = [];\n  //   this.selectedBots = [];\n  //   this.botIds = [];\n  //   this.suitsIds = [];\n  //   this.summaryCatalogue = [];\n  //   this.summaryCatalogueFinal = [];\n  //   //this.serviceType=[];\n  //   this.selectedBotsConfigData = [];\n  //   this.scheduleChecked = false;\n  //   this.selectedSuits = [];\n  //   // this.selectedServiceType = event.target.value;\n  //   if (event.target.value !== \"\") {\n  //     if (this.configType !== \"\" && this.selectedRole !== \"\") {\n  //       //get catalogue by config type\n  //       this.automationService.getCatalogueByConfigType(this.configType, this.selectedServiceType, this.selectedRole).subscribe(val => {\n  //         this.catalougue = val;\n  //       });\n  //     }\n  //   } else {\n  //     this.catalougue = [];\n  //   }\n  //   if (this.orderDetailForm.invalid) {\n  //     let classnames = (<HTMLInputElement>document.getElementById('collapseTwo')).className;\n  //     (<HTMLInputElement>document.getElementById('collapseTwo')).className = classnames.replace('show', '');\n  //     classnames = (<HTMLInputElement>document.getElementById('collapseThree')).className;\n  //     (<HTMLInputElement>document.getElementById('collapseThree')).className = classnames.replace('show', '');\n  //     classnames = (<HTMLInputElement>document.getElementById('collapseFour')).className;\n  //     (<HTMLInputElement>document.getElementById('collapseFour')).className = classnames.replace('show', '');\n  //   }\n  // }\n\n  getBotLibrary(event: any) {\n    this.orderTypeSelected = event.target.value;\n    if (event.target.value == \"\") {\n      this.catalougue = [];\n    } else {\n      if (this.selectedRole !== \"\") {\n        //get catalogue by config type\n        this.automationService.getCatalogueByorderType(event.target.value, this.selectedRole).subscribe(val => {\n          this.catalougue = val;\n        });\n      }\n    }\n    this.selectedBotIds = [];\n    this.selectedBots = [];\n    this.botIds = [];\n    this.suitsIds = [];\n    this.summaryCatalogue = [];\n    this.summaryCatalogueFinal = [];\n    //this.serviceType=[];\n    this.selectedBotsConfigData = [];\n    this.scheduleChecked = false;\n    this.selectedSuits = [];\n    this.chosenBot = [\n      {\n        botId: ''\n      }\n    ];\n    this.chosenBotName = '';\n    if (this.orderDetailForm.invalid) {\n      let classnames = (<HTMLInputElement>document.getElementById('collapseTwo')).className;\n      (<HTMLInputElement>document.getElementById('collapseTwo')).className = classnames.replace('show', '');\n      classnames = (<HTMLInputElement>document.getElementById('collapseThree')).className;\n      (<HTMLInputElement>document.getElementById('collapseThree')).className = classnames.replace('show', '');\n      classnames = (<HTMLInputElement>document.getElementById('collapseFour')).className;\n      (<HTMLInputElement>document.getElementById('collapseFour')).className = classnames.replace('show', '');\n    }\n  }\n\n  roleChange(event: any) {\n    this.selectedRole = event.target.value;\n    if (event.target.value == \"\") {\n      this.catalougue = [];\n    } else {\n      if (this.orderTypeSelected !== \"\") {\n        //get catalogue by config type\n        this.automationService.getCatalogueByorderType(this.orderTypeSelected, this.selectedRole).subscribe(val => {\n          this.catalougue = val;\n        });\n      }\n    }\n    this.selectedBotIds = [];\n    this.selectedBots = [];\n    this.botIds = [];\n    this.suitsIds = [];\n    this.summaryCatalogue = [];\n    this.summaryCatalogueFinal = [];\n    //this.serviceType=[];\n    this.selectedBotsConfigData = [];\n    this.scheduleChecked = false;\n    this.selectedSuits = [];\n    this.chosenBot = [\n      {\n        botId: ''\n      }\n    ];\n    this.chosenBotName = '';\n    if (this.orderDetailForm.invalid) {\n      let classnames = (<HTMLInputElement>document.getElementById('collapseTwo')).className;\n      (<HTMLInputElement>document.getElementById('collapseTwo')).className = classnames.replace('show', '');\n      classnames = (<HTMLInputElement>document.getElementById('collapseThree')).className;\n      (<HTMLInputElement>document.getElementById('collapseThree')).className = classnames.replace('show', '');\n      classnames = (<HTMLInputElement>document.getElementById('collapseFour')).className;\n      (<HTMLInputElement>document.getElementById('collapseFour')).className = classnames.replace('show', '');\n    }\n  }\n\n  goToBotDetail() {\n    let element: HTMLElement = document.getElementById('botselection-tab') as HTMLElement;\n    element.click();\n  }\n\n  submitOrderCreate() {\n    this.submitted = true;\n    this.isJsonError = false;\n    if (this.scheduleForm.invalid && (this.scheduleChecked === true)) {\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"<strong> Kindly provide the Job details</strong>\",\n      }\n      ];\n      setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n      return;\n    } else if (this.scheduleChecked === true) {\n      if ((<HTMLInputElement>document.getElementById('pills-min-create')).className.includes('active') && this.minuteScheduleForm.invalid) {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n      } else if ((<HTMLInputElement>document.getElementById('pills-hour-create')).className.includes('active')) {\n        if (this.hourlyRadio === \"hourlyOption1\" && this.y.everyHours.errors) {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong> Kindly provide the Job details</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n          return;\n        } else if (this.hourlyRadio === \"hourlyOption2\" && this.y.hoursMultiSelect.errors) {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong> Kindly provide the Job details</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n          return;\n        } else if (this.hourlyRadio === \"hourlyOption3\" && (this.y.hoursFrom.errors || this.y.hoursTo.errors)) {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong> Kindly provide the Job details</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n          return;\n        }\n      } else if ((<HTMLInputElement>document.getElementById('pills-daily-create')).className.includes('active')) {\n        if (this.z.dailyHours.errors || this.z.dailyMinutes.errors) {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong> Kindly provide the Job details</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n          return;\n        } else if (this.dailyRadio === \"dailyOption2\" && this.z.daysMultiSelect.errors) {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong> Kindly provide the Job details</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n          return;\n        } else if (this.dailyRadio === \"dailyOption3\" && (this.z.daysFrom.errors || this.z.daysTo.errors)) {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong> Kindly provide the Job details</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n          return;\n        }\n      } else if ((<HTMLInputElement>document.getElementById('pills-weekly-create')).className.includes('active') && (this.daysOfWeek.length == 0 || (this.u.weeklyHours.errors || this.u.weeklyMinutes.errors))) {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n      } else if ((<HTMLInputElement>document.getElementById('pills-monthly-create')).className.includes('active')) {\n        if (this.m.monthlyHours.errors || this.m.monthlyMinutes.errors) {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong> Kindly provide the Job details</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n          return;\n        } else if (this.monthlyRadio === \"monthlyOption1\") {\n        } else if (this.monthlyRadio === \"monthlyOption2\") {\n        }\n      }\n    }\n    if (this.orderDetailForm.invalid) {\n      // let data = '1';\n      // let element: HTMLElement = document.getElementById(data) as HTMLElement;\n      // console.log(element);\n      // element.click();\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"<strong> Kindly provide the order details</strong>\",\n      }\n      ];\n      setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n      return;\n    } else {\n      let pojo = {};\n      let innerpojo = {};\n      let suite = {};\n      let suiteDetails = [];\n      let bots = [];\n      let botargs = [];\n      //let arr={};\n      pojo['orderType'] = this.orderDetailForm.value.orderType;\n      pojo['orderCreatedBy'] = this.user.name;\n      // pojo['orderId'] = 0;\n      pojo['subOrderId'] = 0;\n      // pojo['confType'] = this.orderDetailForm.value.configType;\n      // pojo['serviceType'] = this.orderDetailForm.value.serviceType;\n      pojo['role'] = {\n        roleId: Number(this.orderDetailForm.value.role)\n      };\n      // arr['0']=\"-v username:aai@aai.onap.org\";\n      // arr['1']=\"-v password:demo123456!\";\n\n      // botargs.push(\"-v username:aai@aai.onap.org\");\n      // botargs.push(\"-v password:demo123456!\")\n      // suite['bot_args'] = botargs;\n      this.catalougue.forEach((suiteElement, suiteIndex) => {\n        let botcount = this.summaryCatalogue.filter(item => item.suiteId === suiteElement.SuiteId);\n        if (botcount.length > 0) {\n          let suitearray = {};\n          suitearray['suiteName'] = suiteElement.SuiteName;\n          let botDetails = [];\n          for (let i = 0; i < botcount.length; i++) {\n            let botarray = {};\n            botarray['botName'] = botcount[i].botName;\n            //botconfiginput\n            let val;\n            try {\n              val = JSON.parse((<HTMLTextAreaElement>document.getElementById('botConfig-' + botcount[i].botId)).value);\n            } catch (e) {\n              this.isJsonError = true;\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"Error while parsing JSON Input on <strong>\" + botcount[i].botName + \" </strong>\",\n              }];\n              setTimeout(function () { this.alertdata = false; }.bind(this), 7000);\n              return;\n            }\n\n            botarray['input'] = val;\n            botDetails.push(botarray);\n          }\n          suitearray['botDetails'] = botDetails;\n          suiteDetails.push(suitearray);\n        }\n      });\n      pojo['suiteDetails'] = suiteDetails;\n      // console.log(pojo);\n      if (this.isJsonError == false) {\n        if (this.scheduleChecked) {\n          this.jobAlreadyExits = false;\n          let schedulePojo = {\n            // confType: this.orderDetailForm.value.configType,\n            day: \"*\",\n            day_of_week: \"?\",\n            hour: \"*\",\n            input: pojo,\n            jobStatus: \"pending\",\n            jobname: this.scheduleForm.value.jobName,\n            minute: \"*\",\n            month: \"*\",\n            role: {\n              roleId: Number(this.orderDetailForm.value.role)\n            },\n            orderType: this.orderDetailForm.value.orderType,\n            schedulerCreatedBy:this.user.name,\n            jobModifiedBy: this.user.name,\n            // serviceType: this.orderDetailForm.value.serviceType\n          };\n          if ((<HTMLInputElement>document.getElementById('pills-min-create')).className.includes('active')) {\n            schedulePojo.minute = this.minuteScheduleForm.value.minute;\n          } else if ((<HTMLInputElement>document.getElementById('pills-hour-create')).className.includes('active')) {\n            if (this.hourlyRadio === \"hourlyOption1\") {\n              schedulePojo.hour = this.hoursScheduleForm.value.everyHours;\n            } else if (this.hourlyRadio === \"hourlyOption2\") {\n              schedulePojo.hour = this.hoursScheduleForm.value.hoursMultiSelect.join(',');\n            } else if (this.hourlyRadio === \"hourlyOption3\") {\n              schedulePojo.hour = this.hoursScheduleForm.value.hoursFrom + '-' + this.hoursScheduleForm.value.hoursTo;\n            }\n          } else if ((<HTMLInputElement>document.getElementById('pills-daily-create')).className.includes('active')) {\n            if (this.dailyRadio === \"dailyOption1\") {\n              schedulePojo.day = \"*\";\n            } else if (this.dailyRadio === \"dailyOption2\") {\n              schedulePojo.day = this.dailyScheduleForm.value.daysMultiSelect.join(',');\n            } else if (this.dailyRadio === \"dailyOption3\") {\n              schedulePojo.day = this.dailyScheduleForm.value.daysFrom + '-' + this.dailyScheduleForm.value.daysTo;\n            }\n            schedulePojo.day_of_week = '?';\n            schedulePojo.hour = this.dailyScheduleForm.value.dailyHours;\n            schedulePojo.minute = this.dailyScheduleForm.value.dailyMinutes;\n          } else if ((<HTMLInputElement>document.getElementById('pills-weekly-create')).className.includes('active')) {\n            schedulePojo.day_of_week = this.daysOfWeek.join(',');\n            schedulePojo.day = '?';\n            schedulePojo.hour = this.weeklyScheduleForm.value.weeklyHours;\n            schedulePojo.minute = this.weeklyScheduleForm.value.weeklyMinutes;\n          } else if ((<HTMLInputElement>document.getElementById('pills-monthly-create')).className.includes('active')) {\n            if (this.monthlyRadio === \"monthlyOption1\") {\n              schedulePojo.day = this.monthlyScheduleForm.value.monthlyDays;\n              schedulePojo.day_of_week = '?';\n              schedulePojo.month = this.monthlyScheduleForm.value.months;\n            } else if (this.monthlyRadio === \"monthlyOption2\") {\n              schedulePojo.day = '?';\n              schedulePojo.month = this.monthlyScheduleForm.value.monthssecond;\n              schedulePojo.day_of_week = this.monthlyScheduleForm.value.monthlyDayofWeek + '#' + this.monthlyScheduleForm.value.weeks;\n            }\n            schedulePojo.hour = this.monthlyScheduleForm.value.monthlyHours;\n            schedulePojo.minute = this.monthlyScheduleForm.value.monthlyMinutes;\n          }\n          // console.log('schedulePojo', schedulePojo);\n          this.automationService.scheduleOrder(schedulePojo).subscribe(val => {\n            let response: any = val;\n            // console.log('response', response);\n            this.createdOrderId = response.scheduler_id;\n            this.alertdata = true;\n            this.alertMessage = [{\n              \"type\": \"success\", \"close\": true,\n              \"content\": \"<strong> Job #\" + response.scheduler_id + \" is scheduled successfully!!</strong>\",\n            }];\n            setTimeout(function () {\n              this.alertdata = false;\n              this.resetOrderCreate('team-scheduled-order-list-tab');\n              let element: HTMLElement = document.getElementById('btnModalCloseOrder') as HTMLElement;\n              element.click();\n            }.bind(this), 2000);\n          }, error => {\n            let errorResponse = error;\n            // console.log('error', errorResponse.error);\n            if (errorResponse.error === \"Job Name Already Exists\") {\n              this.alertdata = true;\n              this.jobAlreadyExits = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"<strong>Job Name Already Exists</strong>\",\n              }\n              ];\n              setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n            } else {\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"<strong> Failed to schedule order</strong>\",\n              }\n              ];\n              setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n            }\n          });\n        } else {\n          pojo = JSON.stringify(pojo);\n          this.automationService.createOrder(pojo).subscribe(val => {\n            let response: any = val;\n            this.createdOrderId = response.id;\n            this.alertdata = true;\n            this.alertMessage = [{\n              \"type\": \"success\", \"close\": true,\n              \"content\": \"<strong> Order #\" + response.orderid + \" is created successfully!!</strong>\",\n            }];\n            setTimeout(function () {\n              this.alertdata = false;\n              this.resetOrderCreate('order-list-tab');\n              let element: HTMLElement = document.getElementById('btnModalCloseOrder') as HTMLElement;\n              element.click();\n            }.bind(this), 2000);\n\n          }, error => {\n            this.alertdata = true;\n            this.alertMessage = [{\n              \"type\": \"danger\", \"close\": true,\n              \"content\": \"<strong> Failed to create order</strong>\",\n            }\n            ];\n            setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n\n\n          });\n        }\n      }\n\n    }\n\n  }\n\n  resetOrderCreate(data) {\n    this.submitted = false;\n    this.createdOrderId = '';\n    this.isJsonError = false;\n    this.scheduleChecked = false;\n    this.chosenBot = [\n      {\n        botId: ''\n      }\n    ];\n    this.chosenBotName = '';\n    this.selectedSuits = [];\n    this.orderDetailForm.reset();\n    this.orderDetailForm.patchValue({\n      'createdBy': this.user.name,\n      // 'serviceType': '',\n      'orderType': '',\n      // 'configType': '',\n      'role': '',\n    });\n    this.selectedBotIds = [];\n    this.selectedBots = [];\n    this.botIds = [];\n    this.suitsIds = [];\n    this.summaryCatalogue = [];\n    // this.serviceType = [];\n    this.selectedBotsConfigData = [];\n    this.selectedSuits = [];\n    this.summaryCatalogueFinal = [];\n    let classnames = (<HTMLInputElement>document.getElementById('collapseTwo')).className;\n    (<HTMLInputElement>document.getElementById('collapseTwo')).className = classnames.replace('show', '');\n    classnames = (<HTMLInputElement>document.getElementById('collapseThree')).className;\n    (<HTMLInputElement>document.getElementById('collapseThree')).className = classnames.replace('show', '');\n    classnames = (<HTMLInputElement>document.getElementById('collapseFour')).className;\n    (<HTMLInputElement>document.getElementById('collapseFour')).className = classnames.replace('show', '');\n    this.ngOnInit();\n    if (data) {\n      let element: HTMLElement = document.getElementById(data) as HTMLElement;\n      element.click();\n    } else {\n      let element1 : HTMLElement = document.getElementById('btnModalCloseOrder') as HTMLElement;\n      element1.click();\n    }\n\n\n    // if (data == '1') {\n    //   let element: HTMLElement = document.getElementById(data) as HTMLElement;\n    //   element.click();\n    // } else {\n    //   let element: HTMLElement = document.getElementById('1') as HTMLElement;\n    //   element.click();\n    //   let element1: HTMLElement = document.getElementById(data) as HTMLElement;\n    //   element1.click();\n    // }\n\n\n  }\n\n  refreshBotConfig() {\n    this.automationService.getBotConfig(this.selectedBots).subscribe(val => {\n      this.selectedBotsConfigData = val;\n      // console.log(val);\n    });\n  }\n}\n","<div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <i class=\"fa fa-file mr-3\" aria-hidden=\"true\"></i>\n            <h6 class=\"modal-title\" id=\"order-report-title\">NEW ORDER CREATION</h6>\n            <button type=\"button\" id=\"btnModalCloseOrder\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n        <div class=\"modal-body\">\n            <div id=\"accordion\">\n                <div class=\"card\">\n                    <div class=\"card-header p-0\" id=\"headingOne\">\n                        <button class=\"btn btn-link d-flex\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\n                            aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            <div class=\"create-icon\"><img src=\"./assets/images/create-info.png\" alt=\"\"></div>\n                            <div class=\"header-name\">Order Info</div>\n                        </button>\n\n                    </div>\n\n                    <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\">\n                        <div class=\"card-body\">\n                            <form [formGroup]=\"orderDetailForm\">\n                                <div class=\"form-row\">\n                                    <div class=\"col-md-3 \">\n                                        <label for=\"validationCustom01\">Order Id</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"orderId\" value=\"####\" required\n                                            disabled>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <label for=\"validationCustom02\">Order Created By</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"ordercreatedby\"\n                                            formControlName=\"createdBy\">\n                                    </div>\n                                    <!-- <div class=\"col-md-3\">\n                                        <label for=\"\">Order type</label>\n                                        <select class=\"custom-select\" formControlName=\"orderType\"\n                                            (change)=\"getServiceType($event.target.value)\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && v.orderType.errors }\">\n                                            <option selected value=\"\">Select</option>\n                                            <option *ngFor=\"let item of orderType\" value=\"{{item.orderType}}\">\n                                                {{item.orderType}}</option>\n                                        </select>\n                                        <div *ngIf=\"submitted && v.orderType.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"v.orderType.errors\">Order Type is required</div>\n                                        </div>\n                                    </div> -->\n                                    <!-- <div class=\"col-md-3\">\n                                        <label for=\"\">Service Type</label>\n                                        <select class=\"custom-select\" formControlName=\"serviceType\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && v.serviceType.errors }\"\n                                            (change)=\"enableConfigType($event)\">\n                                            <option selected value=\"\">Select</option>\n                                            <option *ngFor=\"let item of serviceType\" value=\"{{item.serviceType}}\">\n                                                {{item.serviceType}}</option>\n                                        </select>\n                                        <div *ngIf=\"submitted && v.serviceType.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"v.serviceType.errors\">Service Type is required</div>\n                                        </div>\n                                    </div> -->\n                                    <div class=\"col-md-3\">\n                                        <label for=\"\">Order Type</label>\n                                        <!-- <select class=\"custom-select\" formControlName=\"orderType\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && v.orderType.errors }\"\n                                            (change)=\"getBotLibrary($event)\">\n                                            <option selected value=\"\">Select</option>\n                                            <option value=\"NOC_Auto-Diagnostic\">NOC_Auto-Diagnostic</option>\n                                            <option value=\"NOC_Auto-Resolution\">NOC_Auto-Resolution</option>\n                                            <option value=\"Provisioning\">Provisioning</option>\n                                            <option value=\"Configuration_Management\">Configuration_Management</option>\n                                            <option value=\"Fault_Management\">Fault_Management</option>\n                                            <option value=\"Basic_Process_Automation\">Basic_Process_Automation</option>\n                                        </select> -->\n                                        <select class=\"custom-select\" formControlName=\"orderType\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && v.orderType.errors }\"\n                                        (change)=\"getBotLibrary($event)\">\n\n                                        <option selected value=\"\">Select</option>\n                                        <option *ngFor=\"let item of orderType\" value=\"{{item.orderType}}\">\n                                            {{item.orderType}}</option>\n                                    </select>\n                                        <div *ngIf=\"submitted && v.orderType.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"v.orderType.errors\">Order Type is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <label for=\"\">Role Type</label>\n                                        <select class=\"custom-select\" formControlName=\"role\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && v.role.errors }\"\n                                            (change)=\"roleChange($event)\">\n                                            <option selected value=\"\">Select a role type</option>\n                                            <!-- <ng-container *ngFor=\"let item of roles\"> -->\n                                            <option *ngFor=\"let item of roles\" value=\"{{item.roleId}}\">\n                                                {{item.roleName}}</option>\n                                            <!-- </ng-container> -->\n                                        </select>\n                                        <div *ngIf=\"submitted && v.role.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"v.role.errors\">Role should be selected</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n\n                            <div class=\"text-right\">\n                                <button type=\"submit\" class=\"btn btn-sm btn-create-submit\" data-toggle=\"collapse\"\n                                    data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\"\n                                    [attr.hidden]=\"orderDetailForm.invalid ? true : null\"><i class=\"fa fa-chevron-right\"\n                                        aria-hidden=\"true\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-header p-0\" id=\"headingTwo\">\n                        <button class=\"btn btn-link collapsed d-flex\"\n                            [ngClass]=\"{'collapsed' : orderDetailForm.invalid}\" data-toggle=\"collapse\"\n                            data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\"\n                            [attr.disabled]=\"orderDetailForm.invalid ? true : null\">\n                            <div class=\"create-icon\"><img src=\"./assets/images/bot-details-icon.png\" alt=\"\"></div>\n                            <div class=\"header-name\">Bot Details</div>\n                        </button>\n                    </div>\n                    <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\">\n                        <div class=\"card-body p-0\">\n                            <div class=\"row\">\n                                <div class=\"col-md-4 pr-0\">\n                                    <div class=\"list-group selected-bots-display\">\n                                        <div class=\"title d-flex\">Bots selected({{summaryCatalogue.length}})\n                                            <div class=\"d-flex ml-auto\">\n\n                                                <!-- <div class=\"icons d-flex\">\n                                                    <i class=\"fa fa-search mr-3\" aria-hidden=\"true\"></i>\n\n                                                </div> -->\n                                            </div>\n                                        </div>\n                                        <div class=\"list-group list-bots\">\n                                            <!-- <a class=\"list-group-item d-flex\">\n                                                <img class=\"bot-imogi mr-1\" src=\"./assets/images/bot-imogi.png\" alt=\"\"\n                                                    width=\"16px\" height=\"16px\">\n                                                <div class=\"cut-text failed-text\">00A Prodapt NW Device health\n                                                    Condition check\n                                                </div>\n                                            </a> -->\n                                            <ng-container *ngFor=\"let bots of summaryCatalogue; let idx = index \">\n                                                <a class=\"list-group-item d-flex\" (click)=\"showConfig(bots)\">\n                                                    <img class=\"bot-imogi mr-1\" src=\"./assets/images/bot-imogi.png\"\n                                                        alt=\"\" width=\"16px\" height=\"16px\">\n                                                    <div class=\"cut-text\"\n                                                        [ngClass]=\"{'active':chosenBotName==bots.botName}\">\n                                                        {{bots.botName}}</div>\n                                                </a>\n                                            </ng-container>\n                                        </div>\n                                        <div *ngIf=\"summaryCatalogue.length>0 && selectedBotsConfigData.length==0\"\n                                            class=\"text-right p-2\"><button type=\"submit\"\n                                                class=\"btn btn-sm btn-create-submit\" (click)=\"loadBotConfig()\">Fetch\n                                                Bot Input</button></div>\n                                    </div>\n                                    <div class=\"list-group create-bots-display\">\n                                        <div class=\"title d-flex\">Catalogue({{catalougue.length}})\n                                            <!-- <div class=\"d-flex ml-auto\">\n                                                <div class=\"icons d-flex\">\n                                                    <i class=\"fa fa-search mr-3\" aria-hidden=\"true\"></i>\n                                                </div>\n                                            </div> -->\n                                        </div>\n                                        <div class=\"bot-section\">\n                                            <a href=\"#Suits\" class=\"list-group-item collapse\" data-toggle=\"collapse\"\n                                                aria-expanded=\"true\">\n                                                <i class=\"fa fa-caret-down mr-1\" aria-hidden=\"true\"></i><i\n                                                    class=\"fa fa-caret-up mr-1\" aria-hidden=\"true\"></i>\n                                                <i class=\"fa fa-file-archive-o mr-1\" aria-hidden=\"true\"></i>Suits\n                                            </a>\n                                            <div class=\"list-group mx-4 collapse show\" id=\"Suits\">\n                                                <ng-container *ngFor=\"let item of catalougue; let i = index\">\n                                                    <a href=\"#testSuit-{{i}}\" class=\"list-group-item d-flex\"\n                                                        data-toggle=\"collapse\" aria-expanded=false>\n                                                        <img class=\"collapse-close mr-2 mt-1\"\n                                                            src=\"./assets/images/collapse-close.png\" alt=\"\" width=\"8px\"\n                                                            height=\"8px\">\n                                                        <img class=\"collapse-open mr-2 mt-1\"\n                                                            src=\"./assets/images/collapse-open.png\" alt=\"\" width=\"8px\"\n                                                            height=\"8px\">\n                                                        <img class=\"document-black mr-2\"\n                                                            src=\"./assets/images/suit-document.png\" alt=\"\" width=\"13px\"\n                                                            height=\"15px\">\n                                                        <img class=\"document-grey mr-2\"\n                                                            src=\"./assets/images/suit-document-grey.png\" alt=\"\"\n                                                            width=\"13px\" height=\"15px\">\n                                                        <span class=\"cut-text\">{{item.SuiteName}}</span>\n                                                    </a>\n                                                    <div class=\"list-group ml-3 collapse\" id=\"testSuit-{{i}}\"\n                                                        *ngFor=\"let data of item.Bots; let j = index\">\n                                                        <a class=\"list-group-item d-flex\" *ngIf=\"j==0\">\n                                                            <input type=\"checkbox\"\n                                                                class=\"selectall mr-1 selectBots touncheck-{{i}}\"\n                                                                id=\"select-{{i}}\" class=\"mr-1\"\n                                                                aria-label=\"Checkbox for following text input\"\n                                                                (change)=\"selectAllBots($event,item)\">\n                                                            <img class=\"bot-imogi mr-1\"\n                                                                src=\"./assets/images/bot-imogi.png\" alt=\"\" width=\"16px\"\n                                                                height=\"16px\">\n                                                            <img class=\"bot-imogi-selected mr-1\"\n                                                                src=\"./assets/images/bot-imogi-selection.png\" alt=\"\"\n                                                                width=\"16px\" height=\"16px\">\n                                                            <span class=\"cut-text\">Select All</span>\n                                                        </a>\n                                                        <a class=\"list-group-item d-flex\">\n                                                            <input type=\"checkbox\"\n                                                                class=\"mr-1 items-select-{{i}} botcollection\"\n                                                                id=\"touncheck-{{i}}\"\n                                                                aria-label=\"Checkbox for following text input\"\n                                                                value=\"{{data.BotId}}\"\n                                                                (change)=\"botSelected(item,data,$event)\">\n                                                            <img class=\"bot-imogi mr-1\"\n                                                                src=\"./assets/images/bot-imogi.png\" alt=\"\" width=\"16px\"\n                                                                height=\"16px\">\n                                                            <img class=\"bot-imogi-selected mr-1\"\n                                                                src=\"./assets/images/bot-imogi-selection.png\" alt=\"\"\n                                                                width=\"16px\" height=\"16px\">\n                                                            <span class=\"cut-text\">{{data.BotName}}</span>\n                                                        </a>\n                                                    </div>\n                                                </ng-container>\n                                            </div>\n                                            <!-- <div><img _ngcontent-ywd-c60=\"\" class=\"mr-3 mt-4 add-btn\" src=\"./assets/images/update-bot.png\"\n                                                (click)=\"loadBotConfig()\" style=\"width:36px;height:30px;float: right;\" alt=\"\"></div> -->\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-8 pl-0\">\n                                    <div class=\"created-bot-details\">\n                                        <div class=\"row\">\n                                            <div class=\"col\">\n\n                                                <ul class=\"nav nav-pills mb-3 heading-section\" id=\"pills-tab\"\n                                                    role=\"tablist\">\n                                                    <div *ngIf=\"selectedBotsConfigData.length>0\" class=\"header\">Bot\n                                                        Input</div>\n                                                    <!-- <li class=\"nav-item ml-auto mr-3\">\n                                                        <a class=\"nav-link active\" id=\"pills-form-tab\"\n                                                            data-toggle=\"pill\" href=\"#pills-form\" role=\"tab\"\n                                                            aria-controls=\"pills-form\" aria-selected=\"true\">Form</a>\n                                                    </li>\n                                                    <li class=\"nav-item mr-3\">\n                                                        <a class=\"nav-link\" id=\"pills-xcel-tab\" data-toggle=\"pill\"\n                                                            href=\"#pills-xcel\" role=\"tab\" aria-controls=\"pills-xcel\"\n                                                            aria-selected=\"false\">Xcel</a>\n                                                    </li> -->\n                                                    <li *ngIf=\"selectedBotsConfigData.length>0\"\n                                                        class=\"nav-item ml-auto mr-3\">\n                                                        <a class=\"nav-link active\" id=\"pills-json-tab\"\n                                                            data-toggle=\"pill\" href=\"#pills-json\" role=\"tab\"\n                                                            aria-controls=\"pills-json\" aria-selected=\"false\">Text</a>\n                                                    </li>\n                                                </ul>\n                                                <div *ngIf=\"selectedBotsConfigData.length>0\" class=\"tab-content\"\n                                                    id=\"pills-tabContent\">\n                                                    <!-- <div class=\"tab-pane fade show active\" id=\"pills-form\"\n                                                        role=\"tabpanel\" aria-labelledby=\"pills-form-tab\">\n                                                        <div class=\"bot-name-title mb-2 ml-1\"><img\n                                                                src=\"./assets/images/bot-imogi-lg.png\" alt=\"\"\n                                                                width=\"22px\" height=\"22px\">Bot\n                                                            name: <span class=\"pl-1\">00A Prodapt NW Device Health\n                                                                Check Net Bot</span>\n                                                        </div>\n                                                        <div class=\"form-row\">\n                                                            <div class=\"col-md-3 \">\n                                                                <label for=\"validationCustom01\">Submitter</label>\n                                                                <input type=\"text\" class=\"form-control\"\n                                                                    id=\"validationCustom01\" required>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"form-row\">\n                                                            <div class=\"col-md-4 \">\n                                                                <label for=\"validationCustom01\">Submitter</label>\n                                                                <input type=\"text\" class=\"form-control\"\n                                                                    id=\"validationCustom01\" required>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"form-row\">\n                                                            <div class=\"col-md-4 \">\n                                                                <label for=\"validationCustom01\">Submitter</label>\n                                                                <input type=\"text\" class=\"form-control\"\n                                                                    id=\"validationCustom01\" required>\n                                                            </div>\n                                                            <div class=\"col-md-4 \">\n                                                                <label for=\"validationCustom01\">Submitter</label>\n                                                                <input type=\"text\" class=\"form-control\"\n                                                                    id=\"validationCustom01\" required>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"form-row\">\n                                                            <div class=\"col-md-4 \">\n                                                                <label for=\"validationCustom01\">Submitter</label>\n                                                                <input type=\"text\" class=\"form-control\"\n                                                                    id=\"validationCustom01\" required>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"form-row\">\n                                                            <div class=\"col-md-3 \">\n                                                                <label for=\"validationCustom01\">Submitter</label>\n                                                                <input type=\"text\" class=\"form-control\"\n                                                                    id=\"validationCustom01\" required>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"tab-pane fade\" id=\"pills-xcel\" role=\"tabpanel\"\n                                                        aria-labelledby=\"pills-xcel-tab\">\n                                                        <div class=\"bot-name-title mb-2 ml-4\"><img\n                                                                src=\"./assets/images/bot-imogi-lg.png\" alt=\"\"\n                                                                width=\"22px\" height=\"22px\">Bot\n                                                            name: <span class=\"pl-1\">00A Prodapt NW Device Health\n                                                                Check Net Bot</span>\n                                                        </div>\n                                                        <div class=\"Xcel-form\">\n                                                            <table class=\"table table-bordered mb-0\">\n                                                                <tr>\n                                                                    <td>\n                                                                        1\n                                                                    </td>\n                                                                    <td>\n                                                                        Open Connection\n                                                                    </td>\n                                                                    <td>\n                                                                        $(Host)\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        2\n                                                                    </td>\n                                                                    <td>\n                                                                        Login\n                                                                    </td>\n                                                                    <td>\n                                                                        $(Username)\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        3\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        4\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        5\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        6\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        7\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        8\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        9\n                                                                    </td>\n                                                                    <td>\n                                                                        Login\n                                                                    </td>\n                                                                    <td>\n                                                                        $(Username)\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        10\n                                                                    </td>\n                                                                    <td>\n                                                                        Login\n                                                                    </td>\n                                                                    <td>\n                                                                        $(Username)\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        11\n                                                                    </td>\n                                                                    <td>\n                                                                        Login\n                                                                    </td>\n                                                                    <td>\n                                                                        $(Username)\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>\n                                                                        12\n                                                                    </td>\n                                                                    <td>\n                                                                        Login\n                                                                    </td>\n                                                                    <td>\n                                                                        $(Username)\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                    <td>\n\n                                                                    </td>\n                                                                </tr>\n                                                            </table>\n                                                        </div>\n\n                                                    </div> -->\n                                                    <div class=\"tab-pane fade show active\" id=\"pills-json\"\n                                                        role=\"tabpanel\" aria-labelledby=\"pills-json-tab\">\n                                                        <div *ngIf=\"chosenBot && chosenBot.length > 0 && chosenBotName!== ''\"\n                                                            class=\"bot-name-title\"><img\n                                                                src=\"./assets/images/bot-imogi-lg.png\" alt=\"\"\n                                                                width=\"22px\" height=\"22px\">Bot\n                                                            name: <span class=\"pl-1\">{{chosenBotName}}</span>\n                                                        </div>\n                                                        <div *ngFor=\"let config of selectedBotsConfigData; let idy = index\"\n                                                            class=\"editor-form\">\n                                                            <textarea *ngIf=\"chosenBotName!== ''\" class=\"form-control\"\n                                                                [ngStyle]=\"{'display': config.botId == chosenBot[0].botId ? 'block' : 'none'}\"\n                                                                rows=\"16\" id=\"botConfig-{{config.botId}}\"\n                                                                value=\"\">{{config.botInput?.input  | json}}</textarea>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"text-right positioning\">\n                                        <button type=\"submit\"\n                                            [attr.hidden]=\"selectedBotsConfigData.length == 0?true:null\"\n                                            data-toggle=\"collapse\"\n                                            [attr.data-target]=\"scheduleChecked?'#collapseFour':'#collapseThree'\"\n                                            class=\"btn btn-sm btn-create-submit\"><i class=\"fa fa-chevron-right\"\n                                                aria-hidden=\"true\"></i></button>\n                                    </div>\n                                    <div *ngIf=\"selectedBotsConfigData.length>0\" class=\"form-check schedule\">\n                                        <input type=\"checkbox\" class=\"form-check-input\" id=\"scheduleCheckbox\"\n                                            (change)=\"scheduleJobCheck($event)\">\n                                        <label class=\"form-check-label\" for=\"scheduleCheckbox\">check to schedule the\n                                            job</label>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"scheduleChecked\" class=\"card\">\n                    <div class=\"card-header p-0\" id=\"headingFour\">\n                        <button class=\"btn btn-link collapsed d-flex\" data-toggle=\"collapse\" data-target=\"#collapseFour\"\n                            aria-expanded=\"false\" aria-controls=\"collapseFour\">\n                            <div class=\"create-icon\"><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i></div>\n                            <div class=\"header-name\">Schedule Job</div>\n                        </button>\n                    </div>\n                    <div id=\"collapseFour\" class=\"collapse\" aria-labelledby=\"headingFour\">\n                        <div class=\"card-body p-0\">\n                            <div class=\"row\">\n                                <div class=\"col\">\n                                    <div class=\"created-bot-details\">\n                                        <div class=\"row\">\n                                            <div class=\"col\">\n                                                <ul class=\"nav nav-pills heading-section\" id=\"pills-tab\" role=\"tablist\">\n                                                    <div class=\"header mt-5 d-flex\"><label for=\"validationCustom01\"\n                                                            style=\"\n                                                        font-size: 13px;\n                                                        font-weight: 400;\n                                                        width:72px;\n                                                    \">Schedule Name</label>\n                                                        <form [formGroup]=\"scheduleForm\"><input type=\"text\"\n                                                                [ngClass]=\"{ 'is-invalid': submitted && (w.jobName.errors || jobAlreadyExits )}\"\n                                                                class=\"form-control\" id=\"jobName\" (change)=\"scheduleNameCheck($event.target.value)\"\n                                                                formControlName=\"jobName\" required>\n                                                            <div *ngIf=\"submitted && w.jobName.errors\"\n                                                                class=\"invalid-feedback\">\n                                                                <div *ngIf=\"w.jobName.errors\">Schedule name is required\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"errorText\" *ngIf=\"submitted && jobAlreadyExits\">\n                                                                Please enter an unique Schedule Name</div>\n                                                        </form>\n                                                    </div>\n                                                    <li (click)=\"resetTab()\" class=\"nav-item ml-auto mr-3\">\n                                                        <a class=\"nav-link active\" id=\"pills-min-create-tab\"\n                                                            data-toggle=\"pill\" href=\"#pills-min-create\" role=\"tab\"\n                                                            aria-controls=\"pills-min-create\"\n                                                            aria-selected=\"true\">Minutes</a>\n                                                    </li>\n                                                    <li (click)=\"resetTab()\" class=\"nav-item mr-3\">\n                                                        <a class=\"nav-link\" id=\"pills-hour-create-tab\"\n                                                            data-toggle=\"pill\" href=\"#pills-hour-create\" role=\"tab\"\n                                                            aria-controls=\"pills-hour-create\"\n                                                            aria-selected=\"false\">Hourly</a>\n                                                    </li>\n                                                    <li (click)=\"resetTab()\" class=\"nav-item mr-2\">\n                                                        <a class=\"nav-link\" id=\"pills-daily-create-tab\"\n                                                            data-toggle=\"pill\" href=\"#pills-daily-create\" role=\"tab\"\n                                                            aria-controls=\"pills-daily-create\"\n                                                            aria-selected=\"false\">Daily</a>\n                                                    </li>\n                                                    <li (click)=\"resetTab()\" class=\"nav-item mr-2\">\n                                                        <a class=\"nav-link\" id=\"pills-weekly-create-tab\"\n                                                            data-toggle=\"pill\" href=\"#pills-weekly-create\" role=\"tab\"\n                                                            aria-controls=\"pills-weekly-create\"\n                                                            aria-selected=\"false\">Weekly</a>\n                                                    </li>\n                                                    <li (click)=\"resetTab()\" class=\"nav-item mr-2\">\n                                                        <a class=\"nav-link\" id=\"pills-monthly-create-tab\"\n                                                            data-toggle=\"pill\" href=\"#pills-monthly-create\" role=\"tab\"\n                                                            aria-controls=\"pills-monthly-create\"\n                                                            aria-selected=\"false\">Monthly</a>\n                                                    </li>\n                                                </ul>\n                                                <div class=\"tab-content p-3\" id=\"pills-tabContent\">\n                                                    <div class=\"tab-pane fade show active\" id=\"pills-min-create\"\n                                                        role=\"tabpanel\" aria-labelledby=\"pills-min-create-tab\">\n                                                        <form [formGroup]=\"minuteScheduleForm\" class=\"form-inline\">\n                                                            <div class=\"form-group\">\n                                                                <label for=\"minute\">Every</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && x.minute.errors }\"\n                                                                    id=\"minute\" formControlName=\"minute\">\n                                                                    <option value=\"\" selected></option>\n                                                                    <!-- <option value=\"*\">*</option> -->\n                                                                    <option *ngFor=\"let minute of minutes_mins; let i=index;\"\n                                                                        value=\"*/{{minute}}\">{{minute}}</option>\n                                                                </select>\n                                                                <div id=\"minute\" class=\"text-muted\">\n                                                                    Minute(s)\n                                                                </div>\n                                                                <div *ngIf=\"submitted && x.minute.errors\"\n                                                                    class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"x.minute.errors\">Please select a value\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </form>\n                                                        <div class=\"text-right\">\n                                                            <small class=\"text-danger\">\"*\" Denotes all the\n                                                                value(s)</small>\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"tab-pane fade\" id=\"pills-hour-create\" role=\"tabpanel\"\n                                                        aria-labelledby=\"pills-hour-create-tab\">\n                                                        <form [formGroup]=\"hoursScheduleForm\">\n                                                            <div class=\"form-inline mb-3\">\n                                                                <input class=\"form-check-input\" type=\"radio\"\n                                                                    name=\"hourlyOption\" id=\"hourlyOption1\"\n                                                                    value=\"hourlyOption1\"\n                                                                    (change)=\"changeHoursRadio($event)\" checked>\n                                                                <label for=\"everyHours\">Every</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    id=\"everyHours\" formControlName=\"everyHours\" [attr.disabled]=\"hourlyRadio != 'hourlyOption1' ? true : null\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && y.everyHours.errors }\">\n                                                                    <option value=\"\" selected></option>\n                                                                    <!-- <option value=\"*\">*</option> -->\n                                                                    <option *ngFor=\"let hour of hours_hrs; let i=index;\"\n                                                                        value=\"*/{{hour}}\">{{hour}}</option>\n                                                                </select>\n                                                                <div id=\"minute\" class=\"text-muted\">\n                                                                    Hour(s)\n                                                                </div>\n                                                                <div *ngIf=\"hourlyRadio == 'hourlyOption1' && submitted && y.everyHours.errors\"\n                                                                    class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"y.everyHours.errors\">Please select a\n                                                                        value</div>\n                                                                </div>\n                                                            </div>\n                                                            <small class=\"text-danger\">Custom schedule with muliple time\n                                                                slots</small>\n                                                            <div class=\"form-inline mt-2 mb-3\">\n                                                                <input class=\"form-check-input\" type=\"radio\"\n                                                                    name=\"hourlyOption\" id=\"hourlyOption2\"\n                                                                    value=\"hourlyOption2\"\n                                                                    (change)=\"changeHoursRadio($event)\">\n                                                                <label for=\"hoursMultiSelect\">Hours list :</label>\n                                                                <span class=\"mr-2\"></span>\n                                                                <ng-multiselect-dropdown name=\"hoursMultiSelect\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && y.hoursMultiSelect.errors }\"\n                                                                    [placeholder]=\"'Select hours'\" [data]=\"hours\"\n                                                                    [disabled]=\"hourlyRadio != 'hourlyOption2'\"\n                                                                    [settings]=\"hoursMultiSelectSettings\"\n                                                                    id=\"hoursMultiSelect\"\n                                                                    formControlName=\"hoursMultiSelect\">\n                                                                </ng-multiselect-dropdown>\n                                                                <div *ngIf=\"hourlyRadio == 'hourlyOption2' && submitted && y.hoursMultiSelect.errors\"\n                                                                    class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"y.hoursMultiSelect.errors\">Please select\n                                                                        a value</div>\n                                                                </div>\n                                                            </div>\n                                                            <small class=\"text-danger mb-1\">Custom schedule with\n                                                                specific time range</small>\n                                                            <div class=\"form-inline mt-2 mb-3\">\n                                                                <input class=\"form-check-input\" type=\"radio\"\n                                                                    name=\"hourlyOption\" id=\"hourlyOption3\"\n                                                                    value=\"hourlyOption3\"\n                                                                    (change)=\"changeHoursRadio($event)\">\n                                                                <label for=\"minute\">Time Range :</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && y.hoursFrom.errors }\"\n                                                                    (change)=\"getHoursEndRange($event.target.value)\"\n                                                                    [attr.disabled]=\"hourlyRadio != 'hourlyOption3' ? true : null\"\n                                                                    id=\"hoursFrom\" formControlName=\"hoursFrom\">\n                                                                    <option value=\"\" selected>select start range\n                                                                    </option>\n                                                                    <option *ngFor=\"let hour of hours; let i=index;\"\n                                                                        value=\"{{hour}}\">{{hour}}</option>\n                                                                </select>\n                                                                <label for=\"minute\">-</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && y.hoursTo.errors }\"\n                                                                    [attr.disabled]=\"hourlyRadio != 'hourlyOption3'  ? true : null\"\n                                                                    id=\"hoursTo\" formControlName=\"hoursTo\">\n                                                                    <option value=\"\" selected>select end range</option>\n                                                                    <option\n                                                                        *ngFor=\"let hour of hoursEndRange; let i=index;\"\n                                                                        value=\"{{hour}}\">{{hour}}</option>\n                                                                </select>\n                                                                <div *ngIf=\"hourlyRadio == 'hourlyOption3' && submitted && (y.hoursFrom.errors || y.hoursTo.errors)\"\n                                                                    class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"y.hoursFrom.errors || y.hoursTo.errors\">\n                                                                        Please select a valid start and end time</div>\n                                                                </div>\n                                                            </div>\n                                                            <!-- <div class=\"form-inline\">\n                                                              <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\">\n                                                              <label for=\"minute\">Runs On</label>\n                                                              <select class=\"custom-select inlineSelect mx-2\" id=\"minute\">\n                                                                <option selected>*</option>\n                                                                <option value=\"1\">12</option>\n                                                                <option value=\"2\">13</option>\n                                                                <option value=\"3\">14</option>\n                                                              </select>\n                                                              <label for=\"minute\">:</label>\n                                                              <select class=\"custom-select inlineSelect mx-2\" id=\"minute\">\n                                                                  <option selected>*</option>\n                                                                  <option value=\"1\">00</option>\n                                                                  <option value=\"2\">01</option>\n                                                                  <option value=\"3\">02</option>\n                                                                </select>\n                                                              </div> -->\n                                                            <div class=\"text-right\">\n                                                                <small class=\"text-danger\">\"*\" Denotes all the\n                                                                    value(s)</small>\n                                                            </div>\n                                                        </form>\n\n                                                    </div>\n                                                    <div class=\"tab-pane fade\" id=\"pills-daily-create\" role=\"tabpanel\"\n                                                        aria-labelledby=\"pills-daily-create-tab\">\n                                                        <form [formGroup]=\"dailyScheduleForm\">\n                                                            <div class=\"form-inline mb-3\">\n                                                                <input class=\"form-check-input\" type=\"radio\"\n                                                                    name=\"dailyOption\" id=\"dailyOption1\"\n                                                                    value=\"dailyOption1\"\n                                                                    (change)=\"changeDailyRadio($event)\" checked>\n                                                                <label for=\"minute\">Everyday</label>\n                                                            </div>\n                                                            <small class=\"text-danger\">Custom schedule with muliple\n                                                                date(s)</small>\n                                                            <div class=\"form-inline mt-2 mb-3\">\n                                                                <input class=\"form-check-input\" type=\"radio\"\n                                                                    name=\"dailyOption\" id=\"dailyOption2\"\n                                                                    value=\"dailyOption2\"\n                                                                    (change)=\"changeDailyRadio($event)\">\n                                                                <label for=\"daysMultiSelect\">Days list :</label>\n                                                                <span class=\"mr-2\"></span>\n                                                                <ng-multiselect-dropdown name=\"daysMultiSelect\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && z.daysMultiSelect.errors }\"\n                                                                    [placeholder]=\"'Select Days'\" [data]=\"days\"\n                                                                    [disabled]=\"dailyRadio != 'dailyOption2'\"\n                                                                    [settings]=\"daysMultiSelectSettings\"\n                                                                    formControlName=\"daysMultiSelect\">\n                                                                </ng-multiselect-dropdown>\n                                                                <div *ngIf=\"dailyRadio == 'dailyOption2' && submitted && z.daysMultiSelect.errors\"\n                                                                    class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"z.daysMultiSelect.errors\">Please select\n                                                                        a value</div>\n                                                                </div>\n                                                            </div>\n                                                            <small class=\"text-danger\">Custom schedule with specific\n                                                                date\n                                                                range</small>\n                                                            <div class=\"form-inline mt-2 mb-3\">\n                                                                <input class=\"form-check-input\" type=\"radio\"\n                                                                    name=\"dailyOption\" id=\"dailyOption3\"\n                                                                    value=\"dailyOption3\"\n                                                                    (change)=\"changeDailyRadio($event)\">\n                                                                <label for=\"minute\">Date Range :</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && z.daysFrom.errors }\"\n                                                                    (change)=\"getDaysEndRange($event.target.value)\"\n                                                                    id=\"daysFrom\" [attr.disabled]=\"dailyRadio != 'dailyOption3' ? true : null\" formControlName=\"daysFrom\">\n                                                                    <option value=\"\" selected>select start date\n                                                                    </option>\n                                                                    <option *ngFor=\"let day of days; let i=index;\"\n                                                                        value=\"{{day}}\">{{day}}</option>\n                                                                </select>\n                                                                <label for=\"minute\">-</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && z.daysTo.errors }\"\n                                                                    id=\"daysTo\" [attr.disabled]=\"dailyRadio != 'dailyOption3' ? true : null\" formControlName=\"daysTo\">\n                                                                    <option value=\"\" selected>select end date</option>\n                                                                    <option *ngFor=\"let days of daysEndRange;\"\n                                                                        value=\"{{days}}\">{{days}}</option>\n                                                                </select>\n                                                                <div *ngIf=\"dailyRadio == 'dailyOption3' && submitted && (z.daysFrom.errors || y.daysTo.errors)\"\n                                                                    class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"z.daysFrom.errors || z.daysTo.errors\">\n                                                                        Please select a valid start and end date</div>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"form-inline\">\n                                                                <label for=\"minute\">Starts at :</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && z.dailyHours.errors }\"\n                                                                    id=\"dailyHours\" formControlName=\"dailyHours\">\n                                                                    <!-- <option value=\"*\" selected>*</option> -->\n                                                                    <option *ngFor=\"let hour of hours; let i=index;\"\n                                                                        value=\"{{hour}}\">{{hour}}</option>\n                                                                </select>\n                                                                <label for=\"minute\">:</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && z.dailyMinutes.errors }\"\n                                                                    id=\"dailyMinutes\" formControlName=\"dailyMinutes\">\n                                                                    <!-- <option value=\"*\" selected>*</option> -->\n                                                                    <option *ngFor=\"let minute of minutes; let i=index;\"\n                                                                        value=\"{{minute}}\">{{minute}}</option>\n                                                                </select>\n                                                                <div *ngIf=\"submitted && (z.dailyHours.errors || z.dailyMinutes.errors)\"\n                                                                    class=\"invalid-feedback\">\n                                                                    <div\n                                                                        *ngIf=\"z.dailyHours.errors || z.dailyMinutes.errors\">\n                                                                        Please select a valid hour and minute</div>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-right\">\n                                                                <small class=\"text-danger\">\"*\" Denotes all the\n                                                                    value(s)</small>\n                                                            </div>\n                                                        </form>\n\n                                                    </div>\n                                                    <div class=\"tab-pane fade\" id=\"pills-weekly-create\" role=\"tabpanel\"\n                                                        aria-labelledby=\"pills-weekly-create-tab\">\n                                                        <form [formGroup]=\"weeklyScheduleForm\">\n                                                            <div class=\"form-check form-check-inline\">\n                                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                                    id=\"monday\" value=\"MON\" formControlName=\"monday\"\n                                                                    (change)=\"selectDaysOfWeek('MON',$event)\">\n                                                                <label class=\"form-check-label\"\n                                                                    for=\"inlineCheckbox1\">Monday</label>\n                                                            </div>\n                                                            <div class=\"form-check form-check-inline\">\n                                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                                    id=\"tuesday\" value=\"TUE\" formControlName=\"tuesday\"\n                                                                    (change)=\"selectDaysOfWeek('TUE',$event)\">\n                                                                <label class=\"form-check-label\"\n                                                                    for=\"inlineCheckbox2\">Tuesday</label>\n                                                            </div>\n                                                            <div class=\"form-check form-check-inline\">\n                                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                                    id=\"wednesday\" value=\"WED\" formControlName=\"wednesday\"\n                                                                    (change)=\"selectDaysOfWeek('WED',$event)\">\n                                                                <label class=\"form-check-label\"\n                                                                    for=\"inlineCheckbox3\">Wednesday</label>\n                                                            </div>\n                                                            <div class=\"form-check form-check-inline\">\n                                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                                    id=\"thursday\" value=\"THU\" formControlName=\"thursday\"\n                                                                    (change)=\"selectDaysOfWeek('THU',$event)\">\n                                                                <label class=\"form-check-label\"\n                                                                    for=\"inlineCheckbox4\">Thursday</label>\n                                                            </div>\n                                                            <div class=\"form-check form-check-inline\">\n                                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                                    id=\"friday\" value=\"FRI\" formControlName=\"friday\"\n                                                                    (change)=\"selectDaysOfWeek('FRI',$event)\">\n                                                                <label class=\"form-check-label\"\n                                                                    for=\"inlineCheckbox5\">Friday</label>\n                                                            </div>\n                                                            <div class=\"form-check form-check-inline\">\n                                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                                    id=\"saturday\" value=\"SAT\" formControlName=\"saturday\"\n                                                                    (change)=\"selectDaysOfWeek('SAT',$event)\">\n                                                                <label class=\"form-check-label\"\n                                                                    for=\"inlineCheckbox6\">Saturday</label>\n                                                            </div>\n                                                            <div class=\"form-check form-check-inline\">\n                                                                <input class=\"form-check-input\" type=\"checkbox\"\n                                                                    id=\"sunday\" value=\"SUN\" formControlName=\"sunday\"\n                                                                    (change)=\"selectDaysOfWeek('SUN',$event)\">\n                                                                <label class=\"form-check-label\"\n                                                                    for=\"inlineCheckbox7\">Sunday</label>\n                                                            </div>\n                                                            <!-- <div *ngIf=\"submitted && daysOfWeek.length==0\" class=\"invalid-feedback\"> -->\n                                                            <div class=\"errorText\"\n                                                                *ngIf=\"submitted && daysOfWeek.length==0\">Please check a\n                                                                value</div>\n                                                            <!-- </div>  -->\n                                                            <div class=\"form-inline\">\n                                                                <label for=\"minute\">Starts at :</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && u.weeklyHours.errors }\"\n                                                                    id=\"weeklyHours\" formControlName=\"weeklyHours\">\n                                                                    <!-- <option value=\"*\" selected>*</option> -->\n                                                                    <option *ngFor=\"let hour of hours; let i=index;\"\n                                                                        value=\"{{hour}}\">{{hour}}</option>\n                                                                </select>\n                                                                <label for=\"minute\">:</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && u.weeklyMinutes.errors }\"\n                                                                    id=\"weeklyMinutes\" formControlName=\"weeklyMinutes\">\n                                                                    <!-- <option value=\"*\" selected>*</option> -->\n                                                                    <option *ngFor=\"let minute of minutes; let i=index;\"\n                                                                        value=\"{{minute}}\">{{minute}}</option>\n                                                                </select>\n                                                                <div *ngIf=\"submitted && (u.weeklyHours.errors || u.weeklyMinutes.errors)\"\n                                                                    class=\"invalid-feedback\">\n                                                                    <div\n                                                                        *ngIf=\"u.weeklyHours.errors || u.weeklyMinutes.errors\">\n                                                                        Please select a valid hour and minute</div>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-right\">\n                                                                <small class=\"text-danger\">\"*\" Denotes all the\n                                                                    value(s)</small>\n                                                            </div>\n                                                        </form>\n                                                    </div>\n                                                    <div class=\"tab-pane fade\" id=\"pills-monthly-create\" role=\"tabpanel\"\n                                                        aria-labelledby=\"pills-monthly-create-tab\">\n                                                        <form [formGroup]=\"monthlyScheduleForm\">\n                                                            <div class=\"form-inline mb-3\">\n                                                                <input class=\"form-check-input\" type=\"radio\"\n                                                                    name=\"monthlyOption\" id=\"monthlyOption1\"\n                                                                    value=\"monthlyOption1\"\n                                                                    (change)=\"changeMonthlyRadio($event)\" checked>\n                                                                <label for=\"minute\">Day</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    id=\"monthlyDays\" [attr.disabled]=\"monthlyRadio != 'monthlyOption1' ? true : null\" formControlName=\"monthlyDays\">\n                                                                    <!-- <option value=\"*\" selected>* -->\n                                                                    <!-- </option> -->\n                                                                    <option *ngFor=\"let day of days; let i=index;\"\n                                                                        value=\"{{day}}\">{{day}}</option>\n                                                                </select>\n                                                                <label for=\"minute\">of every</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    id=\"months\" [attr.disabled]=\"monthlyRadio != 'monthlyOption1' ? true : null\" formControlName=\"months\">\n                                                                    <!-- <option value=\"*\" selected>* -->\n                                                                    <!-- </option> -->\n                                                                    <option *ngFor=\"let month of months; let i=index;\"\n                                                                        value=\"*/{{month}}\">{{month}}</option>\n                                                                </select>\n                                                                <div id=\"minute\" class=\"text-muted\">\n                                                                    Month(s)\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"form-inline mb-3\">\n                                                                <input class=\"form-check-input\" type=\"radio\"\n                                                                    name=\"monthlyOption\" id=\"monthlyOption2\"\n                                                                    value=\"monthlyOption2\"\n                                                                    (change)=\"changeMonthlyRadio($event)\">\n                                                                <label for=\"minute\">The</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    id=\"weeks\" [attr.disabled]=\"monthlyRadio != 'monthlyOption2' ? true : null\" formControlName=\"weeks\">\n                                                                    <option value=\"1\" selected>First</option>\n                                                                    <option value=\"2\">Second</option>\n                                                                    <option value=\"3\">Third</option>\n                                                                    <option value=\"4\">Fourth</option>\n                                                                    <option value=\"5\">Fifth</option>\n                                                                </select>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    id=\"monthlyDayofWeek\" [attr.disabled]=\"monthlyRadio != 'monthlyOption2' ? true : null\"\n                                                                    formControlName=\"monthlyDayofWeek\">\n                                                                    <option value=\"1\" selected>Sunday</option>\n                                                                    <option value=\"2\">Monday</option>\n                                                                    <option value=\"3\">Tuesday</option>\n                                                                    <option value=\"4\">Wednesday</option>\n                                                                    <option value=\"5\">Thursday</option>\n                                                                    <option value=\"6\">Friday</option>\n                                                                    <option value=\"7\">Saturday</option>\n                                                                </select>\n                                                                <label for=\"minute\">of every</label>\n\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    id=\"monthssecond\" [attr.disabled]=\"monthlyRadio != 'monthlyOption2' ? true : null\" formControlName=\"monthssecond\">\n                                                                    <!-- <option value=\"*\" selected>* -->\n                                                                    <!-- </option> -->\n                                                                    <option *ngFor=\"let month of months; let i=index;\"\n                                                                        value=\"*/{{month}}\">{{month}}</option>\n                                                                </select>\n                                                                <div id=\"minute\" class=\"text-muted\">\n                                                                    Month(s)\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"form-inline\">\n                                                                <label for=\"minute\">Starts at :</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && m.monthlyHours.errors }\"\n                                                                    id=\"monthlyHours\" formControlName=\"monthlyHours\">\n                                                                    <!-- <option value=\"*\" selected>*</option> -->\n                                                                    <option *ngFor=\"let hour of hours; let i=index;\"\n                                                                        value=\"{{hour}}\">{{hour}}</option>\n                                                                </select>\n                                                                <label for=\"minute\">:</label>\n                                                                <select class=\"custom-select inlineSelect mx-2\"\n                                                                    [ngClass]=\"{ 'is-invalid': submitted && m.monthlyMinutes.errors }\"\n                                                                    id=\"monthlyMinutes\"\n                                                                    formControlName=\"monthlyMinutes\">\n                                                                    <!-- <option value=\"*\" selected>*</option> -->\n                                                                    <option *ngFor=\"let minute of minutes; let i=index;\"\n                                                                        value=\"{{minute}}\">{{minute}}</option>\n                                                                </select>\n                                                                <div *ngIf=\"submitted && (m.monthlyHours.errors || m.monthlyMinutes.errors)\"\n                                                                    class=\"invalid-feedback\">\n                                                                    <div\n                                                                        *ngIf=\"m.monthlyHours.errors || m.monthlyMinutes.errors\">\n                                                                        Please select a valid hour and minute</div>\n                                                                </div>\n                                                            </div>\n                                                            <div class=\"text-right\">\n                                                                <small class=\"text-danger\">\"*\" Denotes all the\n                                                                    value(s)</small>\n                                                            </div>\n                                                        </form>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card\">\n                    <div class=\"card-header p-0\" id=\"headingThree\">\n\n                        <button class=\"btn btn-link collapsed d-flex\" data-toggle=\"collapse\"\n                            [ngClass]=\"{'collapsed' : selectedBotsConfigData.length==0}\" data-target=\"#collapseThree\"\n                            aria-expanded=\"false\" aria-controls=\"collapseThree\"\n                            [attr.disabled]=\"selectedBotsConfigData.length==0 ? true : null\">\n                            <div class=\"create-icon\"><img src=\"./assets/images/review-summary.png\" alt=\"\"></div>\n                            <div class=\"header-name\">Review Summary</div>\n                        </button>\n\n                    </div>\n                    <div id=\"collapseThree\" class=\"collapse\" aria-labelledby=\"headingThree\">\n                        <div class=\"card-body p-0\">\n                            <div class=\"row\">\n                                <div class=\"col-md-4 pr-0\">\n                                    <div class=\"list-group selected-bots-display\">\n                                        <div class=\"title d-flex\">Selected Bots\n                                            <div class=\"d-flex ml-auto\">\n                                                <div class=\"icons d-flex\">\n                                                    <!-- <i class=\"fa fa-search mr-3\" aria-hidden=\"true\"></i> -->\n                                                    <!-- <i class=\"fa fa-compress mr-3\" aria-hidden=\"true\"></i>\n                                                    <i class=\"fa fa-arrows-alt \" aria-hidden=\"true\"></i> -->\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"list-group list-bots\">\n                                            <ng-container *ngFor=\"let bots of summaryCatalogue;\">\n                                                <a class=\"list-group-item d-flex\">\n                                                    <img class=\"bot-imogi mr-1\" src=\"./assets/images/bot-imogi.png\"\n                                                        alt=\"\" width=\"16px\" height=\"16px\">\n                                                    <div class=\"cut-text failed-text\">{{bots.botName}}</div>\n                                                </a>\n                                            </ng-container>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-8 bot-summary-details pl-0\">\n                                    <div class=\"created-bot-details\">\n                                        <div class=\"row\">\n                                            <div class=\"col\">\n                                                <div class=\"heading-section\">\n                                                    <div class=\"header\">Order Details</div>\n                                                </div>\n                                                <div class=\"px-3 pt-3\">\n                                                    <table class=\"m-0 w-100\">\n                                                        <tbody>\n                                                            <tr>\n                                                                <td>\n                                                                    <div *ngIf=\"scheduleChecked\" class=\"field-name\">\n                                                                        Schedule ID</div>\n                                                                    <div *ngIf=\"!scheduleChecked\" class=\"field-name\">\n                                                                        Order ID</div>\n                                                                    <div class=\"field-value\">\n                                                                        {{createdOrderId == '' ? '####' :createdOrderId}}\n                                                                    </div>\n                                                                </td>\n                                                                <td>\n                                                                    <div class=\"field-name\">Order Created By</div>\n                                                                    <div class=\"field-value\">{{user.name}}</div>\n                                                                </td>\n                                                                <td>\n                                                                    <div class=\"field-name\">Order Type</div>\n                                                                    <div class=\"field-value\">\n                                                                        {{orderDetailForm.value.orderType == '' ? '-' : orderDetailForm.value.orderType}}\n                                                                    </div>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <!-- <td>\n                                                                    <div class=\"field-name\">Service Type</div>\n                                                                    <div class=\"field-value\">\n                                                                        {{orderDetailForm.value.serviceType == '' ? '-' : orderDetailForm.value.serviceType  }}\n                                                                    </div>\n                                                                </td> -->\n                                                                <!-- <td>\n                                                                    <div class=\"field-name\">Config Type</div>\n                                                                    <div class=\"field-value\">\n                                                                        {{orderDetailForm.value.configType == '' ? '-' : orderDetailForm.value.configType}}\n                                                                    </div>\n                                                                </td> -->\n                                                                <!-- <td *ngIf=\"scheduleChecked\">\n                                                                    <div class=\"field-name\">Scheduled detail</div>\n                                                                    <div class=\"field-value\">RPC</div>\n                                                                </td> -->\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n        <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata\" style=\"position: absolute;bottom:113px;width:100%\">\n        </app-alert>\n        <div class=\"modal-footer\">\n            <div class=\"text-right p-2\"><button type=\"submit\" class=\"btn btn-sm btn-create-cancel mr-2\"\n                    (click)=\"resetOrderCreate(null)\">CANCEL</button></div>\n            <div class=\"text-right p-2\"><button type=\"submit\" class=\"btn btn-sm btn-create-submit\"\n                    (click)=\"submitOrderCreate()\"\n                    [attr.disabled]=\"selectedBotsConfigData.length == 0?true:null\">SUBMIT</button></div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginService } from '../../../service/login.service';\nimport { AutomationFactoryService } from '../../../service/automation-factory.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\nimport { Subscription, timer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { environment } from './../../../../environments/environment';\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.scss'],\n  providers: [AutomationFactoryService]\n})\nexport class OrderListComponent implements OnInit {\n  @Input() orderList: any;\n  public serviceUrlRogers = environment.serviceUrlRogers;\n  public livelogStart = environment.livelogStart;\n  public livelogMid = environment.livelogMid;\n  public livelogEnd = environment.livelogEnd;\n  pageOfItems: Array<any>;\n  pageSize: any;\n  selectedBot: any;\n  public logorderId: any;\n  play = true;\n  pause = false;\n  public orders: any;\n  public suits: any;\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private automationFactoryService: AutomationFactoryService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n    // this.selectedBot = {\n    //   botName : '-1'\n    // };\n   }\n\n  ngOnInit(): void {\n  }\n  ngOnChanges(): void {\n    this.pageSize = 15;\n    // this.selectedBot = {\n    //   botName : '-1'\n    // };\n    // console.log('orders change', this.orderList);\n  }\n\n  onChangePage(pageOfItems: Array<any>) {\n    this.pageOfItems = pageOfItems;\n  }\n\n  getBotDetails(bot) {\n    this.selectedBot = bot;\n  }\n\n  refreshBotLog(status){\n    let link = \"\";\n    if (status === 'play'){\n      this.play = false;\n      this.pause = true;\n      link = this.livelogStart + 'refreshInterval:(pause:!f,value:3000),' + this.livelogMid + \"query:(language:kuery,query:'order_id:\" + this.logorderId + \"'),\" + this.livelogEnd;\n    } else if (status === 'pause'){\n      this.play = true;\n      this.pause = false;\n      link = this.livelogStart + 'refreshInterval:(pause:!t,value:0),' + this.livelogMid + \"query:(language:kuery,query:'order_id:\" + this.logorderId + \"'),\" + this.livelogEnd;\n    }\n    (<HTMLIFrameElement>document.getElementById('botreport')).src = link;\n  }\n\n  botlogs(selectedOrder) {\n    this.logorderId = selectedOrder.orderId;\n    let link = \"\";\n    if (selectedOrder.orderStatus === 'completed' || selectedOrder.orderStatus === 'Completed') {\n      this.play = true;\n      this.pause = false;\n      link = this.livelogStart + 'refreshInterval:(pause:!t,value:0),' + this.livelogMid + \"query:(language:kuery,query:'order_id:\" + this.logorderId + \"'),\" + this.livelogEnd;\n    } else {\n      this.pause = true;\n      this.play = false;\n      link = this.livelogStart + 'refreshInterval:(pause:!f,value:3000),' + this.livelogMid + \"query:(language:kuery,query:'order_id:\" + this.logorderId + \"'),\" + this.livelogEnd;\n    }\n    (<HTMLIFrameElement>document.getElementById('botreport')).src = link;\n  }\n\n  automationlogs(orderId) {\n    let link = this.serviceUrlRogers + \"/order/viewReport/report.html?id=\"+ orderId;\n    (<HTMLIFrameElement>document.getElementById('viewreport')).src = link;\n  }\n\n  botlogClosed() {\n    let link = this.livelogStart + 'refreshInterval:(pause:!t,value:0),' + this.livelogMid + \"query:(language:kuery,query:'order_id:\" + this.logorderId + \"'),\" + this.livelogEnd;\n    (<HTMLIFrameElement>document.getElementById('botreport')).src = link;\n  }\n\n  public ascOrderIdSort = true;\n   public ascOrderTypeSort = true;\n   public ascScheduleNameSort = true;\n   public ascBotCount = true;\n   public ascCreatedBy = true;\n   public ascCreatedDate = true;\n\n   sort(sortValue){\n\n    if(sortValue==='orderId') {\n      this.ascScheduleNameSort = true;\n      this.ascOrderTypeSort = true;\n      this.ascBotCount = true;\n      this.ascCreatedBy = true;\n      this.ascCreatedDate = true;\n      this.pageOfItems.sort((a, b) => b.orderId - a.orderId); // For descending sort\n      if(this.ascOrderIdSort){\n      this.ascOrderIdSort = false;\n      this.pageOfItems.sort((a, b) => b.orderId - a.orderId); // For descending sort\n      console.log(this.pageOfItems);\n      }\n      else{\n      this.ascOrderIdSort = true;\n      this.pageOfItems.sort((a, b) => a.orderId - b.orderId); // For ascending sort\n      console.log(this.pageOfItems);\n          }\n\n\n    } else if(sortValue==='orderType'){\n      this.ascOrderIdSort = true;\n      this.ascScheduleNameSort = true;\n      this.ascBotCount = true;\n      this.ascCreatedBy = true;\n      this.ascCreatedDate = true;\n      this.pageOfItems.sort((a, b) => b.orderId - a.orderId); // For descending sort\n\n      if(this.ascOrderTypeSort){\n        this.ascOrderTypeSort = false;\n        this.pageOfItems.sort((a, b) => b.orderType > a.orderType ? -1:1); // For descending sort\n        console.log(this.pageOfItems);\n        }\n        else{\n        this.ascOrderTypeSort = true;\n        this.pageOfItems.sort((a, b) => a.orderType > b.orderType ? -1:1); // For ascending sort\n        console.log(this.pageOfItems);\n  }\n\n    }else if(sortValue==='total')\n    {\n      this.ascOrderIdSort = true;\n      this.ascOrderTypeSort = true;\n      this.ascScheduleNameSort = true;\n      this.ascCreatedBy = true;\n      this.ascCreatedDate = true;\n      this.pageOfItems.sort((a, b) => b.orderId - a.orderId); // For descending sort\n      if(this.ascBotCount){\n        this.ascBotCount = false;\n        this.pageOfItems.sort((a, b) => b.total - a.total); // For descending sort\n        console.log(this.pageOfItems);\n        }\n        else{\n        this.ascBotCount = true;\n        this.pageOfItems.sort((a, b) => a.total - b.total); // For ascending sort\n        console.log(this.pageOfItems);\n  }\n\n    }\n    else if(sortValue==='orderCreatedBy')\n    {\n      this.ascOrderIdSort = true;\n      this.ascScheduleNameSort = true;\n      this.ascOrderTypeSort = true;\n      this.ascBotCount = true;\n      this.ascCreatedDate = true;\n      this.pageOfItems.sort((a, b) => b.orderId - a.orderId); // For descending sort\n      if(this.ascCreatedBy){\n        this.ascCreatedBy = false;\n        this.pageOfItems.sort((a, b) => b.orderCreatedBy > a.orderCreatedBy? -1:1); // For descending sort\n        console.log(this.pageOfItems);\n        }\n        else{\n        this.ascCreatedBy = true;\n        this.pageOfItems.sort((a, b) => a.orderCreatedBy > b.orderCreatedBy ? -1:1); // For ascending sort\n        console.log(this.pageOfItems);\n  }\n\n    }\n    else if(sortValue==='schedulerName')\n    {\n      this.ascOrderIdSort = true;\n      this.ascOrderTypeSort = true;\n      this.ascBotCount = true;\n      this.ascCreatedBy = true;\n      this.ascCreatedDate = true;\n      this.pageOfItems.sort((a, b) => b.orderId - a.orderId); // For descending sort\n      if(this.ascScheduleNameSort){\n        this.ascScheduleNameSort = false;\n        this.pageOfItems.sort((a, b) => b.schedulerName > a.schedulerName ? -1:1); // For descending sort\n        }\n        else{\n        this.ascScheduleNameSort = true;\n        this.pageOfItems.sort((a, b) => a.schedulerName > b.schedulerName ? -1:1); // For ascending sort\n        console.log(this.pageOfItems);\n  }\n\n    }\n\n    else{\n\n      this.ascOrderIdSort = true;\n      this.ascScheduleNameSort = true;\n      this.ascOrderTypeSort = true;\n      this.ascBotCount = true;\n      this.ascCreatedBy = true;\n      this.pageOfItems.sort((a, b) => b.orderId - a.orderId); // For descending sort\n\n  if(this.ascCreatedDate){\n    // For descending sort\n    this.ascCreatedDate = false;\n    this.pageOfItems.sort((val1, val2) => {\n      return new Date(val2.orderCreatedDate).valueOf() - new Date(val1.orderCreatedDate).valueOf();\n    });\n    console.log(this.pageOfItems);\n    }\n    else{\n      // For ascending sort\n\n    this.ascCreatedDate = true;\n    this.pageOfItems.sort((val1, val2) => {\n      return new Date(val1.orderCreatedDate).valueOf() - new Date(val2.orderCreatedDate).valueOf();\n    });\n\n\n    console.log(this.pageOfItems);\n}\n\n    }\n\n\n\n  }\n}\n","<div class=\"order-list-collapse-menu d-flex\">\n    <div (click)='sort(\"orderId\")' class=\"title d-flex\" id=\"orderId\">\n        Order ID\n\n        <i class=\"fa fa-chevron-up trg-toggle orderId_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n        <i class=\"fa fa-chevron-down trg-toggle orderId_down\" id=\"decending\" aria-hidden=\"true\"></i>\n\n    </div>\n    <div (click)='sort(\"orderType\")' class=\"title d-flex\" id=\"orderType\">\n        Order Type\n\n        <i class=\"fa fa-chevron-up trg-toggle chevron_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n        <i class=\"fa fa-chevron-down trg-toggle chevron_down\" id=\"decending\" aria-hidden=\"true\"></i>\n\n    </div>\n    <div (click)='sort(\"schedulerName\")' class=\"title d-flex\" id=\"schedulerName\">\n        Schedule Name\n\n        <i class=\"fa fa-chevron-up trg-toggle chevron_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n        <i class=\"fa fa-chevron-down trg-toggle chevron_down\" id=\"decending\" aria-hidden=\"true\"></i>\n    </div>\n    <div (click)='sort(\"total\")' class=\"title d-flex\" id=\"total_count\">\n        Bot Count\n\n        <i class=\"fa fa-chevron-up trg-toggle chevron_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n        <i class=\"fa fa-chevron-down trg-toggle chevron_down\" id=\"decending\" aria-hidden=\"true\"></i>\n\n    </div>\n    <div (click)='sort(\"orderCreatedBy\")' class=\"title d-flex\" id=\"orderCreatedBy\">\n        Created By\n\n        <i class=\"fa fa-chevron-up trg-toggle chevron_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n        <i class=\"fa fa-chevron-down trg-toggle chevron_down\" id=\"decending\" aria-hidden=\"true\"></i>\n\n    </div>\n    <div (click)='sort(\"orderDate\")' class=\"title d-flex\" id=\"orderDate\">\n        Created Date\n\n        <i class=\"fa fa-chevron-up trg-toggle chevron_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n        <i class=\"fa fa-chevron-down trg-toggle chevron_down\" id=\"decending\" aria-hidden=\"true\"></i>\n\n    </div>\n    <div>\n        Progress\n    </div>\n    <div>\n        Status\n    </div>\n</div>\n<div id=\"accordion\">\n    <div class=\"card\" *ngFor=\"let order of pageOfItems; let i = index\">\n        <div class=\"card-header\" id=\"order_{{i}}\">\n            <h5 class=\"mb-0\">\n                <button (click)=\"selectedBot=null;\" class=\"btn btn-link d-flex\" data-toggle=\"collapse\"\n                    [attr.data-target]=\"'#collapse_' + i\" aria-expanded=\"false\" [attr.aria-controls]=\"'#collapse_' + i\">\n                    <div>\n                        {{order.orderId}}\n                    </div>\n                    <div>\n                        {{order.orderType}}\n                    </div>\n                    <div *ngIf=\"order.schedulerName\">\n                        {{order.schedulerName}}\n                    </div>\n                    <div *ngIf=\"!order.schedulerName\">\n                        -\n                    </div>\n                    <div *ngIf=\"order.total\">\n                        {{order.total}}\n                    </div>\n                    <div *ngIf=\"!order.total\">\n                        -\n                    </div>\n                    <div>\n                        {{order.orderCreatedBy}}\n                    </div>\n                    <div>\n                        <!-- | date:\"dd/MM/yyyy HH:mm\" -->\n                        {{order.orderCreatedDate | date:\"dd/MM/yyyy HH:mm\"}}\n                    </div>\n                    <div>\n                        <div class=\"progress\">\n                            <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\"\n                                [ngStyle]=\"{'width':((order.pass/order.total)*100)+'%'}\" aria-valuenow=\"100\"\n                                aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            <div class=\"progress-bar progress-bar-striped bg-warning\" role=\"progressbar\"\n                                [ngStyle]=\"{'width':(((order.total-(order.pass+order.fail))/order.total)*100)+'%'}\" aria-valuenow=\"25\"\n                                aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            <div class=\"progress-bar progress-bar-striped bg-danger\" role=\"progressbar\"\n                                [ngStyle]=\"{'width':((order.fail/order.total)*100)+'%'}\" aria-valuenow=\"100\"\n                                aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            <!-- <div *ngIf=\"order.orderStatus == 'completed' || order.orderStatus == 'Completed'\"\n                                class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\"\n                                style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            <div *ngIf=\"order.orderStatus == 'Failed'\"\n                                class=\"progress-bar progress-bar-striped bg-danger\" role=\"progressbar\"\n                                style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            <div *ngIf=\"order.orderStatus == 'Accepted'\"\n                                class=\"progress-bar progress-bar-striped bg-warning\" role=\"progressbar\"\n                                style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> -->\n                        </div>\n                    </div>\n                    <div>\n                        {{order.orderStatus}}\n                    </div>\n\n                </button>\n            </h5>\n        </div>\n\n        <div id=\"collapse_{{i}}\" class=\"collapse\" [attr.aria-labelledby]=\"'order_' + i\" data-parent=\"#accordion\">\n            <div class=\"card-body\">\n                <table class=\"m-0\">\n                    <tbody>\n                        <tr>\n                            <td>\n                                <div class=\"field-name\">Order ID</div>\n                                <div class=\"field-value\">{{order.orderId}}</div>\n                            </td>\n                            <td *ngIf=\"order.schedulerId!==0\">\n                                <div class=\"field-name\">Schedule ID</div>\n                                <div class=\"field-value\">{{order.schedulerId}}</div>\n                            </td>\n                            <td *ngIf=\"order.schedulerName\">\n                                <div class=\"field-name\">Schedule Name</div>\n                                <div class=\"field-value\">{{order.schedulerName}}</div>\n                            </td>\n                            <!-- <td>\n                                <div class=\"field-name\">Order CreatedBy</div>\n                                <div class=\"field-value\">{{order.orderCreatedBy}}</div>\n                            </td> -->\n                            <!-- <td>\n                                <div class=\"field-name\">Service Type</div>\n                                <div *ngIf=\"order.serviceType\" class=\"field-value\">{{order.serviceType}}</div>\n                                <div *ngIf=\"!order.serviceType\" class=\"field-value\">-</div>\n                            </td> -->\n                            <!-- <td>\n                                <div class=\"field-name\">Config Type</div>\n                                <div *ngIf=\"order.confType\" class=\"field-value\">{{order.confType}}</div>\n                                <div *ngIf=\"!order.confType\" class=\"field-value\">-</div>\n                            </td> -->\n                            <!-- <td>\n                                <div class=\"field-name\">Bot Count</div>\n                                <div *ngIf=\"order.total\" class=\"field-value\">{{order.total}}</div>\n                                <div *ngIf=\"!order.total\" class=\"field-value\">-</div>\n                            </td> -->\n                            <td *ngIf=\"order.orderStatus == 'completed' || order.orderStatus == 'Completed'\">\n                                <img src=\"./assets/images/report.png\" alt=\"\" width=\"30px\" height=\"30px\" (click)=\"automationlogs(order.orderId)\"\n                                    data-toggle=\"modal\" data-target=\"#order-report\">\n                            </td>\n                            <td>\n                                <img src=\"./assets/images/logs.png\" alt=\"\" width=\"30px\" height=\"30px\" (click)=\"botlogs(order)\"\n                                    data-toggle=\"modal\" data-target=\"#order-logs\">\n                            </td>\n                            <td *ngIf=\"order.orderStatus == 'completed' || order.orderStatus == 'Completed'\">\n                                <a href='{{serviceUrlRogers}}/order/zip-download?id={{order.orderId}}'>\n                                <img src=\"./assets/images/downloadLog.png\" alt=\"\" width=\"30px\" height=\"30px\"></a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div *ngIf=\"order.suiteDetails.length>0\" class=\"row\">\n                    <div class=\"col-md-3 pr-0\">\n                        <div class=\"list-group bots-display\">\n                            <div class=\"title d-flex\">Catalogue\n                                <div class=\"d-flex ml-auto\">\n                                    <div class=\"filter-status-bots d-flex\">\n                                        <div class=\"btn filter-indicator-xs failed\"></div>\n                                        <div class=\"btn filter-indicator-xs completed\"></div>\n                                        <div class=\"btn filter-indicator-xs in-progress\"></div>\n                                        <div class=\"btn filter-indicator-xs total-bots\"></div>\n                                    </div>\n                                    <div class=\"icons d-flex\">\n                                        <!-- <i class=\"fa fa-search mr-3\" aria-hidden=\"true\"></i> -->\n                                        <i class=\"fa fa-compress mr-3 closeAll\" aria-hidden=\"true\" data-toggle=\"tooltip\" title=\"Close All\"></i>\n                                        <i class=\"fa fa-arrows-alt openAll\"  id=\"expandSuit\" aria-hidden=\"true\" data-toggle=\"tooltip\" title=\"Expand All\"></i>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div class=\"bot-section\">\n                                <ng-container *ngFor=\"let suite of order.suiteDetails; let idx = index\">\n                                    <a href='#Suit-{{idx}}' class=\"list-group-item collapse expandSuit\" data-toggle=\"collapse\"\n                                        aria-expanded=\"true\">\n                                        <i class=\"fa fa-caret-down mr-1\" aria-hidden=\"true\"></i><i\n                                            class=\"fa fa-caret-up mr-1\" aria-hidden=\"true\"></i>\n                                        <i class=\"fa fa-file-archive-o mr-1\" aria-hidden=\"true\"></i>{{suite.suiteName}}\n                                    </a>\n                                    <div class=\"list-group list-bots ml-3 collapse expandBot show\" id=\"Suit-{{idx}}\">\n\n                                        <!-- <a class=\"list-group-item d-flex\">\n                                            <div class=\"btn filter-indicator-xs bot-indicator completed\"></div>\n                                            <div class=\"cut-text failed-text\">00A Prodapt NW Device health\n                                                Condition\n                                                check</div>\n                                        </a> -->\n                                        <a *ngFor=\"let bot of suite.botDetails; let idx = index\"\n                                            class=\"list-group-item d-flex\">\n                                            <div *ngIf=\"bot.status=='FAIL'\"\n                                                class=\"btn filter-indicator-xs bot-indicator failed\"></div>\n                                            <div *ngIf=\"bot.status=='PASS'\"\n                                                class=\"btn filter-indicator-xs bot-indicator completed\"></div>\n                                            <div *ngIf=\"bot.status!='PASS' && bot.status!='FAIL'\"\n                                                class=\"btn filter-indicator-xs bot-indicator in-progress\"></div>\n                                            <!-- <div *ngIf=\"bot.status!='PASS' && bot.status!='FAIL' && bot.status!='Inprogress'\"\n                                                class=\"btn filter-indicator-xs bot-indicator yettostart\"></div> -->\n                                            <div class=\"cut-text\" (click)=\"getBotDetails(bot)\" [ngClass]=\" { 'active' : selectedBot && selectedBot.botName==bot.botName}\">{{bot.botName}}</div>\n                                        </a>\n                                    </div>\n                                </ng-container>\n\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"col-md-9 pl-0\">\n                        <div class=\"slected-bot-details\">\n                            <div class=\"row\">\n                                <div *ngIf=\"selectedBot\" class=\"col\">\n                                    <div class=\"bot-name\"><img src=\"./assets/images/bot-imogi-lg.png\" class=\"mr-2\"\n                                            alt=\"\" width=\"22px\" height=\"22px\">Bot\n                                        name: <span class=\"pl-1\">{{selectedBot.botName}}</span></div>\n                                    <table class=\"m-0\">\n                                        <tbody>\n                                            <tr>\n                                                <td>\n                                                    <div class=\"field-name\">Status</div>\n                                                    <!-- <div class=\"field-value faied-text\">{{selectedBot.status}}</div> -->\n                                                    <div *ngIf=\"selectedBot.status=='FAIL'\"\n                                                        class=\"field-value failedText font-weight-bold\">Failed</div>\n                                                    <div *ngIf=\"selectedBot.status=='PASS'\"\n                                                        class=\"field-value completedText font-weight-bold\">Passed</div>\n                                                    <div *ngIf=\"selectedBot.status=='Inprogress' || selectedBot.status==null\"\n                                                        class=\"field-value inprogressText font-weight-bold\">In Progress\n                                                    </div>\n                                                    <!-- <div *ngIf=\"selectedBot.status==null\"\n                                                        class=\"field-value yettostartText font-weight-bold\">Yet to start\n                                                    </div> -->\n                                                </td>\n                                                <td>\n                                                    <div class=\"field-name\">Criticality</div>\n                                                    <div *ngIf=\"selectedBot.critical\" class=\"field-value\">Critical</div>\n                                                    <div *ngIf=\"!selectedBot.critical\" class=\"field-value\">Not Critical\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <div class=\"field-name\">Start Time</div>\n                                                    <div class=\"field-value\">\n                                                        {{selectedBot.startTime | date:\"dd/MM/yyyy HH:mm:ss a\"}}</div>\n                                                </td>\n                                                <td>\n                                                    <div class=\"field-name\">End Time</div>\n                                                    <div class=\"field-value\">\n                                                        {{selectedBot.endTime | date:\"dd/MM/yyyy HH:mm:ss a\"}}</div>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td>\n                                                    <div class=\"field-name\">Elapsed</div>\n                                                    <div class=\"field-value\">{{selectedBot.elapsed}}</div>\n                                                </td>\n                                                <td>\n                                                    <div class=\"field-name\">Message</div>\n                                                    <div *ngIf=\"selectedBot.message && selectedBot.message!='NULL'\"\n                                                        class=\"field-value message-content\">{{selectedBot.message}}</div>\n                                                    <div *ngIf=\"!selectedBot.message || selectedBot.message=='NULL'\"\n                                                        class=\"field-value\">N/A</div>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-footer pb-0 pt-3\">\n        <jw-pagination [items]=\"orderList\" (changePage)=\"onChangePage($event)\" [pageSize]=\"pageSize\"></jw-pagination>\n    </div>\n</div>\n\n<!--log modals-->\n<!-- Modal-report -->\n<div class=\"modal fade\" id=\"order-report\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"order-report\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <i class=\"fa fa-file mr-3\" aria-hidden=\"true\"></i>\n                <h6 class=\"modal-title\" id=\"order-report-title\">REPORT</h6>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body p-0\">\n                <iframe id=\"viewreport\" height=\"625px\" width=\"100%\" title=\"\"></iframe>\n            </div>\n        </div>\n    </div>\n</div>\n<!--Modal-Logs-->\n<div class=\"modal fade\" id=\"order-logs\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"order-logs\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <i class=\"fa fa-file mr-3\" aria-hidden=\"true\"></i>\n                <h6 class=\"modal-title\" id=\"order-report-title\">LOGS</h6>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"botlogClosed()\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body p-0\">\n                <div class=\"control-Icons text-right\">\n                  <i *ngIf=\"play\" class=\"fa fa-play-circle-o\" aria-hidden=\"true\" (click)=\"refreshBotLog('play')\"></i>\n                  <i *ngIf=\"pause\" class=\"fa fa-pause-circle-o ml-3\" aria-hidden=\"true\" (click)=\"refreshBotLog('pause')\"></i>\n                </div>\n                <iframe id=\"botreport\" height=\"625px\" width=\"100%\" title=\"\"></iframe>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { __importDefault } from 'tslib';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AutomationFactoryService } from 'src/app/service/automation-factory.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-scheduled-job-edit',\n  templateUrl: './scheduled-job-edit.component.html',\n  styleUrls: ['./scheduled-job-edit.component.scss']\n})\nexport class ScheduledJobEditComponent implements OnInit {\n  @Input() schedularDetails:any;\n  @Input() index: number;\n  @Input() activeId:any;\n  public scheduleFormEdit: any;\n  public active:any;\n  public jobAlreadyExitsEdit = false;\n  public minutes_minsEdit:any = [];\n  public minuteScheduleFormEdit:any;\n  public hoursScheduleFormEdit:any;\n  public hourlyRadioEdit:any;\n  public ShowFilterEdit= false\n  public hours_hrsEdit:any = [];\n  public hoursEdit: any = [];\n  public hoursEndRangeEdit:any =[];\n  public dailyScheduleFormEdit:any;\n  public dailyRadioEdit:any;\n  public daysEndRangeEdit:any;\n\n  hoursMultiSelectSettingsEdit: any = {\n    singleSelection: false,\n    idField: '',\n    textField: '',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 2,\n    limitSelection: 24,\n    allowSearchFilter: this.ShowFilterEdit\n  };\n  daysMultiSelectSettingsEdit: any = {\n    singleSelection: false,\n    idField: '',\n    textField: '',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 2,\n    limitSelection: 24,\n    allowSearchFilter: this.ShowFilterEdit\n  };\n\n  public submitted = false;\n  public alertdata = false;\n  public alertMessage:any;\n  public hoursMultiSelectEdit:any=[];\n  public hoursFromEdit:any= \"*\";\n  public hoursToEdit:any =\"*\";\n  public everyHoursEdit = \"*\";\n  public daysEdit=[];\n  public minutesEdit:any =[];\n  public weeklyScheduleFormEdit: any;\n  public daysOfWeekEdit:any =[];\n  public everyMinuteEdit:any = \"*\";\n  public daysMultiSelectEdit:any = [];\n  public daysFromEdit:any=\"*\";\n  public daysToEdit:any =\"*\";\n  public daysOfWeekArray:any =[];\n  public monthlyScheduleFormEdit:any;\n  public monthlyRadioEdit:any;\n  public monthsEdit =[];\n  public monthssecondEdit:any;\n  public monthlyDayofWeekEdit:any;\n  public weeksEdit:any;\n  public monthlyDaysEdit:any;\n  public monthsFormEdit:any;\n  public jobAlreadyExits:any;\n  public dailyMinutesEdit:any;\n  public dailyHoursEdit:any;\n  public weeklyHoursEdit:any = '*';\n  public weeklyMinutesEdit:any= '*';\n  public monthlyMinutesEdit:any=\"*\";\n  public monthlyHoursEdit:any=\"*\";\n  public user:any;\n  public roles:any;\n  \n  constructor(\n    private automationService: AutomationFactoryService,\n    private router: Router\n    ) { \n    for (let i = 0; i < 60; i++) {\n      this.minutes_minsEdit.push(i);\n    }\n    for (let i = 1; i < 24; i++) {\n      this.hours_hrsEdit.push(i);\n    }\n    for (let i = 0; i < 24; i++) {\n      this.hoursEdit.push(i);\n    }\n    for (let i = 1; i <= 31; i++) {\n      this.daysEdit.push(i);\n    }\n    for (let i = 0; i < 60; i++) {\n      this.minutesEdit.push(i);\n    }\n    for (let i = 1; i <= 12; i++) {\n      this.monthsEdit.push(i);\n    }\n  }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    this.jobAlreadyExitsEdit = false;\n    this.active =this.schedularDetails.schedulerId;\n    this.daysMultiSelectEdit = [];\n  }\n  ngOnChanges():void{\n    // console.log(this.schedularDetails);\n  /***********SCHEDULAR FORMS***************/  \n    this.scheduleFormEdit = new FormGroup({\n      'jobNameEdit': new FormControl(this.schedularDetails.jobname, Validators.required),\n    });\n  /**************HOURS FORMS**************/\n  if(this.schedularDetails.hour != \"*\" && this.schedularDetails.minute == \"0\" && this.schedularDetails.day == \"*\" && this.schedularDetails.day_of_week == \"?\" && this.schedularDetails.month == \"*\"){\n    let hours = this.schedularDetails.hour;\n    if(hours.includes(',')){\n      this.hoursMultiSelectEdit = JSON.parse(\"[\" + hours + \"]\");\n      (<HTMLInputElement>document.getElementById('hourlyOption1Edit')).checked = false;\n      (<HTMLInputElement>document.getElementById('hourlyOption2Edit')).checked = true;\n      (<HTMLInputElement>document.getElementById('hourlyOption3Edit')).checked = false;\n      this.hourlyRadioEdit = 'hourlyOption2Edit';  \n    }else if(hours.includes('-')){\n      var array = hours.split(\"-\"); \n      this.hoursFromEdit = array[0];\n      this.hoursToEdit = array[1];\n      this.getHoursEndRangeEdit(this.hoursFromEdit);\n      (<HTMLInputElement>document.getElementById('hourlyOption1Edit')).checked = false;\n      (<HTMLInputElement>document.getElementById('hourlyOption2Edit')).checked = false;\n      (<HTMLInputElement>document.getElementById('hourlyOption3Edit')).checked = true;\n      this.hourlyRadioEdit = 'hourlyOption3Edit'; \n    }else{\n      (<HTMLInputElement>document.getElementById('hourlyOption1Edit')).checked = true;\n      (<HTMLInputElement>document.getElementById('hourlyOption2Edit')).checked = false;\n      (<HTMLInputElement>document.getElementById('hourlyOption3Edit')).checked = false;\n      this.everyHoursEdit = hours.substring(2);\n      this.hourlyRadioEdit = 'hourlyOption1Edit'; \n    }\n  }else if(this.schedularDetails.hour == \"*\" && this.schedularDetails.minute != \"*\" && this.schedularDetails.day == \"*\" && this.schedularDetails.day_of_week == \"?\" && this.schedularDetails.month == \"*\"){\n    this.everyMinuteEdit = this.schedularDetails.minute;\n  }else if(this.schedularDetails.hour != \"*\" && this.schedularDetails.minute != \"*\"){\n    if(this.schedularDetails.day == \"*\" && this.schedularDetails.day_of_week == \"?\" && this.schedularDetails.month == \"*\"){\n      (<HTMLInputElement>document.getElementById('dailyOption1Edit')).checked = true; \n      // this.changeDailyRadioEdit('dailyOption1Edit');\n      this.dailyRadioEdit = 'dailyOption1Edit';\n      this.dailyHoursEdit = this.schedularDetails.hour;\n      this.dailyMinutesEdit = this.schedularDetails.minute;\n    }\n    else if(this.schedularDetails.day != \"*\" && this.schedularDetails.day_of_week == \"?\" && this.schedularDetails.month == \"*\"){\n      if(this.schedularDetails.day.includes(',')){\n        (<HTMLInputElement>document.getElementById('dailyOption2Edit')).checked = true; \n        // this.changeDailyRadioEdit('dailyOption2Edit');\n        this.daysMultiSelectEdit = JSON.parse(\"[\" + this.schedularDetails.day + \"]\");\n        this.dailyRadioEdit = 'dailyOption2Edit';\n        this.dailyHoursEdit = this.schedularDetails.hour;\n        this.dailyMinutesEdit = this.schedularDetails.minute;\n      }else if(this.schedularDetails.day.includes('-')){\n        (<HTMLInputElement>document.getElementById('dailyOption3Edit')).checked = true; \n        // this.changeDailyRadioEdit('dailyOption3Edit');\n        let array = this.schedularDetails.day.split(\"-\"); \n        this.daysFromEdit = array[0];\n        this.daysToEdit = array[1];\n        this.getDaysEndRangeEdit(this.daysFromEdit);\n        this.dailyRadioEdit = 'dailyOption3Edit';\n        this.dailyHoursEdit = this.schedularDetails.hour;\n        this.dailyMinutesEdit = this.schedularDetails.minute;\n      }else{\n        (<HTMLInputElement>document.getElementById('dailyOption2Edit')).checked = true; \n        // this.changeDailyRadioEdit('dailyOption2Edit');\n        this.dailyRadioEdit = 'dailyOption2Edit';\n        this.daysMultiSelectEdit = JSON.parse(\"[\" + this.schedularDetails.day + \"]\");\n        this.dailyHoursEdit = this.schedularDetails.hour;\n        this.dailyMinutesEdit = this.schedularDetails.minute;\n      }\n      \n    }\n    else if(this.schedularDetails.day == \"?\" && this.schedularDetails.day_of_week != \"?\" && this.schedularDetails.month == \"*\"){\n      if(this.schedularDetails.day_of_week.includes(',')){\n        this.daysOfWeekArray = JSON.parse(\"[\" + this.schedularDetails.day_of_week + \"]\");\n      }\n      else{\n        this.daysOfWeekArray.push(this.schedularDetails.day_of_week);\n      }\n      this.daysOfWeekArray.forEach(element => {\n        if(element == \"MON\"){\n          (<HTMLInputElement>document.getElementById('mondayEdit')).checked = true;\n        }\n        else if(element == \"TUE\"){\n          (<HTMLInputElement>document.getElementById('tuesdayEdit')).checked = true;\n        }\n        else if(element == \"WED\"){\n          (<HTMLInputElement>document.getElementById('wednesdayEdit')).checked = true;\n        }\n        else if(element == \"THUR\"){\n          (<HTMLInputElement>document.getElementById('thursdayEdit')).checked = true;\n        }\n        else if(element == \"FRI\"){\n          (<HTMLInputElement>document.getElementById('fridayEdit')).checked = true;\n        }\n        else if(element == \"SAT\"){\n          (<HTMLInputElement>document.getElementById('saturdayEdit')).checked = true;\n        }\n        else if(element == \"SUN\"){\n          (<HTMLInputElement>document.getElementById('sundayEdit')).checked = true;\n        }\n      });\n      this.weeklyHoursEdit = this.schedularDetails.hour;\n      this.weeklyMinutesEdit = this.schedularDetails.minute;\n    }\n    else if(this.schedularDetails.day == \"?\" && this.schedularDetails.day_of_week != \"?\" && this.schedularDetails.month != \"*\"){\n      this.monthssecondEdit = this.schedularDetails.month;\n      let array = this.schedularDetails.day_of_week.split(\"#\"); \n        this.monthlyDayofWeekEdit = array[0];\n        this.weeksEdit = array[1];\n        this.monthlyHoursEdit = this.schedularDetails.hour;\n      this.monthlyMinutesEdit = this.schedularDetails.minute;\n    }\n    else if(this.schedularDetails.day != \"?\" && this.schedularDetails.day != \"*\" && this.schedularDetails.day_of_week == \"?\" && this.schedularDetails.month != \"*\"){\n      this.monthlyDaysEdit = this.schedularDetails.day;\n      this.monthsFormEdit = this.schedularDetails.month;\n      this.monthlyHoursEdit = this.schedularDetails.hour;\n      this.monthlyMinutesEdit = this.schedularDetails.minute;\n    }\n    else{\n      console.log(\"Unhandled case with both minutes and hours\");\n    }\n  }\n  else{\n    console.log(\"Unhandled case\");\n  }\n\n  /************MINUTES FORMS***************/\n  this.minuteScheduleFormEdit = new FormGroup({\n    'minuteEdit': new FormControl(this.everyMinuteEdit, Validators.required),\n  });\n\n  this.hoursScheduleFormEdit = new FormGroup({\n    'everyHoursEdit': new FormControl(\"*/\"+this.everyHoursEdit, Validators.required),\n    'hoursMultiSelectEdit': new FormControl(this.hoursMultiSelectEdit, Validators.required),\n    'hoursFromEdit': new FormControl(this.hoursFromEdit, Validators.required),\n    'hoursToEdit': new FormControl(this.hoursToEdit, Validators.required),\n  });\n\n  this.dailyScheduleFormEdit = new FormGroup({\n    'daysMultiSelectEdit': new FormControl(this.daysMultiSelectEdit, Validators.required),\n    'daysFromEdit': new FormControl(this.daysFromEdit, Validators.required),\n    'daysToEdit': new FormControl(this.daysToEdit, Validators.required),\n    'dailyHoursEdit': new FormControl(this.dailyHoursEdit, Validators.required),\n    'dailyMinutesEdit': new FormControl(this.dailyMinutesEdit, Validators.required),\n  });\n\n  this.weeklyScheduleFormEdit = new FormGroup({\n    'weeklyHoursEdit': new FormControl(this.weeklyHoursEdit, Validators.required),\n    'weeklyMinutesEdit': new FormControl( this.weeklyMinutesEdit, Validators.required),\n    'mondayEdit': new FormControl('', Validators.required),\n    'tuesdayEdit': new FormControl('', Validators.required),\n    'wednesdayEdit': new FormControl('', Validators.required),\n    'thursdayEdit': new FormControl('', Validators.required),\n    'fridayEdit': new FormControl('', Validators.required),\n    'saturdayEdit': new FormControl('', Validators.required),\n    'sundayEdit': new FormControl('', Validators.required),\n  });\n\n  this.monthlyScheduleFormEdit = new FormGroup({\n    'monthlyDaysEdit': new FormControl(this.monthlyDaysEdit, Validators.required),\n    'monthsEdit': new FormControl(this.monthsFormEdit, Validators.required),\n    'weeksEdit': new FormControl(this.weeksEdit, Validators.required),\n    'monthlyDayofWeekEdit': new FormControl(this.monthlyDayofWeekEdit, Validators.required),\n    'monthssecondEdit': new FormControl(this.monthssecondEdit, Validators.required),\n    'monthlyHoursEdit': new FormControl(this.monthlyHoursEdit, Validators.required),\n    'monthlyMinutesEdit': new FormControl(this.monthlyMinutesEdit, Validators.required),\n  });\n  \n}\n  /***********SCHEDULAR FORM***************/  \n  get w() {\n    return this.scheduleFormEdit.controls;\n  }\n  get x() {\n    return this.minuteScheduleFormEdit.controls;\n  }\n  get y() {\n    return this.hoursScheduleFormEdit.controls;\n  }\n  get z() {\n    return this.dailyScheduleFormEdit.controls;\n  }\n  get u() {\n    return this.weeklyScheduleFormEdit.controls;\n  }\n  get m() {\n    return this.monthlyScheduleFormEdit.controls;\n  }\n\n  scheduleNameCheckEdit(value){\n    this.scheduleFormEdit.patchValue({\n    jobName: value.trim(),\n  });\n  }\n  changeHoursRadioEdit(event: any) {\n    this.hoursScheduleFormEdit.reset();\n    (<HTMLInputElement>document.getElementById(event.target.value)).checked = true;\n    if(event.target.value == 'hourlyOption2Edit'){\n      (<HTMLInputElement>document.getElementById('hourlyOption1Edit')).checked = false;\n      (<HTMLInputElement>document.getElementById('hourlyOption3Edit')).checked = false;\n    }\n    if(event.target.value == 'hourlyOption1Edit'){\n      (<HTMLInputElement>document.getElementById('hourlyOption2Edit')).checked = false;\n      (<HTMLInputElement>document.getElementById('hourlyOption3Edit')).checked = false;\n    }\n    if(event.target.value == 'hourlyOption3Edit'){\n      (<HTMLInputElement>document.getElementById('hourlyOption2Edit')).checked = false;\n      (<HTMLInputElement>document.getElementById('hourlyOption1Edit')).checked = false;\n    }\n    this.hourlyRadioEdit = event.target.value;\n  }\n\n  changeDailyRadioEdit(event: any) {\n    this.dailyScheduleFormEdit.reset();\n    (<HTMLInputElement>document.getElementById(event.target.value)).checked = true;\n    this.dailyRadioEdit = event.target.value;\n  }\n\n  getHoursEndRangeEdit(hour) {\n    this.hoursEndRangeEdit = [];\n    if (hour === \"\") {\n      this.hoursEndRangeEdit = [];\n    } else {\n      hour = hour * 1;\n      for (let i = hour + 1; i < 24; i++) {\n        this.hoursEndRangeEdit.push(i);\n      }\n    }\n  }\n  getDaysEndRangeEdit(day) {\n    this.daysEndRangeEdit = [];\n    if (day === \"\") {\n      this.daysEndRangeEdit = [];\n    } else {\n      day = day * 1;\n      for (let i = day + 1; i < 32; i++) {\n        this.daysEndRangeEdit.push(i);\n      }\n    }\n  }\n\n  selectDaysOfWeekEdit(day, event: any) {\n    if (event.target.checked === true) {\n      this.daysOfWeekEdit.push(day);\n    } else {\n      let index = this.daysOfWeekEdit.indexOf(day);\n      this.daysOfWeekEdit.splice(index, 1);\n    }\n    // console.log('daysofWeek', this.daysOfWeek);\n  }\n\n  changeMonthlyRadioEdit(event: any) {\n    this.monthlyScheduleFormEdit.reset();\n    (<HTMLInputElement>document.getElementById(event.target.value)).checked = true;\n    this.monthlyRadioEdit = event.target.value;\n  }\n\n  toogleShowFilter() {\n    this.ShowFilterEdit = !this.ShowFilterEdit;\n    this.hoursMultiSelectSettingsEdit = Object.assign({}, this.hoursMultiSelectSettingsEdit, { allowSearchFilter: this.ShowFilterEdit });\n  }\n  /**********Update Form************/\n  updateSchedular(i){\n    this.submitted = true;\n    if (this.scheduleFormEdit.invalid){\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"<strong> Kindly provide the Job details</strong>\",\n      }];\n      setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n      return;\n    }\n    else if((<HTMLInputElement>document.getElementById('pills-min-'+i)).className.includes('active') && this.minuteScheduleFormEdit.invalid){\n      this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n    }\n    else if ((<HTMLInputElement>document.getElementById('pills-hour-'+i)).className.includes('active')) {\n      if (this.hourlyRadioEdit === \"hourlyOption1Edit\" && this.y.everyHoursEdit.errors) {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n      }\n      else if (this.hourlyRadioEdit === \"hourlyOption2Edit\" && this.y.hoursMultiSelectEdit.errors) {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n      }\n      else if (this.hourlyRadioEdit === \"hourlyOption3Edit\" && (this.y.hoursFromEdit.errors || this.y.hoursToEdit.errors)) {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n      }\n    } \n    else if ((<HTMLInputElement>document.getElementById('pills-daily-'+i)).className.includes('active')) {\n      if (this.z.dailyHoursEdit.errors || this.z.dailyMinutesEdit.errors) {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n      } else if (this.dailyRadioEdit === \"dailyOption2Edit\" && this.z.daysMultiSelectEdit.errors) {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n      } else if (this.dailyRadioEdit === \"dailyOption3Edit\" && (this.z.daysFromEdit.errors || this.z.daysToEdit.errors)) {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n      }\n    } \n    else if ((<HTMLInputElement>document.getElementById('pills-weekly-'+i)).className.includes('active') && (this.daysOfWeekEdit.length == 0 || (this.u.weeklyHoursEdit.errors || this.u.weeklyMinutesEdit.errors))) {\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"<strong> Kindly provide the Job details</strong>\",\n      }\n      ];\n      setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n      return;\n    } \n    else if ((<HTMLInputElement>document.getElementById('pills-monthly-'+i)).className.includes('active')) {\n      if (this.m.monthlyHoursEdit.errors || this.m.monthlyMinutesEdit.errors) {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong> Kindly provide the Job details</strong>\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        return;\n      } else if (this.monthlyRadioEdit === \"monthlyOption1Edit\") {\n      } else if (this.monthlyRadioEdit === \"monthlyOption2Edit\") {\n      }\n    }\n    // else{\n      this.jobAlreadyExits = false;\n      let schedulePojo = {\n        // confType: this.orderDetailForm.value.configType,\n        schedulerId : this.schedularDetails.schedulerId,\n        day: \"*\",\n        day_of_week: \"?\",\n        hour: \"*\",\n        input: this.schedularDetails.botInfo,\n        // input:{},\n        jobStatus: \"pending\",\n        jobname: this.scheduleFormEdit.value.jobName,\n        minute: \"*\",\n        month: \"*\",\n        jobModifiedBy: this.user.name,\n        // role: {\n        //   roleId: Number(this.orderDetailFormEdit.value.role)\n        // },\n        // orderType: this.orderDetailForm.value.orderType,\n        // schedulerCreatedBy: this.user.name,\n        // serviceType: this.orderDetailForm.value.serviceType\n      };\n      if ((<HTMLInputElement>document.getElementById('pills-min-'+i)).className.includes('active')) {\n        schedulePojo.minute = this.minuteScheduleFormEdit.value.minuteEdit;\n      } else if ((<HTMLInputElement>document.getElementById('pills-hour-'+i)).className.includes('active')) {\n        if (this.hourlyRadioEdit === \"hourlyOption1Edit\") {\n          schedulePojo.hour = this.hoursScheduleFormEdit.value.everyHoursEdit;\n        } else if (this.hourlyRadioEdit === \"hourlyOption2Edit\") {\n          schedulePojo.hour = this.hoursScheduleFormEdit.value.hoursMultiSelectEdit.join(',');\n        } else if (this.hourlyRadioEdit === \"hourlyOption3Edit\") {\n          schedulePojo.hour = this.hoursScheduleFormEdit.value.hoursFromEdit + '-' + this.hoursScheduleFormEdit.value.hoursToEdit;\n        }\n      } else if ((<HTMLInputElement>document.getElementById('pills-daily-'+i)).className.includes('active')) {\n        if (this.dailyRadioEdit === \"dailyOption1Edit\") {\n          schedulePojo.day = \"*\";\n        } else if (this.dailyRadioEdit === \"dailyOption2Edit\") {\n          schedulePojo.day = this.dailyScheduleFormEdit.value.daysMultiSelectEdit.join(',');\n        } else if (this.dailyRadioEdit === \"dailyOption3Edit\") {\n          schedulePojo.day = this.dailyScheduleFormEdit.value.daysFromEdit + '-' + this.dailyScheduleFormEdit.value.daysToEdit;\n        }\n        schedulePojo.day_of_week = '?';\n        schedulePojo.hour = this.dailyScheduleFormEdit.value.dailyHoursEdit;\n        schedulePojo.minute = this.dailyScheduleFormEdit.value.dailyMinutesEdit;\n      } else if ((<HTMLInputElement>document.getElementById('pills-weekly-'+i)).className.includes('active')) {\n        schedulePojo.day_of_week = this.daysOfWeekEdit.join(',');\n        schedulePojo.day = '?';\n        schedulePojo.hour = this.weeklyScheduleFormEdit.value.weeklyHoursEdit;\n        schedulePojo.minute = this.weeklyScheduleFormEdit.value.weeklyMinutesEdit;\n      } else if ((<HTMLInputElement>document.getElementById('pills-monthly-'+i)).className.includes('active')) {\n        if (this.monthlyRadioEdit === \"monthlyOption1Edit\") {\n          schedulePojo.day = this.monthlyScheduleFormEdit.value.monthlyDaysEdit;\n          schedulePojo.day_of_week = '?';\n          schedulePojo.month = this.monthlyScheduleFormEdit.value.monthsEdit;\n        } else if (this.monthlyRadioEdit === \"monthlyOption2Edit\") {\n          schedulePojo.day = '?';\n          schedulePojo.month = this.monthlyScheduleFormEdit.value.monthssecondEdit;\n          schedulePojo.day_of_week = this.monthlyScheduleFormEdit.value.monthlyDayofWeekEdit + '#' + this.monthlyScheduleFormEdit.value.weeksEdit;\n        }\n        schedulePojo.hour = this.monthlyScheduleFormEdit.value.monthlyHoursEdit;\n        schedulePojo.minute = this.monthlyScheduleFormEdit.value.monthlyMinutesEdit;\n      }\n      // console.log('schedulePojo', schedulePojo);\n      // return false;\n      this.automationService.scheduleOrderUpdate(schedulePojo).subscribe(val => {\n        let response: any = val;\n        // console.log('response', response);\n        // this.createdOrderId = response.scheduler_id;\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"success\", \"close\": true,\n          \"content\": \"<strong> Job #\" + response.scheduler_id + \" is scheduled successfully!!</strong>\",\n        }];\n        setTimeout(function () {\n          this.alertdata = false; \n          let element: HTMLElement = document.getElementById('team-scheduled-order-list-tab') as HTMLElement;\n          element.click();\n        }.bind(this), 2000);\n      }, error => {\n        let errorResponse = error;\n        // console.log('error', errorResponse.error);\n        if (errorResponse.error === \"Job Name Already Exists\") {\n          this.alertdata = true;\n          this.jobAlreadyExits = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong>Job Name Already Exists</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        } else {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong> Failed to schedule order</strong>\",\n          }\n          ];\n          setTimeout(function () { this.alertdata = false; }.bind(this), 3000);\n        }\n      });\n    // }\n  }\n\n  \n}","<div class=\"created-bot-details\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <ul class=\"nav nav-pills heading-section\" id=\"pills-tab\" role=\"tablist\">\n                <div class=\"header mt-5 d-flex\"><label for=\"validationCustom01\" style=\"font-size: 13px;font-weight: 400;width:72px;width: 100px;\n                  margin: 6px 0px;\" >Schedule Name</label>\n                    <form [formGroup]=\"scheduleFormEdit\">\n                        <input type=\"text\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && (w.jobNameEdit.errors || jobAlreadyExitsEdit )}\" \n                        id=\"jobNameEdit\" required formControlName=\"jobNameEdit\" disabled (change)=\"scheduleNameCheckEdit($event.target.value)\">\n                        <div *ngIf=\"submitted && w.jobNameEdit.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"w.jobNameEdit.errors\">Schedule name is required</div>\n                        </div>\n                        <div class=\"errorText\" *ngIf=\"submitted && jobAlreadyExitsEdit\">\n                            Please enter an unique Schedule Name\n                        </div>\n                    </form>\n                </div>\n                <li class=\"nav-item ml-auto mr-3\">\n                    <a class=\"nav-link active\" id=\"pills-min-tab\"\n                        data-toggle=\"pill\" href=\"#pills-min-{{index}}\" role=\"tab\"\n                        aria-controls=\"pills-min\" aria-selected=\"true\">Minutes</a>\n                </li>\n                <li class=\"nav-item mr-3\">\n                    <a class=\"nav-link\" id=\"pills-hour-tab\" data-toggle=\"pill\"\n                        href=\"#pills-hour-{{index}}\" role=\"tab\" aria-controls=\"pills-hour\"\n                        aria-selected=\"false\">Hourly</a>\n                </li>\n                <li class=\"nav-item mr-2\">\n                    <a class=\"nav-link\" id=\"pills-daily-tab\" data-toggle=\"pill\"\n                        href=\"#pills-daily-{{index}}\" role=\"tab\" aria-controls=\"pills-daily\"\n                        aria-selected=\"false\">Daily</a>\n                </li>\n                <li class=\"nav-item mr-2\">\n                    <a class=\"nav-link\" id=\"pills-weekly-tab\" data-toggle=\"pill\"\n                        href=\"#pills-weekly-{{index}}\" role=\"tab\" aria-controls=\"pills-weekly\"\n                        aria-selected=\"false\">Weekly</a>\n                </li>\n                <li class=\"nav-item mr-2\">\n                    <a class=\"nav-link\" id=\"pills-monthly-tab\" data-toggle=\"pill\"\n                        href=\"#pills-monthly-{{index}}\" role=\"tab\" aria-controls=\"pills-monthly\"\n                        aria-selected=\"false\">Monthly</a>\n                </li>\n            </ul>\n            <div class=\"tab-content p-3\" id=\"pills-tabContent\">\n                <div class=\"tab-pane fade show active\" id=\"pills-min-{{index}}\"\n                    role=\"tabpanel\" aria-labelledby=\"pills-min-tab\">\n                    <form [formGroup]=\"minuteScheduleFormEdit\" class=\"form-inline\">\n                        <div class=\"form-group\">\n                          <label for=\"minute\">Every</label>\n                          <select class=\"custom-select inlineSelect mx-2\" id=\"minuteEdit\" [ngClass]=\"{ 'is-invalid': submitted && x.minuteEdit.errors }\"\n                          formControlName=\"minuteEdit\">\n                            <option selected>*</option>\n                            <option *ngFor=\"let minute of minutes_minsEdit; let i=index;\"\n                            value=\"*/{{minute}}\">{{minute}}</option>\n                          </select>\n                          <div id=\"minuteEdit\" class=\"text-muted\">\n                            Minute(s)\n                          </div>\n                          <div *ngIf=\"submitted && x.minuteEdit.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"x.minuteEdit.errors\">Please select a value</div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"tab-pane fade\" id=\"pills-hour-{{index}}\" role=\"tabpanel\"\n                    aria-labelledby=\"pills-hour-tab\">\n                    <form [formGroup]=\"hoursScheduleFormEdit\">\n                        <div class=\"form-inline mb-3\">\n                            <input class=\"form-check-input\" (change)=\"changeHoursRadioEdit($event)\" type=\"radio\" name=\"inlineRadioOptions\" id=\"hourlyOption1Edit\" value=\"hourlyOption1Edit\">\n                            <label for=\"everyHours\">Every</label>\n                            <select class=\"custom-select inlineSelect mx-2\" formControlName=\"everyHoursEdit\" [attr.disabled]=\"hourlyRadioEdit != 'hourlyOption1Edit' ? true : null\"\n                                [ngClass]=\"{ 'is-invalid': submitted && y.everyHoursEdit.errors }\" id=\"hoursEdit\">\n                                <option value=\"\">*</option>\n                                <option *ngFor=\"let hour of hours_hrsEdit; let i=index;\"\n                                value=\"*/{{hour}}\">{{hour}}</option>\n                            </select>\n                            <div id=\"hoursEdit\" class=\"text-muted\">\n                                Hour(s)\n                            </div>\n                            <div *ngIf=\"hourlyRadioEdit == 'hourlyOption1Edit' && submitted && y.everyHoursEdit.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"y.everyHoursEdit.errors\">Please select a value</div>\n                            </div>\n                        </div>\n                        <small class=\"text-danger\">Custom schedule with muliple time slots</small>\n                        <div class=\"form-inline mt-2 mb-3\">\n                            <input class=\"form-check-input\" type=\"radio\"\n                                name=\"hourlyOption2Edit\" id=\"hourlyOption2Edit\"\n                                value=\"hourlyOption2Edit\"\n                                (change)=\"changeHoursRadioEdit($event)\">\n                            <label for=\"hoursMultiSelectEdit\">Hours list :</label>\n                            <span class=\"mr-2\"></span>\n                            <ng-multiselect-dropdown name=\"hoursMultiSelectEdit\"\n                                [ngClass]=\"{ 'is-invalid': submitted && y.hoursMultiSelectEdit.errors }\"\n                                [placeholder]=\"'Select hours'\" [data]=\"hoursEdit\"\n                                [disabled]=\"hourlyRadioEdit != 'hourlyOption2Edit'\"\n                                [settings]=\"hoursMultiSelectSettingsEdit\"\n                                id=\"hoursMultiSelectEdit\"\n                                formControlName=\"hoursMultiSelectEdit\">\n                            </ng-multiselect-dropdown>\n                            <div *ngIf=\"hourlyRadioEdit == 'hourlyOption2Edit' && submitted && y.hoursMultiSelectEdit.errors\"\n                                class=\"invalid-feedback\">\n                                <div *ngIf=\"y.hoursMultiSelectEdit.errors\">Please select\n                                    a value</div>\n                            </div>\n                        </div>\n                        <small class=\"text-danger mb-1\">Custom schedule with specific time range</small>\n                        <div class=\"form-inline mt-2 mb-3\">\n                            <input class=\"form-check-input\" type=\"radio\" name=\"hourlyOption3Edit\" id=\"hourlyOption3Edit\" value=\"hourlyOption3Edit\" (change)=\"changeHoursRadioEdit($event)\">\n                            <label for=\"minute\">Time Range :</label>\n                            <select class=\"custom-select inlineSelect mx-2\" [ngClass]=\"{ 'is-invalid': submitted && y.hoursFromEdit.errors }\"\n                            (change)=\"getHoursEndRangeEdit($event.target.value)\"\n                            [attr.disabled]=\"hourlyRadioEdit != 'hourlyOption3Edit' ? true : null\"\n                            id=\"hoursFromEdit\" formControlName=\"hoursFromEdit\">\n                            <option value=\"\" selected>select start range\n                            </option>\n                            <option *ngFor=\"let hour of hoursEdit; let i=index;\"\n                                value=\"{{hour}}\">{{hour}}</option>\n                            </select>\n                            <label for=\"minute\">-</label>\n                            <select class=\"custom-select inlineSelect mx-2\" [ngClass]=\"{ 'is-invalid': submitted && y.hoursToEdit.errors }\"\n                            [attr.disabled]=\"hourlyRadioEdit != 'hourlyOption3Edit'  ? true : null\"\n                            id=\"hoursToEdit\" formControlName=\"hoursToEdit\">\n                            <option value=\"\" selected>select end range</option>\n                            <option\n                                *ngFor=\"let hour of hoursEndRangeEdit; let i=index;\"\n                                value=\"{{hour}}\">{{hour}}</option>\n                            </select>\n                        </div>\n                    </form>\n                    <!-- <div class=\"form-inline\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\">\n                        <label for=\"minute\">Runs On</label>\n                        <select class=\"custom-select inlineSelect mx-2\" id=\"minute\">\n                          <option selected>*</option>\n                          <option value=\"1\">12</option>\n                          <option value=\"2\">13</option>\n                          <option value=\"3\">14</option>\n                        </select>\n                        <label for=\"minute\">:</label>\n                        <select class=\"custom-select inlineSelect mx-2\" id=\"minute\">\n                            <option selected>*</option>\n                            <option value=\"1\">00</option>\n                            <option value=\"2\">01</option>\n                            <option value=\"3\">02</option>\n                          </select>\n                        </div> -->\n  \n                </div>\n                <div class=\"tab-pane fade\" id=\"pills-daily-{{index}}\" role=\"tabpanel\"\n                    aria-labelledby=\"pills-daily-tab\">\n                    <form [formGroup]=\"dailyScheduleFormEdit\">\n                        <div class=\"form-inline mb-3\">\n                            <input class=\"form-check-input\" type=\"radio\"\n                                name=\"dailyOptionEdit\" id=\"dailyOption1Edit\"\n                                value=\"dailyOption1Edit\"\n                                (change)=\"changeDailyRadioEdit($event)\" checked>\n                            <label for=\"minute\">Everyday</label>\n                        </div>\n                        <small class=\"text-danger\">Custom schedule with muliple\n                            date(s)</small>\n                        <div class=\"form-inline mt-2 mb-3\">\n                            <input class=\"form-check-input\" type=\"radio\"\n                                name=\"dailyOptionEdit\" id=\"dailyOption2Edit\"\n                                value=\"dailyOption2Edit\"\n                                (change)=\"changeDailyRadioEdit($event)\">\n                            <label for=\"daysMultiSelect\">Days list :</label>\n                            <span class=\"mr-2\"></span>\n                            <ng-multiselect-dropdown name=\"daysMultiSelectEdit\"\n                                [ngClass]=\"{ 'is-invalid': submitted && z.daysMultiSelectEdit.errors }\"\n                                [placeholder]=\"'Select Days'\" [data]=\"daysEdit\"\n                                [disabled]=\"dailyRadioEdit != 'dailyOption2Edit'\"\n                                [settings]=\"daysMultiSelectSettingsEdit\"\n                                formControlName=\"daysMultiSelectEdit\" [formControl]=\"dailyScheduleFormEdit.controls['daysMultiSelectEdit']\">\n                            </ng-multiselect-dropdown>\n                            <div *ngIf=\"dailyRadioEdit == 'dailyOption2Edit' && submitted && z.daysMultiSelectEdit.errors\"\n                                class=\"invalid-feedback\">\n                                <div *ngIf=\"z.daysMultiSelectEdit.errors\">Please select\n                                    a value</div>\n                            </div>\n                        </div>\n                        <small class=\"text-danger\">Custom schedule with specific\n                            date\n                            range</small>\n                        <div class=\"form-inline mt-2 mb-3\">\n                            <input class=\"form-check-input\" type=\"radio\"\n                                name=\"dailyOptionEdit\" id=\"dailyOption3Edit\"\n                                value=\"dailyOption3Edit\"\n                                (change)=\"changeDailyRadioEdit($event)\">\n                            <label for=\"minute\">Date Range :</label>\n                            <select class=\"custom-select inlineSelect mx-2\"\n                                [ngClass]=\"{ 'is-invalid': submitted && z.daysFromEdit.errors }\"\n                                (change)=\"getDaysEndRangeEdit($event.target.value)\"\n                                id=\"daysFromEdit\" [attr.disabled]=\"dailyRadioEdit != 'dailyOption3Edit' ? true : null\" formControlName=\"daysFromEdit\">\n                                <option value=\"\" selected>select start date\n                                </option>\n                                <option *ngFor=\"let day of daysEdit; let i=index;\"\n                                    value=\"{{day}}\">{{day}}</option>\n                            </select>\n                            <label for=\"minute\">-</label>\n                            <select class=\"custom-select inlineSelect mx-2\"\n                                [ngClass]=\"{ 'is-invalid': submitted && z.daysToEdit.errors }\"\n                                id=\"daysToEdit\" [attr.disabled]=\"dailyRadioEdit != 'dailyOption3Edit' ? true : null\" formControlName=\"daysToEdit\">\n                                <option value=\"\" selected>select end date</option>\n                                <option *ngFor=\"let days of daysEndRangeEdit;\"\n                                    value=\"{{days}}\">{{days}}</option>\n                            </select>\n                            <div *ngIf=\"dailyRadioEdit == 'dailyOption3Edit' && submitted && (z.daysFromEdit.errors || y.daysToEdit.errors)\"\n                                class=\"invalid-feedback\">\n                                <div *ngIf=\"z.daysFromEdit.errors || z.daysToEdit.errors\">\n                                    Please select a valid start and end date</div>\n                            </div>\n                        </div>\n                        <div class=\"form-inline\">\n                            <label for=\"minute\">Starts at :</label>\n                            <select class=\"custom-select inlineSelect mx-2\"\n                                [ngClass]=\"{ 'is-invalid': submitted && z.dailyHoursEdit.errors }\"\n                                id=\"dailyHoursEdit\" formControlName=\"dailyHoursEdit\">\n                                <!-- <option value=\"*\" selected>*</option> -->\n                                <option *ngFor=\"let hour of hoursEdit; let i=index;\"\n                                    value=\"{{hour}}\">{{hour}}</option>\n                            </select>\n                            <label for=\"minute\">:</label>\n                            <select class=\"custom-select inlineSelect mx-2\"\n                                [ngClass]=\"{ 'is-invalid': submitted && z.dailyMinutesEdit.errors }\"\n                                id=\"dailyMinutesEdit\" formControlName=\"dailyMinutesEdit\">\n                                <!-- <option value=\"*\" selected>*</option> -->\n                                <option *ngFor=\"let minute of minutesEdit; let i=index;\"\n                                    value=\"{{minute}}\">{{minute}}</option>\n                            </select>\n                            <div *ngIf=\"submitted && (z.dailyHoursEdit.errors || z.dailyMinutesEdit.errors)\"\n                                class=\"invalid-feedback\">\n                                <div\n                                    *ngIf=\"z.dailyHoursEdit.errors || z.dailyMinutesEdit.errors\">\n                                    Please select a valid hour and minute</div>\n                            </div>\n                        </div>\n                        <div class=\"text-right\">\n                            <small class=\"text-danger\">\"*\" Denotes all the\n                                value(s)</small>\n                        </div>\n                    </form>\n                    \n  \n                </div>\n                <div class=\"tab-pane fade\" id=\"pills-weekly-{{index}}\" role=\"tabpanel\"\n                    aria-labelledby=\"pills-weekly-tab\">\n                    <form [formGroup]=\"weeklyScheduleFormEdit\">\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\"\n                                id=\"mondayEdit\" value=\"MON\" formControlName=\"mondayEdit\"\n                                (change)=\"selectDaysOfWeekEdit('MON',$event)\">\n                            <label class=\"form-check-label\"\n                                for=\"inlineCheckbox1Edit\">Monday</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\"\n                                id=\"tuesdayEdit\" value=\"TUE\" formControlName=\"tuesdayEdit\"\n                                (change)=\"selectDaysOfWeekEdit('TUE',$event)\">\n                            <label class=\"form-check-label\"\n                                for=\"inlineCheckbox2Edit\">Tuesday</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\"\n                                id=\"wednesdayEdit\" value=\"WED\" formControlName=\"wednesdayEdit\"\n                                (change)=\"selectDaysOfWeekEdit('WED',$event)\">\n                            <label class=\"form-check-label\"\n                                for=\"inlineCheckbox3Edit\">Wednesday</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\"\n                                id=\"thursdayEdit\" value=\"THU\" formControlName=\"thursdayEdit\"\n                                (change)=\"selectDaysOfWeekEdit('THU',$event)\">\n                            <label class=\"form-check-label\"\n                                for=\"inlineCheckbox4Edit\">Thursday</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\"\n                                id=\"fridayEdit\" value=\"FRI\" formControlName=\"fridayEdit\"\n                                (change)=\"selectDaysOfWeekEdit('FRI',$event)\">\n                            <label class=\"form-check-label\"\n                                for=\"inlineCheckbox5Edit\">Friday</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\"\n                                id=\"saturdayEdit\" value=\"SAT\" formControlName=\"saturdayEdit\"\n                                (change)=\"selectDaysOfWeekEdit('SAT',$event)\">\n                            <label class=\"form-check-label\"\n                                for=\"inlineCheckbox6Edit\">Saturday</label>\n                        </div>\n                        <div class=\"form-check form-check-inline\">\n                            <input class=\"form-check-input\" type=\"checkbox\"\n                                id=\"sundayEdit\" value=\"SUN\" formControlName=\"sundayEdit\"\n                                (change)=\"selectDaysOfWeekEdit('SUN',$event)\">\n                            <label class=\"form-check-label\"\n                                for=\"inlineCheckbox7Edit\">Sunday</label>\n                        </div>\n                        <!-- <div *ngIf=\"submitted && daysOfWeek.length==0\" class=\"invalid-feedback\"> -->\n                        <div class=\"errorText\"\n                            *ngIf=\"submitted && daysOfWeekEdit.length==0\">Please check a\n                            value</div>\n                        <!-- </div>  -->\n                        <div class=\"form-inline\">\n                            <label for=\"minute\">Starts at :</label>\n                            <select class=\"custom-select inlineSelect mx-2\"\n                                [ngClass]=\"{ 'is-invalid': submitted && u.weeklyHoursEdit.errors }\"\n                                id=\"weeklyHoursEdit\" formControlName=\"weeklyHoursEdit\">\n                                <!-- <option value=\"*\" selected>*</option> -->\n                                <option *ngFor=\"let hour of hoursEdit; let i=index;\"\n                                    value=\"{{hour}}\">{{hour}}</option>\n                            </select>\n                            <label for=\"minute\">:</label>\n                            <select class=\"custom-select inlineSelect mx-2\"\n                                [ngClass]=\"{ 'is-invalid': submitted && u.weeklyMinutesEdit.errors }\"\n                                id=\"weeklyMinutesEdit\" formControlName=\"weeklyMinutesEdit\">\n                                <!-- <option value=\"*\" selected>*</option> -->\n                                <option *ngFor=\"let minute of minutesEdit; let i=index;\"\n                                    value=\"{{minute}}\">{{minute}}</option>\n                            </select>\n                            <div *ngIf=\"submitted && (u.weeklyHoursEdit.errors || u.weeklyMinutesEdit.errors)\"\n                                class=\"invalid-feedback\">\n                                <div\n                                    *ngIf=\"u.weeklyHoursEdit.errors || u.weeklyMinutesEdit.errors\">\n                                    Please select a valid hour and minute</div>\n                            </div>\n                        </div>\n                        <div class=\"text-right\">\n                            <small class=\"text-danger\">\"*\" Denotes all the\n                                value(s)</small>\n                        </div>\n                    </form>\n                    <!-- <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\">\n                        <label class=\"form-check-label\" for=\"inlineCheckbox1\">Monday</label>\n                      </div>\n                      <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"option2\">\n                        <label class=\"form-check-label\" for=\"inlineCheckbox2\">Tuesday</label>\n                      </div>\n                      <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" value=\"option3\">\n                        <label class=\"form-check-label\" for=\"inlineCheckbox3\">Wednesday</label>\n                      </div>\n                      <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox4\" value=\"option4\">\n                        <label class=\"form-check-label\" for=\"inlineCheckbox4\">Thursday</label>\n                      </div>\n                      <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox5\" value=\"option5\">\n                        <label class=\"form-check-label\" for=\"inlineCheckbox5\">Friday</label>\n                      </div>\n                      <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox6\" value=\"option6\">\n                        <label class=\"form-check-label\" for=\"inlineCheckbox6\">Saturday</label>\n                      </div>\n                      <div class=\"form-check form-check-inline\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox7\" value=\"option7\">\n                        <label class=\"form-check-label\" for=\"inlineCheckbox7\">Sunday</label>\n                      </div>\n                    <div class=\"form-inline\">\n  \n                        <label for=\"minute\">Starts at :</label>\n                        <select class=\"custom-select inlineSelect mx-2\" id=\"minute\">\n                          <option selected>*</option>\n                          <option value=\"1\">01</option>\n                          <option value=\"2\">02</option>\n                          <option value=\"3\">03</option>\n                        </select>\n                        <label for=\"minute\">:</label>\n                        <select class=\"custom-select inlineSelect mx-2\" id=\"minute\">\n                            <option selected>*</option>\n                            <option value=\"1\">00</option>\n                            <option value=\"2\">02</option>\n                            <option value=\"3\">03</option>\n                          </select>\n                        </div> -->\n  \n  \n                </div>\n                <div class=\"tab-pane fade\" id=\"pills-monthly-{{index}}\" role=\"tabpanel\"\n                    aria-labelledby=\"pills-monthly-tab\">\n                    <form [formGroup]=\"monthlyScheduleFormEdit\">\n                      <div class=\"form-inline mb-3\">\n                          <input class=\"form-check-input\" type=\"radio\"\n                              name=\"monthlyOptionEdit\" id=\"monthlyOption1Edit\"\n                              value=\"monthlyOption1Edit\"\n                              (change)=\"changeMonthlyRadioEdit($event)\" checked>\n                          <label for=\"minute\">Day</label>\n                          <select class=\"custom-select inlineSelect mx-2\"\n                              id=\"monthlyDaysEdit\" [attr.disabled]=\"monthlyRadioEdit != 'monthlyOption1Edit' ? true : null\" formControlName=\"monthlyDaysEdit\">\n                              <!-- <option value=\"*\" selected>* -->\n                              <!-- </option> -->\n                              <option *ngFor=\"let day of daysEdit; let i=index;\"\n                                  value=\"{{day}}\">{{day}}</option>\n                          </select>\n                          <label for=\"minute\">of every</label>\n                          <select class=\"custom-select inlineSelect mx-2\"\n                              id=\"monthsEdit\" [attr.disabled]=\"monthlyRadioEdit != 'monthlyOption1Edit' ? true : null\" formControlName=\"monthsEdit\">\n                              <!-- <option value=\"*\" selected>* -->\n                              <!-- </option> -->\n                              <option *ngFor=\"let month of monthsEdit; let i=index;\"\n                                  value=\"*/{{month}}\">{{month}}</option>\n                          </select>\n                          <div id=\"minute\" class=\"text-muted\">\n                              Month(s)\n                          </div>\n                      </div>\n                      <div class=\"form-inline mb-3\">\n                          <input class=\"form-check-input\" type=\"radio\"\n                              name=\"monthlyOptionEdit\" id=\"monthlyOption2Edit\"\n                              value=\"monthlyOption2Edit\"\n                              (change)=\"changeMonthlyRadioEdit($event)\">\n                          <label for=\"minute\">The</label>\n                          <select class=\"custom-select inlineSelect mx-2\"\n                              id=\"weeksEdit\" [attr.disabled]=\"monthlyRadioEdit != 'monthlyOption2Edit' ? true : null\" formControlName=\"weeksEdit\">\n                              <option value=\"1\" selected>First</option>\n                              <option value=\"2\">Second</option>\n                              <option value=\"3\">Third</option>\n                              <option value=\"4\">Fourth</option>\n                              <option value=\"5\">Fifth</option>\n                          </select>\n                          <select class=\"custom-select inlineSelect mx-2\"\n                              id=\"monthlyDayofWeekEdit\" [attr.disabled]=\"monthlyRadioEdit != 'monthlyOption2Edit' ? true : null\"\n                              formControlName=\"monthlyDayofWeekEdit\">\n                              <option value=\"1\" selected>Sunday</option>\n                              <option value=\"2\">Monday</option>\n                              <option value=\"3\">Tuesday</option>\n                              <option value=\"4\">Wednesday</option>\n                              <option value=\"5\">Thursday</option>\n                              <option value=\"6\">Friday</option>\n                              <option value=\"7\">Saturday</option>\n                          </select>\n                          <label for=\"minute\">of every</label>\n  \n                          <select class=\"custom-select inlineSelect mx-2\"\n                              id=\"monthssecondEdit\" [attr.disabled]=\"monthlyRadioEdit != 'monthlyOption2Edit' ? true : null\" formControlName=\"monthssecondEdit\">\n                              <!-- <option value=\"*\" selected>* -->\n                              <!-- </option> -->\n                              <option *ngFor=\"let month of monthsEdit; let i=index;\"\n                                  value=\"*/{{month}}\">{{month}}</option>\n                          </select>\n                          <div id=\"minute\" class=\"text-muted\">\n                              Month(s)\n                          </div>\n                      </div>\n                      <div class=\"form-inline\">\n                          <label for=\"minute\">Starts at :</label>\n                          <select class=\"custom-select inlineSelect mx-2\"\n                              [ngClass]=\"{ 'is-invalid': submitted && m.monthlyHoursEdit.errors }\"\n                              id=\"monthlyHoursEdit\" formControlName=\"monthlyHoursEdit\">\n                              <!-- <option value=\"*\" selected>*</option> -->\n                              <option *ngFor=\"let hour of hoursEdit; let i=index;\"\n                                  value=\"{{hour}}\">{{hour}}</option>\n                          </select>\n                          <label for=\"minute\">:</label>\n                          <select class=\"custom-select inlineSelect mx-2\"\n                              [ngClass]=\"{ 'is-invalid': submitted && m.monthlyMinutesEdit.errors }\"\n                              id=\"monthlyMinutesEdit\"\n                              formControlName=\"monthlyMinutesEdit\">\n                              <!-- <option value=\"*\" selected>*</option> -->\n                              <option *ngFor=\"let minute of minutesEdit; let i=index;\"\n                                  value=\"{{minute}}\">{{minute}}</option>\n                          </select>\n                          <div *ngIf=\"submitted && (m.monthlyHoursEdit.errors || m.monthlyMinutesEdit.errors)\"\n                              class=\"invalid-feedback\">\n                              <div\n                                  *ngIf=\"m.monthlyHoursEdit.errors || m.monthlyMinutesEdit.errors\">\n                                  Please select a valid hour and minute</div>\n                          </div>\n                      </div>\n                      <div class=\"text-right\">\n                          <small class=\"text-danger\">\"*\" Denotes all the\n                              value(s)</small>\n                      </div>\n                  </form>\n                    <!-- <div class=\"form-inline mb-3\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\">\n                        <label for=\"minute\">Day</label>\n                        <input type=\"text\" class=\"form-control\" id=\"ordercreatedby\" style=\"width: 98px;margin: 0 10px;height: 30px;font-size: 12px;\">\n                        <label for=\"minute\">of every</label>\n                        <select class=\"custom-select inlineSelect mx-2\" id=\"minute\">\n                            <option selected>*</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"3\">4</option>\n                            <option value=\"3\">5</option>\n                            <option value=\"3\">6</option>\n                          </select>\n                        <div id=\"minute\" class=\"text-muted\">\n                          Month(s)\n                        </div>\n                    </div>\n                  <div class=\"form-inline mb-3\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\">\n                    <label for=\"minute\">The</label>\n                    <select class=\"custom-select inlineSelect mx-2\" id=\"minute\" placeholder=\"First\">\n                      <option>*</option>\n                      <option value=\"1\" selected>First</option>\n                      <option value=\"2\">Second</option>\n                      <option value=\"3\">Third</option>\n                      <option value=\"3\">Fourth</option>\n                      <option value=\"3\">Fifth</option>\n                    </select>\n                    <select class=\"custom-select inlineSelect mx-2\" id=\"minute\" placeholder=\"Monday\">\n                        <option>*</option>\n                        <option value=\"1\" selected>Monday</option>\n                        <option value=\"2\">Tuesday</option>\n                        <option value=\"3\">Wednesday</option>\n                        <option value=\"3\">Thursday</option>\n                        <option value=\"3\">Friday</option>\n                        <option value=\"3\">Saturday</option>\n                        <option value=\"3\">Sunday</option>\n                      </select>\n                      <label for=\"minute\">of every</label>\n  \n                    <select class=\"custom-select inlineSelect mx-2\" id=\"minute\" placeholder=\"6\">\n                        <option>*</option>\n                        <option value=\"1\" selected>1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"3\">4</option>\n                            <option value=\"3\">5</option>\n                            <option value=\"3\">6</option>\n                      </select>\n                      <div id=\"minute\" class=\"text-muted\">\n                        Month(s)\n                      </div>\n                </div>\n              <div class=\"form-inline\">\n                <label for=\"minute\">Starts at :</label>\n                <select class=\"custom-select inlineSelect mx-2\" id=\"minute\">\n                  <option selected>*</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                </select>\n                <label for=\"minute\">:</label>\n                <select class=\"custom-select inlineSelect mx-2\" id=\"minute\">\n                    <option selected>*</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                  </select>\n                </div> -->\n  \n                </div>\n            </div>\n            <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata\" style=\"position: absolute;bottom:36px;width:50%\">\n            </app-alert>\n            <div class=\"text-right\">\n                <small class=\"text-danger\">\"*\" Denotes all the value(s)</small>\n                <button class=\"btn btn-sm btn-success btn-save\" (click)=\"updateSchedular(index)\">save</button>\n            </div>\n        </div>\n    </div>\n  </div>","import { Component, OnInit, Input, OnChanges,ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginService } from '../../../service/login.service';\nimport { AutomationFactoryService } from '../../../service/automation-factory.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\nimport { Subscription, timer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { environment } from './../../../../environments/environment';\n@Component({\n  selector: 'app-scheduled-job-list',\n  templateUrl: './scheduled-job-list.component.html',\n  styleUrls: ['./scheduled-job-list.component.scss'],\n  providers: [AutomationFactoryService]\n})\nexport class ScheduledJobListComponent implements OnInit {\n  \n  @Input() scheduledOrderList: any;\n  pageOfItems: Array<any>;\n  pageSize: any;\n  roles: any;\n  suitDetails:any;\n  schedularDetails:any;\n  toggle=true;\n  activeId:any;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private automationFactoryService: AutomationFactoryService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    // console.log('scheduledOrderListon', this.scheduledOrderList)\n  }\n\n  ngOnChanges(): void {\n    this.pageSize = 10;\n    // console.log('scheduledOrderList', this.scheduledOrderList);\n  }\n\n  onChangePage(pageOfItems: Array<any>) {\n    this.pageOfItems = pageOfItems;\n  }\n \n deleteScheduler(id){\n    this.automationFactoryService.deleteSchedule(id).subscribe(val => {\n\n      // console.log(\"check_log\",this.scheduledOrderList[0].jobStatus);\n      for(var i in this.scheduledOrderList)\n      {\n        if(this.scheduledOrderList[i].schedulerId==id)\n        {\n          this.scheduledOrderList[i].jobStatus='Deleted';\n        }\n\n\n      }\n      \n    });\n  }\n\n  changeStatus(event, id, index){\n    this.toggle = false;\n    if (event.target.checked) {\n      this.automationFactoryService.resumeSchedule(id).subscribe(val => {\n        for(var i in this.scheduledOrderList)\n        {\n          if(this.scheduledOrderList[i].schedulerId==id)\n          {\n            this.scheduledOrderList[i].jobStatus='Active';\n          }\n\n\n        }\n        // this.automationFactoryService.getScheduleList(this.roles).subscribe(val1 => {\n        //   this.scheduledOrderList = val1;\n        // });\n      });\n    } else {\n      this.automationFactoryService.pauseSchedule(id).subscribe(val => {\n        for(var i in this.scheduledOrderList)\n        {\n          if(this.scheduledOrderList[i].schedulerId==id)\n          {\n            this.scheduledOrderList[i].jobStatus='Inactive';\n          }\n\n\n        }\n        \n      });\n    }\n  }\n\n  viewScheduledJob(event,index){\n    this.automationFactoryService.getSchedularDetails(event).subscribe(val=>{\n      this.suitDetails = val;\n      this.suitDetails = this.suitDetails[0];\n      this.toggle = true;\n })\n}\n\n  scheduleEdit(event,index){\n    this.automationFactoryService.getSchedularDetails(event).subscribe(val=>{\n      this.schedularDetails = val;\n      for(var i=0; i<this.schedularDetails.length; i++){\n        this.schedularDetails = this.schedularDetails[i];\n      }\n      this.activeId = index;\n      this.toggle = true;\n    })\n  }\n  stopCollapse(){\n    console.log('collapse');\n  }\n\n  public ascScheduleIdSort = true;\n  public ascOrderTypeSort = true;\n  public ascScheduleNameSort = true;\n  public ascServiceType = true;\n  public ascScheduledDate = true;\n  public ascCreatedDate = true;\n\n\n\n\n  sort(sortValue){\n\n   if(sortValue==='schedulerId') {\n     this.ascScheduleNameSort = true;\n     this.ascOrderTypeSort = true;\n     this.ascServiceType = true;\n     this.ascScheduledDate = true;\n     this.ascCreatedDate = true;\n     this.pageOfItems.sort((a, b) => b.schedulerId - a.schedulerId); // For descending sort\n     if(this.ascScheduleIdSort){\n     this.ascScheduleIdSort = false;\n     this.pageOfItems.sort((a, b) => b.schedulerId - a.schedulerId); // For descending sort\n     console.log(this.pageOfItems);\n     }\n     else{\n     this.ascScheduleIdSort = true;\n     this.pageOfItems.sort((a, b) => a.schedulerId - b.schedulerId); // For ascending sort\n     console.log(this.pageOfItems);\n         }\n\n\n   } else if(sortValue==='orderType'){\n     this.ascScheduleIdSort = true;\n     this.ascScheduleNameSort = true;\n     this.ascServiceType = true;\n     this.ascScheduledDate = true;\n     this.ascCreatedDate = true;\n     this.pageOfItems.sort((a, b) => b.schedulerId - a.schedulerId); // For descending sort\n\n     if(this.ascOrderTypeSort){\n       this.ascOrderTypeSort = false;\n       this.pageOfItems.sort((a, b) => b.orderType > a.orderType ? -1:1); // For descending sort\n       console.log(this.pageOfItems);\n       }\n       else{\n       this.ascOrderTypeSort = true;\n       this.pageOfItems.sort((a, b) => a.orderType > b.orderType ? -1:1); // For ascending sort\n       console.log(this.pageOfItems);\n }\n\n   }else if(sortValue==='serviceType')\n   {\n     this.ascScheduleIdSort = true;\n     this.ascOrderTypeSort = true;\n     this.ascScheduleNameSort = true;\n     this.ascScheduledDate = true;\n     this.ascCreatedDate = true;\n     this.pageOfItems.sort((a, b) => b.schedulerId - a.schedulerId); // For descending sort\n     if(this.ascServiceType){\n       this.ascServiceType = false;\n       this.pageOfItems.sort((a, b) => b.serviceType > a.serviceType ? -1:1); // For descending sort\n       console.log(this.pageOfItems);\n       }\n       else{\n       this.ascServiceType = true;\n       this.pageOfItems.sort((a, b) => a.serviceType > b.serviceType ? -1:1); // For ascending sort\n       console.log(this.pageOfItems);\n }\n\n   }\n   else if(sortValue==='scheduleTime')\n   {\n     this.ascScheduleIdSort = true;\n     this.ascScheduleNameSort = true;\n     this.ascOrderTypeSort = true;\n     this.ascServiceType = true;\n     this.ascCreatedDate = true;\n     this.pageOfItems.sort((a, b) => b.schedulerId - a.schedulerId); // For descending sort\n     if(this.ascScheduledDate){\n       this.ascScheduledDate = false;\n      // For descending sort\n       this.pageOfItems.sort((val1, val2) => {\n        return new Date(val2.nextRun).valueOf() - new Date(val1.nextRun).valueOf();\n      });\n       console.log(this.pageOfItems);\n       }\n       else{\n       this.ascScheduledDate = true;\n       // For ascending sort\n       this.pageOfItems.sort((val1, val2) => {\n        return new Date(val1.nextRun).valueOf() - new Date(val2.nextRun).valueOf();\n      });\n       console.log(this.pageOfItems);\n }\n\n   }\n   else if(sortValue==='scheduleName')\n   {\n\n\n\n     this.ascScheduleIdSort = true;\n     this.ascOrderTypeSort = true;\n     this.ascServiceType = true;\n     this.ascScheduledDate = true;\n     this.ascCreatedDate = true;\n\n\n\n     this.pageOfItems.sort((a, b) => b.schedulerId - a.schedulerId); // For descending sort\n     if(this.ascScheduleNameSort){\n       this.ascScheduleNameSort = false;\n\n       this.pageOfItems.sort((a, b) => b.jobname > a.jobname ? -1:1 ); // For descending sort\n\n       }\n       else{\n       this.ascScheduleNameSort = true;\n       this.pageOfItems.sort((a, b) => a.jobname > b.jobname ? -1:1); // For ascending sort\n       console.log(this.pageOfItems);\n }\n\n   }\n\n   else{\n\n     this.ascScheduleIdSort = true;\n     this.ascScheduleNameSort = true;\n     this.ascOrderTypeSort = true;\n     this.ascServiceType = true;\n     this.ascScheduledDate = true;\n     this.pageOfItems.sort((a, b) => b.schedulerId - a.schedulerId); // For descending sort\n\n if(this.ascCreatedDate){\n   this.ascCreatedDate = false;\n   // For descending sort\n   this.pageOfItems.sort((val1, val2) => {\n     return new Date(val2.jobCreatedAt).valueOf() - new Date(val1.jobCreatedAt).valueOf();\n   });\n   console.log(this.pageOfItems);\n   }\n   else{\n   this.ascCreatedDate = true;\n   this.pageOfItems.sort((val1, val2) => {\n    //  For ascending\n     return new Date(val1.jobCreatedAt).valueOf() - new Date(val2.jobCreatedAt).valueOf();\n   });\n   console.log(this.pageOfItems);\n}\n\n   }\n\n\n\n }\n}\n","<div class=\"order-list-collapse-menu row\">\n  <div (click)='sort(\"schedulerId\")' class=\"title d-flex col\" id=\"orderId\">\n    Schedule ID\n    <i class=\"fa fa-chevron-up trg-toggle orderId_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n    <i class=\"fa fa-chevron-down trg-toggle orderId_down\" id=\"decending\" aria-hidden=\"true\"></i>\n  </div>\n  <div (click)='sort(\"scheduleName\")' class=\"title d-flex col\" id=\"orderId\">\n    Schedule Name\n    <i class=\"fa fa-chevron-up trg-toggle orderId_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n    <i class=\"fa fa-chevron-down trg-toggle orderId_down\" id=\"decending\" aria-hidden=\"true\"></i>\n  </div>\n  <!-- <div (click)='sort(\"serviceType\")' class=\"title d-flex\" id=\"orderId\">\n    Service Type\n\n    <i class=\"fa fa-chevron-up trg-toggle orderId_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n    <i class=\"fa fa-chevron-down trg-toggle orderId_down\" id=\"decending\" aria-hidden=\"true\"></i>\n\n\n  </div> -->\n  <div (click)='sort(\"orderType\")' class=\"title d-flex col\" id=\"orderId\">\n    Order Type\n    <i class=\"fa fa-chevron-up trg-toggle orderId_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n    <i class=\"fa fa-chevron-down trg-toggle orderId_down\" id=\"decending\" aria-hidden=\"true\"></i>\n\n  </div>\n  <div class=\"title d-flex col\" id=\"orderId\">\n    Created By\n    <i class=\"fa fa-chevron-up trg-toggle orderId_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n    <i class=\"fa fa-chevron-down trg-toggle orderId_down\" id=\"decending\" aria-hidden=\"true\"></i>\n  </div>\n  <div (click)='sort(\"createdTime\")' class=\"title d-flex col\" id=\"orderId\">\n    Created Time\n\n    <i class=\"fa fa-chevron-up trg-toggle orderId_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n    <i class=\"fa fa-chevron-down trg-toggle orderId_down\" id=\"decending\" aria-hidden=\"true\"></i>\n\n\n  </div>\n  <!-- <div (click)='sort(\"scheduleTime\")' class=\"title d-flex col\" id=\"orderId\">\n    Scheduled Time\n\n    <i class=\"fa fa-chevron-up trg-toggle orderId_up\" id=\"ascending\" aria-hidden=\"true\"></i>\n    <i class=\"fa fa-chevron-down trg-toggle orderId_down\" id=\"decending\" aria-hidden=\"true\"></i>\n\n\n  </div> -->\n    <div class=\"col\">\n      Status\n    </div>\n    <div class=\"col\">\n        Action\n    </div>\n</div>\n<div id=\"accordion-scheduler-list\">\n  <div *ngFor=\"let schedule of pageOfItems; let i = index;\" class=\"card\">\n    <div class=\"card-header\" id=\"schedule{{i}}\">\n        <div class=\"card-headings d-flex row\" data-toggle=\"collapse\" [attr.data-target]=\"'#collapse_view_'+i\"\n        aria-expanded=\"false\" (click)=\"viewScheduledJob(schedule.schedulerId,i)\" [attr.aria-controls]=\"'collapse_view_'+i\" [attr.disabled]=\"schedule.jobStatus == 'Deleted'\">\n          <div class=\"col\">\n            {{schedule.schedulerId}}\n          </div>\n          <div class=\"col\">\n            {{schedule.jobname}}\n          </div>\n          <!-- <div>\n            {{schedule.serviceType?schedule.serviceType:'-'}}\n          </div> -->\n          <div class=\"col\">\n            {{schedule.orderType?schedule.orderType:'-'}}\n          </div>\n          <div class=\"col\">\n            {{schedule.schedulerCreatedBy}}\n          </div>\n          <div class=\"col\">\n            {{schedule.jobCreatedAt | date:\"dd/MM/yyyy HH:mm\"}}\n          </div>\n          <!-- <div class=\"col\" *ngIf=\"schedule.nextRun && schedule.nextRun!='N/A' && schedule.nextRun!='Inactive' && schedule.nextRun!='null'\" >\n            {{schedule.nextRun | date:\"dd/MM/yyyy HH:mm\"}}\n          </div> -->\n          <!-- <div class=\"col\" *ngIf=\"!schedule.nextRun || schedule.nextRun=='N/A' || schedule.nextRun=='Inactive' || schedule.nextRun=='null'\">-</div> -->\n          <!-- <div *ngIf=\"schedule.jobStatus!='Deleted'\" class=\"text-center\">\n            <label class=\"switch\">\n                <input type=\"checkbox\" id=\"status_{{i}}\" [checked]=\"schedule.jobStatus=='Active'\" (change)=\"changeStatus($event, schedule.schedulerId)\">\n                <span class=\"slider\"></span>\n            </label>\n          </div> -->\n          <div class=\"col\">\n            {{schedule.jobStatus}}\n          </div>\n          <div class=\"action col\">\n              <label *ngIf=\"schedule.jobStatus!='Deleted'\" class=\"switch mr-3\">\n                <input type=\"checkbox\" id=\"status_{{i}}\" [checked]=\"schedule.jobStatus=='Active'\" (change)=\"changeStatus($event, schedule.schedulerId,i)\">\n                <span class=\"slider\"></span>\n              </label>\n              <i *ngIf=\"schedule.jobStatus!='Deleted'\" class=\"fa fa-trash-o text-danger mr-3\" aria-hidden=\"true\" (click)=\"deleteScheduler(schedule.schedulerId)\"></i>\n              <i *ngIf=\"schedule.jobStatus!='Deleted'\" class=\"fa fa-pencil-square-o text-warning \" aria-hidden=\"true\" data-toggle=\"collapse\" [attr.data-target]=\"'#collapse_update_'+i\"\n              aria-expanded=\"false\" [attr.aria-controls]=\"'collapse_update_'+i\" (click)=\"scheduleEdit(schedule.schedulerId,i)\"></i>\n\n          </div>\n        </div>\n    </div>\n    <div *ngIf=\"toggle\" id=\"collapse_view_{{i}}\" class=\"collapse\" aria-labelledby=\"schedule_view\" data-parent=\"#accordion-scheduler-list\">\n      <div class=\"card-body p-0\">\n        <app-scheduled-job-view *ngIf=\"suitDetails\" [suitDetails]=\"suitDetails\"></app-scheduled-job-view>\n      </div>\n    </div>\n    <div id=\"collapse_update_{{i}}\" class=\"collapse\" aria-labelledby=\"schedule\" data-parent=\"#accordion-scheduler-list\">\n      <div class=\"card-body p-0\">\n        <app-scheduled-job-edit *ngIf=\"schedularDetails && activeId == i\" [activeId]=\"activeId\" [schedularDetails]=\"schedularDetails\" [index]=\"i\"></app-scheduled-job-edit>\n      </div>\n    </div>\n  </div>\n  <div class=\"card-footer pb-0 pt-3\">\n    <jw-pagination [items]=\"scheduledOrderList\" (changePage)=\"onChangePage($event)\" [pageSize]=\"pageSize\"></jw-pagination>\n</div>\n</div>\n","import { Component, OnInit, Input, OnChanges, SimpleChange } from '@angular/core';\n\nimport { DatePipe } from '@angular/common';\n@Component({\n  selector: 'app-scheduled-job-view',\n  templateUrl: './scheduled-job-view.component.html',\n  styleUrls: ['./scheduled-job-view.component.scss']\n})\nexport class ScheduledJobViewComponent implements OnInit {\n  @Input() suitDetails: any;\n  public selectedBot :any\n  inputtext:any\n \n  pipe = new DatePipe('en-US');\n\ncronExecationarray=[]\n  constructor( ) {\n     \n   }\n   \n  ngOnInit(): void {\n     \n     \n \n\n\n  }\n\n\n  ngOnChanges(changes:SimpleChange)\n   {\n      // console.log(this.suitDetails);\n//       var currentValue=changes['suitDetails']['currentValue']\n//  console.log(\"ch\",changes['suitDetails']['currentValue'])\n//       console.log(\"thisbot\",this.selectedBot)\nthis.cronExecationarray=[]\n      //    console.log('datearray',this.suitDetails.cronNextExecutionDates);\n         this.selectedBot=this.suitDetails.botInfo.suiteDetails[0].botDetails[0]\nif(this.suitDetails.hasOwnProperty('cronNextExecutionDates'))\n  {\n   this.suitDetails.cronNextExecutionDates.forEach(element => {\n      var changedate=this.pipe.transform(element,\"dd/MM/yyyy HH:mm\")\n      //var changedate=moment(element).format(\"dd/MM/yyyy HH:mm\")\n      this.cronExecationarray.push(changedate)\n    });\n  }\n    //  console.log(\"datenewarray\",this.cronExecationarray)    \n \n   }\n \n  \n  getBotDetailsView(bot) {\n    this.selectedBot=''\n  \n    \n    \n    this.selectedBot = bot;\n  }\n  \n}\n","<div *ngIf=\"suitDetails\" >\n    <div class=\"schdular-info\"   >\n        <table class=\"m-0\"  >\n            <tbody> \n                <tr>\n                    <td>\n                        <div class=\"field-name\">Next Scheduled Time</div>\n                        <div class=\"field-value\">{{suitDetails.nextRun | date:\"dd/MM/yyyy HH:mm\"}}</div>\n                    </td>\n                    <td rowspan=\"2\">\n                        \n                        <div class=\"field-name\">Job Next Execution Dates</div>\n                        <div class=\"field-value\" style=\"white-space: pre-wrap;\"> \n                            {{cronExecationarray.join('\\n') }}\n                          </div>\n                    </td>\n                    <td>\n                        <div class=\"field-name\">Job Description</div>\n                        <div class=\"field-value\"> {{suitDetails.cronDescription }}</div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div class=\"field-name\">Job Last Modified</div>\n                        <div class=\"field-value\"> {{suitDetails.modifiedDate | date:\"dd/MM/yyyy HH:mm\"}}</div>\n                    </td>\n                    <td>\n                        <div class=\"field-name\">Job Last Modified By</div>\n                        <div class=\"field-value\"> {{suitDetails.jobModifiedBy}}</div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div *ngIf=\"suitDetails.botInfo.suiteDetails.length>0\" class=\"row\">\n        <div class=\"col-md-3 pr-0\">\n            <div class=\"list-group bots-display\">\n                <div class=\"title d-flex\">Catalogue\n                </div>\n                <div class=\"bot-section\">\n                    <ng-container *ngFor=\"let suite of suitDetails.botInfo.suiteDetails; let idx = index\">\n                        <a href='#Suit-{{idx}}' class=\"list-group-item collapse expandSuit\" data-toggle=\"collapse\"\n                            aria-expanded=\"true\">\n                            <i class=\"fa fa-caret-down mr-1\" aria-hidden=\"true\"></i><i\n                                class=\"fa fa-caret-up mr-1\" aria-hidden=\"true\"></i>\n                            <i class=\"fa fa-file-archive-o mr-1\" aria-hidden=\"true\"></i>{{suite.suiteName}}\n                        </a>\n                        <div class=\"list-group list-bots ml-3 collapse expandBot show\" id=\"Suit-{{idx}}\">\n                            <a *ngFor=\"let bot of suite.botDetails; let idx = index\"\n                                class=\"list-group-item d-flex\">\n                                <div *ngIf=\"bot.status=='FAIL'\"\n                                    class=\"btn filter-indicator-xs bot-indicator failed\"></div>\n                                <div *ngIf=\"bot.status=='PASS'\"\n                                    class=\"btn filter-indicator-xs bot-indicator completed\"></div>\n                                <div *ngIf=\"bot.status!='PASS' && bot.status!='FAIL'\"\n                                    class=\"btn filter-indicator-xs bot-indicator in-progress\"></div>\n                                <div class=\"cut-text\"  (click)=\"getBotDetailsView(bot)\">{{bot.botName}}</div>\n                            </a>\n                        </div>\n                    </ng-container>\n\n                </div>\n\n            </div>\n        </div>\n        <div class=\"col-md-9 pl-0\">\n            <div class=\"bot-details\">\n                <div *ngIf=\"selectedBot\">\n                    <div class=\"title\">\n                        {{selectedBot.botName}}\n                    </div>\n                    <div class=\"bot-details-body\">\n                       <pre> {{selectedBot.input | json}}</pre>\n                    </div>\n                </div>\n            </div>            \n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from '../../service/login.service';\nimport { IntakeService } from '../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <div class=\"dashboard-menu\">\n        <ul class=\"nav nav-pills\" role=\"tablist\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link active\" id=\"first-tab\" data-toggle=\"pill\" href=\"#productivity-dashboard\"><img src=\"./assets/images/productivity-icon.png\" alt=\"\" width=\"25px\" height=\"25px\"><span>Productivity</span></a>\n            </li>\n        </ul>\n    </div> \n    <div class=\"tab-content\">\n        <div class=\"tab-pane fade show active\">\n            <app-productivity-dashboard></app-productivity-dashboard>\n        </div> \n    </div>   \n\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from './../../../../environments/environment';\nimport { IntakeService } from '../../../service/intake.service';\n\n@Component({\n  selector: 'app-productivity-dashboard',\n  templateUrl: './productivity-dashboard.component.html',\n  styleUrls: ['./productivity-dashboard.component.scss']\n})\nexport class ProductivityDashboardComponent implements OnInit {\n  public userDashboardStart = environment.userDashboardStart;\n  public userDashboardEnd = environment.userDashboardEnd;\n  public adminUserDashboard = environment.adminUserDashboard;\n  public deptDashboardStart = environment.deptDashboardStart;\n  public deptDashboardEnd = environment.deptDashboardEnd;\n  public adminDeptDashboard = environment.adminDeptDashboard;\n  public executiveDashboardStart = environment.executiveDashboardStart;\n  public executiveDashboardEnd = environment.executiveDashboardEnd;\n  public adminExecutiveDashboard = environment.adminExecutiveDashboard;\n  // public deptDashboard = environment.deptDashboard;\n  // public executiveDashboard = environment.executiveDashboard;\n  menuList: any;\n  dashboardUser = false;\n  dashboardExecutive = false;\n  dashboardDept = false;\n  adminFlag = false;\n  approverFlag=false;\n  roles: any;\n  user: any;\n  userRoleMapping: any;\n  deptFlag = false;\n  execFlag = false;\n  userFlag = false;\n\n  constructor(private intakeService: IntakeService) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.menuList = JSON.parse(localStorage.getItem('MENU'));\n    this.menuList = this.menuList.filter(item => item.mainMenu.menuName === 'Dashboard');\n    this.menuList = this.menuList[0].subMenu;\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    this.intakeService.getUserRoleMapping(this.user.id).subscribe(\n      val6 => {\n        this.userRoleMapping = val6;\n      });\n    let r = this.roles.filter(item => item.rolePermission.permission === 'Admin');\n    if (r.length > 0) {\n      this.adminFlag = true;\n    }\n    let k = this.roles.filter(item => item.rolePermission.permission === 'Approver');\n    if (k.length > 0) {\n      this.approverFlag = true;\n    }\n    let j = this.menuList.filter(item => item.menuName === 'User Dashboard');\n    if (j.length > 0) {\n      this.dashboardUser = true;\n      setTimeout(function () {\n        if (this.adminFlag) {\n          (<HTMLIFrameElement>document.getElementById('userDashboard')).src = this.adminUserDashboard;\n        } else {\n           let link = this.userDashboardStart + \"query:(language:kuery,query:' user_name.keyword : \"  + this.user.name;\n          if (this.userRoleMapping.departmentHead) {\n            link =link +\" or department_head.keyword : \" + this.user.name;\n            this.userFlag = true;\n          }\n          if (this.userRoleMapping.subDepartmentHead) {\n            link = link + \" or sub_department_head.keyword : \" + this.user.name;\n            this.userFlag = true;\n          }\n          if (this.userRoleMapping.businessUnitHead) {\n            link = link + \" or business_head.keyword : \" + this.user.name;\n            this.userFlag = true;\n          }\n          if (this.userRoleMapping.subBusinessUnitHead) {\n            link = link + \" or sub_business_head.keyword : \" + this.user.name;\n            this.userFlag = true;\n          }\n          if (this.userRoleMapping.subDepartments && this.userRoleMapping.subDepartments !== null) {\n            this.userRoleMapping.subDepartments.forEach((element, index) => {\n              let encodedValue = encodeURIComponent(\"\\\"\"+element.teamName+\"\\\"\")\n              link = link + \" or sub_department.keyword : \" + encodedValue;\n\n\n                //link = link + \" or sub_department.keyword : \" + element.teamName;\n            });\n          }\n          \n          link = link + \"'),\" + this.userDashboardEnd;\n          // let link = this.userDashboardStart + \"query:(language:kuery,query:'not Idea_name.keyword : Custom KPI and not Idea_name.keyword : Docsis Upstream Combiner Service Impairment Detection and not Idea_name.keyword : Jira testing and  user_name.keyword : \" + this.user.name + \" '),\" + this.userDashboardEnd;\n          (<HTMLIFrameElement>document.getElementById('userDashboard')).src = link\n        }\n        \n      }.bind(this), 1000);\n    }\n    j = this.menuList.filter(item => item.menuName === 'Dept Dashboard');\n    if (j.length > 0) {\n      this.dashboardDept = true;\n      setTimeout(function () {\n        // (<HTMLIFrameElement>document.getElementById('deptDashboard')).src = this.deptDashboard;\n        if (this.adminFlag || this.approverFlag) {\n          (<HTMLIFrameElement>document.getElementById('deptDashboard')).src = this.adminDeptDashboard;\n        } else {\n          let link = this.deptDashboardStart + \"query:(language:kuery,query:'\"\n          if (this.userRoleMapping.departmentHead) {\n            link = link + \"department_head.keyword : \" + this.user.name;\n            this.deptFlag = true;\n          }\n          if (this.userRoleMapping.subDepartmentHead) {\n            if(this.deptFlag){\n              link = link + \" or \";\n            }\n            link = link + \"sub_department_head.keyword : \" + this.user.name;\n            this.deptFlag = true;\n          }\n          if (this.userRoleMapping.businessUnitHead) {\n            if(this.deptFlag){\n              link = link + \" or \";\n            }\n            link = link + \"business_head.keyword : \" + this.user.name;\n            this.deptFlag = true;\n          }\n          if (this.userRoleMapping.subBusinessUnitHead) {\n            if(this.deptFlag){\n              link = link + \" or \";\n            }\n            link = link + \"sub_business_head.keyword : \" + this.user.name;\n            this.deptFlag = true;\n          }\n          link = link + \"'),\" + this.deptDashboardEnd;\n          // let link = this.deptDashboardStart + \"query:(language:kuery,query:'not Idea_name.keyword : Custom KPI and not Idea_name.keyword : Docsis Upstream Combiner Service Impairment Detection and not Idea_name.keyword : Jira testing and  user_name.keyword : \" + this.user.name + \" '),\" + this.deptDashboardEnd;\n          (<HTMLIFrameElement>document.getElementById('deptDashboard')).src = link\n        }\n      }.bind(this), 1000);\n    }\n    j = this.menuList.filter(item => item.menuName === 'Executive Dashboard');\n    if (j.length > 0) {\n      this.dashboardExecutive = true;\n      setTimeout(function () {\n        // (<HTMLIFrameElement>document.getElementById('executiveDashboard')).src = this.executiveDashboard;\n        if (this.adminFlag || this.approverFlag) {\n          (<HTMLIFrameElement>document.getElementById('executiveDashboard')).src = this.adminExecutiveDashboard;\n        } else {\n          let link = this.executiveDashboardStart + \"query:(language:kuery,query:'\"\n          if (this.userRoleMapping.departmentHead) {\n            link = link + \"department_head.keyword : \" + this.user.name;\n            this.execFlag = true;\n          }\n          if (this.userRoleMapping.subDepartmentHead) {\n            if(this.execFlag){\n              link = link + \" or \";\n            }\n            link = link + \"sub_department_head.keyword : \" + this.user.name;\n            this.execFlag = true;\n          }\n          if (this.userRoleMapping.businessUnitHead) {\n            if(this.execFlag){\n              link = link + \" or \";\n            }\n            link = link + \"business_head.keyword : \" + this.user.name;\n            this.execFlag = true;\n          }\n          if (this.userRoleMapping.subBusinessUnitHead) {\n            if(this.execFlag){\n              link = link + \" or \";\n            }\n            link = link + \"sub_business_head.keyword : \" + this.user.name;\n            this.execFlag = true;\n          }\n          link = link + \"'),\" + this.executiveDashboardEnd;\n          // let link = this.executiveDashboardStart + \"query:(language:kuery,query:'not Idea_name.keyword : Custom KPI and not Idea_name.keyword : Docsis Upstream Combiner Service Impairment Detection and not Idea_name.keyword : Jira testing and  user_name.keyword : \" + this.user.name + \" '),\" + this.executiveDashboardEnd;\n          (<HTMLIFrameElement>document.getElementById('executiveDashboard')).src = link\n        }\n      }.bind(this), 1000);\n    }\n  }\n\n}\n","  <div class=\"dashboard-Iframe\">\n    <nav>\n      <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n        <a *ngIf=\"dashboardUser\" class=\"nav-item nav-link active\" id=\"nav-user-tab\" data-toggle=\"tab\" href=\"#nav-user\" role=\"tab\"\n          aria-controls=\"nav-user\" aria-selected=\"true\">User Dashboard</a>\n        <a *ngIf=\"dashboardDept\" class=\"nav-item nav-link\" id=\"nav-dh-tab\" data-toggle=\"tab\" href=\"#nav-dh\" role=\"tab\"\n          aria-controls=\"nav-dh\" aria-selected=\"false\">Dept Dashboard</a>\n        <a *ngIf=\"dashboardExecutive\" class=\"nav-item nav-link\" id=\"nav-executive-tab\" data-toggle=\"tab\" href=\"#nav-executive\" role=\"tab\"\n          aria-controls=\"nav-executive\" aria-selected=\"false\">Executive Dashboard</a>\n      </div>\n    </nav>\n    <div class=\"tab-content\" id=\"nav-tabContent\">\n      <div *ngIf=\"dashboardUser\" class=\"tab-pane fade show active\" id=\"nav-user\" role=\"tabpanel\" aria-labelledby=\"nav-user-tab\">\n        <iframe id=\"userDashboard\" height=\"600\" width=\"100%\"></iframe>\n      </div>\n      <div *ngIf=\"dashboardDept\" class=\"tab-pane fade\" id=\"nav-dh\" role=\"tabpanel\" aria-labelledby=\"nav-dh-tab\">\n        <iframe id=\"deptDashboard\" height=\"600\" width=\"100%\"></iframe>\n      </div>\n      <div *ngIf=\"dashboardExecutive\" class=\"tab-pane fade\" id=\"nav-executive\" role=\"tabpanel\" aria-labelledby=\"nav-executive-tab\">\n        <iframe id=\"executiveDashboard\" height=\"600\" width=\"100%\"></iframe>\n      </div>\n    </div>\n  </div>","import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../../service/login.service';\nimport { IntakeService } from './../../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-automated',\n  templateUrl: './automated.component.html',\n  styleUrls: ['./automated.component.scss'],\n  providers: [DatePipe]\n})\nexport class AutomatedComponent implements OnInit {\n  @Input() intakes: any;\n  editData: any;\n  index: any;\n  viewData: any;\n  viewindex: any;\n  alertindex: any;\n  public message: any;\n  public alertMessage: any = [];\n  public alertdata = false;\n  user: any;\n  roles: any;\n  approverFlag = false;\n  public automationForm: any;\n  public suitIndex: any;\n  public botLoop: any;\n  public orderType:any;\n  public serviceType:any;\n  public configType:any;\n  public submitted:any;\n  public automate:any;\n  public readWriteFlag = false;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    // console.log(this.intakes.team.ldapRole.roleId);\n    let j = this.roles.filter(item => item.rolePermission.permission === 'Approver');\n    if (j.length > 0) {\n      this.approverFlag = true;\n    }\n    \n    setTimeout(function () {\n      this.intakes.forEach(element => {\n        if(element.team.ldapRole!= null){\n          let k = this.roles.filter(item => item.roleId === element.team.ldapRole.roleId);\n            if (k.length > 0) {\n            element.automateFlag = true;\n          }\n        }\n      });\n    }.bind(this), 5000); \n    \n  }\n\n  checkRoleId(event){\n    // console.log(event);\n    // console.log(this.roles);\n    if(event.team.ldapRole !=null){\n      let k = this.roles.filter(item => item.roleId === event);\n      if (k.length > 0) {\n      this.readWriteFlag = true;\n    }\n    }\n    \n    // console.log(this.readWriteFlag);\n  }\n  uncheckRole(){\n    this.readWriteFlag = false;\n    // console.log(this.readWriteFlag);\n  }\n\n  editIntake(intake, index) {\n    // console.log(intake);\n    this.editData = intake;\n    this.index = index;\n  }\n\n  viewIntake(intake, index) {\n    this.viewData = intake;\n    this.viewindex = index;\n  }\n\n  deleteIntake(intake, index) {\n    this.alertindex = index;\n    this.intakeService.deleteIntake(intake.intakeId).subscribe(\n      val => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"success\", \"close\": true,\n          \"content\": \"Intake deleted successfully\",\n        }];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n      },\n      error => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>Failed</strong> to delete intake\",\n        }\n        ];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n      });\n  }\n\n  automateIntake(intake, index) {\n    this.automate = intake;\n    this.alertindex = index;\n    let automate = {\n      intakeId: intake.intakeId,\n    };\n  }\n\n  // automateIntake(intake, index) {\n  //   this.alertindex = index;\n  //   let automate = {\n  //     intakeId: intake.intakeId,\n  //   };\n\n  //   this.intakeService.automateIntake(automate).subscribe(\n  //     val => {\n  //       let maildata = {\n  //         mailContent: '<b>' + intake.ideaName + '</b> has been automated by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n  //         to: '',\n  //         cc: '',\n  //         Bcc: '',\n  //         testingRecipients: {\n  //           to: this.user.email + ',' + intake.createdby.email,\n  //           cc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com',\n  //           Bcc: ''\n  //         },\n  //         subject: 'INTAKE-Automated'\n  //       };\n  //       this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n  //         val1 => {\n  //           this.message = val1;\n  //           if (this.message.response == 'Mail Sent Successfully') {\n  //             this.alertdata = true;\n  //             this.alertMessage = [{\n  //               \"type\": \"success\", \"close\": true,\n  //               \"content\": \"Intake automated successfully\",\n  //             }];\n  //             setTimeout(function () {\n  //               this.alertdata = false;\n  //               window.location.reload();\n  //             }.bind(this), 1000);\n  //           } else {\n  //             this.alertdata = true;\n  //             this.alertMessage = [{\n  //               \"type\": \"danger\", \"close\": true,\n  //               \"content\": \"<strong>Failed</strong> to send mail\",\n  //             }\n  //             ];\n  //             setTimeout(function () {\n  //               this.alertdata = false;\n  //               window.location.reload();\n  //             }.bind(this), 1000);\n  //           }\n  //         });\n  //     });\n  // }\n\n}\n","<div class=\"row\">\n    <div *ngFor=\"let intake of intakes; let i = index\" class=\"col-md-3\">\n        <div class=\"card\">\n            <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata && i==alertindex\"></app-alert>\n            <div class=\"card-body\">\n                <div *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"pos-absolute filter-indicator-small in-progress\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='PENDING'\" class=\"pos-absolute filter-indicator-small yet-to-start\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='APPROVED'\" class=\"pos-absolute filter-indicator-small completed\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='REJECTED'\" class=\"pos-absolute filter-indicator-small rejected\">\n                </div>\n                <div class=\"card-content\">\n                    <div class=\"d-flex px-2 mb-3\">\n                        <div class=\"img-container\"></div>\n                        <div class=\"description\">\n                            <div class=\"card-title\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-view-' + i\"\n                                (click)=\"viewIntake(intake,i)\">\n                                {{intake.ideaName}}</div>\n                            <p class=\"card-text\">by {{intake.createdby.name}}</p>\n                            <div class=\"card-upadted-time\">Updated on {{intake.modifieddate | date:\"dd/MM/yyyy\"}}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"card-body slidder-card\">\n                        <div class=\"card-thumnail\">\n                            <div class=\"pos-abs\">\n                                <div class=\"filter-indicator-small completed\"></div>\n                                <div *ngIf=\"intake.automateFlag\"\n                                    class=\"approval-text in-progress-opaque trgslide\" (click)=\"automateIntake(intake, i)\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-automate-' + i\">Automate\n                                </div>\n                            </div>\n                            <img src=\"./assets/images/thumnail-hover.jpg\" class=\"w-100 h-100\">\n                        </div>\n                        <div class=\"card-content inner-card-content mt-0\">\n                            <div class=\"card-title-inner\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-view-' + i\"\n                                (click)=\"viewIntake(intake,i)\">\n                                {{intake.ideaName}}</div>\n                            <p class=\"card-text-inner mt-1\">by {{intake.createdby.name}}</p>\n                            <div class=\"inner-card-upadted-time\">Updated on\n                                {{intake.modifieddate | date:\"dd/MM/yyyy\"}}\n                            </div>\n                            <div class=\"inner-description\">{{intake.ideaDescription}}</div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"card-bottom\">\n                        <div class=\"comments mr-auto\">\n                            <!-- <i class=\"fa fa-heart mr-2 mt-3\" aria-hidden=\"true\"></i> -->\n                            <i *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"fa fa-trash mr-2\" id=\"intake-delete-{{i}}\"\n                                (click)=\"deleteIntake(intake, i)\" aria-hidden=\"true\"></i>\n                            <i *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"fa fa-pencil-square-o mr-3\"\n                                data-toggle=\"modal\" [attr.data-target]=\"'#intake-edit-' + i\"\n                                (click)=\"editIntake(intake,i)\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"currency d-flex\">\n                            <div>\n                                <span class=\"value-dollar d-block\">${{intake.rfEffort.revenueFormatted}}</span>\n                                <span class=\"value-description\">Total savings in a Year</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngFor=\"let intake of intakes; let i = index\">\n    <div *ngIf=\"editData && index==i\" class=\"modal fade\" id=\"intake-edit-{{i}}\" tabindex=\"-1\" role=\"dialog\"\n        aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <app-intake-edit [intakeData]=\"editData\"></app-intake-edit>\n        </div>\n    </div>\n    <!-- <div *ngIf=\"viewData && viewindex==i\" class=\"overlay slider-wrap intake-view-{{i}}\">\n      <app-intake-view [intakeData]=\"viewData\"></app-intake-view>\n    </div> -->\n    <div *ngIf=\"viewData && viewindex==i\" class=\"modal fade\" id=\"intake-view-{{i}}\" tabindex=\"-1\" role=\"dialog\"\n        aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <app-intake-view [intakeData]=\"viewData\"></app-intake-view>\n        </div>\n    </div>\n    <div class=\"modal fade\" data-backdrop=\"static\" data-keyboard=\"false\" id=\"intake-automate-{{i}}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"ModalLongTitle\"\n            aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n            <app-automation-intake-form [intakeData]=\"automate\"></app-automation-intake-form>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../../../service/login.service';\nimport { IntakeService } from './../../../../service/intake.service';\nimport { AutomationFactoryService } from 'src/app/service/automation-factory.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-automation-intake-form',\n  templateUrl: './automation-intake-form.component.html',\n  styleUrls: ['./automation-intake-form.component.scss']\n})\nexport class AutomationIntakeFormComponent implements OnInit {\n  @Input() intakeData: any;\n  editData: any;\n  index: any;\n  viewData: any;\n  viewindex: any;\n  alertindex: any;\n  public message: any;\n  public alertMessage: any = [];\n  public alertdata = false;\n  user: any;\n  roles: any;\n  approverFlag = false;\n  public automationForm: any;\n  public suitIndex: any;\n  public botLoop: any;\n  public orderType:any;\n  public serviceType:any;\n  // public configType:any;\n  public submitted:any;\n  // public costWeitage:any;\n  public hideCostWeitage: boolean;\n  public costWeitage = [];\n  public automateEditform:any;\n  public automate:any;\n  public errorAlert:any;\n  public errorValue:any;\n  public roleByPermission:any;\n  public enterdCostSum:any;\n  public isJsonError = false;\n  public restrictSuite = false;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router,\n    private automationService: AutomationFactoryService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.restrictSuite = false;\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    let j = this.roles.filter(item => item.rolePermission.permission === 'Approver');\n    if (j.length > 0) {\n      this.approverFlag = true;\n    }\n    this.costWeitage = [];\n    this.errorValue = 0 ;\n    this.hideCostWeitage = false;\n    this.errorAlert = false;\n    this.isJsonError = false;\n    this.enterdCostSum = 0;\n    this.automationForm = this.formBuilder.group({\n      role: [''],\n      orderType: ['', Validators.required],\n      botcatalogue: this.formBuilder.array([\n      ]),\n    });\n\n    /*****Get Order Type*******/\n    this.automationService.getOrderType().subscribe(val => {\n      this.orderType = val;\n    }, error => {\n\n    });\n\n    /*******Get role by ID********/\n    // this.intakeService.getRoleByPermission(2).subscribe(val =>{\n    //   this.roleByPermission = val;\n    //   console.log(this.roleByPermission);\n    // });\n  }\n\n  /*********Get form control********/\n  get v() {\n    return this.automationForm.controls;\n  }\n  get w(){\n\n    return this.automationForm.controls.botcatalogue.controls;\n  }\n\n  /*******Get Service type from Order Type********/\n  // getServiceType(event: any) {\n  //   if (event == '') {\n  //     this.serviceType = [];\n  //     this.automationForm.patchValue({\n\n  //     });\n  //   } else {\n  //     this.orderType.forEach(element => {\n  //       if (element.orderType == event) {\n  //         this.serviceType = element.serviceType;\n  //       }\n  //     });\n  //   }\n  // }\n\n  /*************Dynamic Form Array ADD and REMOVE*****************/\n  botcatalogue(): FormArray {\n    return this.automationForm.get(\"botcatalogue\") as FormArray\n  }\n\n  newSuite(): FormGroup {\n    return this.formBuilder.group({\n      suiteName: ['', Validators.required],\n      // configType: ['', Validators.required],\n      botDetailsList: this.formBuilder.array([\n      ]),\n    })\n  }\n\n  addSuit() {\n    console.log(this.intakeData);\n    this.restrictSuite = true;\n    this.botcatalogue().push(this.newSuite());\n  }\n\n  removeSuite(suitIndex: number) {\n    this.botcatalogue().removeAt(suitIndex);\n    this.costWeitageCal(0,-1,suitIndex);\n  }\n\n  botDetails(suitIndex: number): FormArray {\n    return this.botcatalogue().at(suitIndex).get('botDetailsList') as FormArray;\n  }\n\n  newBot(): FormGroup {\n    return this.formBuilder.group({\n      botName: ['', Validators.required],\n      botweightage: [''],\n      // serviceType: ['', Validators.required],\n      botInput: ['', Validators.required],\n    })\n  }\n\n  addNewBot(suitIndex: number) {\n    this.botDetails(suitIndex).push(this.newBot());\n  }\n\n  removeBot(suitIndex: number, botIndex: number, intakeId) {\n    (<HTMLInputElement>document.getElementById('nav-bot-tab'+intakeId+suitIndex+'0')).className = \"nav-item nav-link automation-navlink active\";\n    (<HTMLInputElement>document.getElementById('bot'+intakeId+suitIndex+'0')).className = \"tab-pane fade active show\";\n    this.botDetails(suitIndex).removeAt(botIndex);\n    this.costWeitageCal(0,botIndex,suitIndex);\n  }\n\n  /*****Cost Weitage calculation*******/\n  costWeitageCal(event:number,botIndex:number,suitIndex:number){\n    if(botIndex == -1){\n      for(var k=0; k<this.costWeitage[suitIndex].length; k++){\n        this.costWeitage[suitIndex][k] = event;\n      }\n    }\n    for(var i=0; i<=suitIndex; i++){\n      if(!this.costWeitage[suitIndex]){\n        this.costWeitage[suitIndex]=[];\n      }\n      for(var j=0; j<=botIndex; j++){\n        this.costWeitage[suitIndex][botIndex] = event;\n      }\n      var sum = 0;\n      for (var i = 0; i < this.costWeitage.length; i++) {\n         for (var j = 0; j < this.costWeitage[i].length; j++) {\n          if(this.costWeitage[i][j]){\n            sum += Number(this.costWeitage[i][j]);\n          }\n        }\n      }\n    }\n    this.enterdCostSum = sum;\n    if(sum == 100){\n      this.hideCostWeitage = true;\n      this.errorValue = 0 ;\n      this.errorAlert = false;\n    }\n    else if(sum > 100){\n      this.hideCostWeitage = true;\n      this.errorAlert = true;\n      let diff = sum - 100;\n      this.errorValue = event - diff;\n    }\n    else{\n      this.errorValue = 0 ;\n      this.hideCostWeitage = false;\n      this.errorAlert = false;\n    }\n  }\n\n  automateIdea(intake,index) {\n    this.submitted = true;\n    this.alertindex = index;\n    if(this.automationForm.invalid || this.errorValue!=0 || this.enterdCostSum>100 || this.enterdCostSum == 0){\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"<strong>Kindly provide correct Automation Details</strong>\",\n      }\n      ];\n      setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n      return;\n    }else if(this.enterdCostSum<100){\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"<strong>Kindly provide 100% savings value!</strong>\",\n      }\n      ];\n      setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n      return;\n    }\n    else{\n      let pojo = {};\n      pojo['intakeId'] = intake.intakeId;\n      var suiteCatalogue = [];\n      for(var i=0; i<this.botcatalogue().controls.length; i++){\n      let suits={};\n      suits['orderType'] = this.automationForm.value.orderType;\n      suits['suiteName'] = this.botcatalogue().controls[i].value.suiteName;\n      // let role = {};\n      // role['roleId'] = Number(this.intakeData.team.ldapRole.roleId);\n      // suits['role'] = role;\n      suits['botCatalogue'] = [];\n      for(var j=0; j<this.botDetails(i).controls.length; j++){\n        let bot={};\n        bot['botName'] = this.botDetails(i).controls[j].value.botName;\n        bot['orderType'] = this.automationForm.value.orderType;\n        let val;\n        try{\n          val = JSON.parse(this.botDetails(i).controls[j].value.botInput);\n        } catch(e){\n          this.isJsonError = true;\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"Error while parsing JSON Input on <strong>\" + this.botDetails(i).controls[j].value.botName + \" </strong>\",\n              }];\n              setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n              return;\n        }\n        var input={};\n        input['input']=val;\n        bot['botInput'] = input;\n        if(this.botDetails(i).controls[j].value.botweightage){\n        bot['savingPercentage'] = this.botDetails(i).controls[j].value.botweightage;\n        }\n        else{\n          bot['savingPercentage'] = '0';\n        }\n        suits['botCatalogue'].push(bot);\n      }\n      suiteCatalogue.push(suits);\n      pojo['suiteCatalogues'] = suiteCatalogue;\n     }\n      console.log(pojo);\n      // pojo = JSON.stringify(pojo);\n      this.intakeService.automateIntake(pojo).subscribe(val=>{\n        let response: any = val;\n        if(response.message ==\"Intake Automated Successfully ,but Failed to update Dashboard!\" || response.message ==\"Intake Automated Successfully!\"){\n          this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"success\", \"close\": true,\n                \"content\": \"<strong>\"+response.message+\"</strong>\",\n              }];\n              setTimeout(function () {\n              this.alertdata = false;\n                this.resetform();\n                let element: HTMLElement = document.getElementById('btnModalClose') as HTMLElement;\n                element.click();\n                window.location.reload();\n              }.bind(this), 5000);\n        }else{\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": \"<strong>\"+response.message+\"</strong>\",\n          }];\n          setTimeout(function () {\n            this.alertdata = false;\n          }.bind(this), 5000);\n        }\n\n      }, error => {\n          let errorResponse = error;\n          if(errorResponse){\n            this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"<p>Failed To Create Automation Form</p>\",\n              }];\n              setTimeout(function () {\n                this.alertdata = false;\n              }.bind(this), 5000);\n          }\n      })\n    }\n  }\n\n  automateIntake(intake, index) {\n    this.automate = intake;\n    this.alertindex = index;\n    let automate = {\n      intakeId: intake.intakeId,\n    };\n    // this.intakeService.automateIntake(automate).subscribe(\n    //   val => {\n    //     let maildata = {\n    //       mailContent: '<b>' + intake.ideaName + '</b> has been automated by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n    //       to: '',\n    //       cc: '',\n    //       Bcc: '',\n    //       testingRecipients: {\n    //         to: this.user.email + ',' + intake.createdby.email,\n    //         cc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com',\n    //         Bcc: ''\n    //       },\n    //       subject: 'INTAKE-Automated'\n    //     };\n    //     this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n    //       val1 => {\n    //         this.message = val1;\n    //         if (this.message.response == 'Mail Sent Successfully') {\n    //           this.alertdata = true;\n    //           this.alertMessage = [{\n    //             \"type\": \"success\", \"close\": true,\n    //             \"content\": \"Intake automated successfully\",\n    //           }];\n    //           setTimeout(function () {\n    //             this.alertdata = false;\n    //             window.location.reload();\n    //           }.bind(this), 1000);\n    //         } else {\n    //           this.alertdata = true;\n    //           this.alertMessage = [{\n    //             \"type\": \"danger\", \"close\": true,\n    //             \"content\": \"<strong>Failed</strong> to send mail\",\n    //           }\n    //           ];\n    //           setTimeout(function () {\n    //             this.alertdata = false;\n    //             window.location.reload();\n    //           }.bind(this), 1000);\n    //         }\n    //       });\n    //   });\n  }\n\n  resetform(){\n    this.submitted = false;\n    this.automationForm.reset();\n    this.ngOnInit();\n  }\n\n}\n","<div class=\"modal-content\">\n    <div class=\"modal-header\">\n        <i class=\"fa fa-file mr-3\" aria-hidden=\"true\"></i>\n        <h5 class=\"modal-title\" id=\"ModalLongTitle\">Automation Form</h5>\n        <button type=\"button\" id=\"btnModalClose\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body automation-body\">\n        <form [formGroup]=\"automationForm\">\n            <div class=\"automation-title pr-3\">Basic Details</div>\n            <div class=\"form-row\">\n                <div class=\"form-group col-md-3\">\n                    <label for=\"\">Role Type</label>\n                    <input type=\"text\" class=\"form-control\"\n                    formControlName=\"role\" [ngClass]=\"{ 'is-invalid': submitted && v.role.errors }\" value=\"{{intakeData?.team.ldapRole.roleName}}\" disabled>\n                </div>\n                <div class=\"form-group col-md-3\">\n                    <label for=\"\">Order Type</label>\n                    <select class=\"custom-select\" formControlName=\"orderType\" \n                    [ngClass]=\"{ 'is-invalid': submitted && v.orderType.errors }\">\n                        <option selected value=\"\">Select</option>\n                        <option *ngFor=\"let item of orderType\" value=\"{{item.orderType}}\">{{item.orderType}}</option>\n                    </select>\n                    <div *ngIf=\"submitted && v.orderType.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"v.orderType.errors\">Order Type is required</div>\n                    </div>\n                </div> \n            </div> \n            <div class=\"d-flex\">\n                <div class=\"automation-title pr-3\">Bot Catalogue</div>\n                <i *ngIf=\"!this.restrictSuite\" class=\"fa fa-plus-circle automation-bot\" aria-hidden=\"true\"\n                (click)=\"addSuit()\"></i>\n                <div *ngIf=\"!this.restrictSuite\">Add new suite</div>\n            </div>\n            <div id=\"catalogueAccordion\" formArrayName=\"botcatalogue\">\n                <div *ngFor=\"let suits of botcatalogue().controls; let suitIndex = index\">\n                    <div class=\"mb-3\" [formGroupName]=\"suitIndex\">\n                        <div class=\"header\" id=\"suiteHeading{{suitIndex}}\">\n                            <div class=\"mb-0\">\n                                <button class=\"btn btn-link\" [ngClass]=\"{'collapsed': suitIndex != 0}\" data-toggle=\"collapse\" [attr.data-target]=\"'#suiteCollapse'+suitIndex\"\n                                    [attr.aria-expanded]=\"false\" [attr.aria-controls]=\"'suiteCollapse'+suitIndex\">\n                                    Suite-{{suitIndex + 1}}<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                                    aria-hidden=\"true\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <div id=\"suiteCollapse{{suitIndex}}\" class=\"catalogueDetails collapse show\" [attr.aria-labelledby]=\"'suiteHeading'+suitIndex\" [ngClass]=\"{'show': suitIndex == 0}\" data-parent=\"#catalogueAccordion\">\n                            <div class=\"card-body-collapse\">\n                                <div class=\"form-group col-md-6 p-0\">\n                                    <label for=\"suiteName\">Suite Name</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"suiteName\"\n                                    formControlName=\"suiteName\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndex].controls.suiteName.errors }\">\n                                    <div *ngIf=\"submitted && w[suitIndex].controls.suiteName.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"w[suitIndex].controls.suiteName.errors\">Suit Name is required</div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group col-md-6 p-0\">\n                                    <label for=\"configType\">Config Type</label>\n                                    <select class=\"custom-select\" formControlName=\"configType\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndex].controls.configType.errors }\">\n                                        <option selected value=\"\">Select</option>\n                                        <option selected value=\"\">Select</option>\n                                        <option value=\"CLI\">CLI</option>\n                                        <option value=\"Netconf\">Netconf </option>\n                                        <option value=\"SNMP\">SNMP </option>\n                                        <option value=\"RESTCONF\">RESTCONF </option>\n                                    </select> \n                                    <div *ngIf=\"submitted && w[suitIndex].controls.configType.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"w[suitIndex].controls.configType.errors\">Config Type is required</div>\n                                    </div>                     \n                                </div> -->\n                                <div class=\"d-flex\">\n                                    <div class=\"automation-title pr-3\">Bot Details</div>\n                                    <i class=\"fa fa-plus-circle automation-bot\" aria-hidden=\"true\"\n                                    (click)=\"addNewBot(suitIndex)\"></i>\n                                    <div>Add new bot details</div>\n                                </div>\n                                <div formArrayName=\"botDetailsList\">\n                                    <div>\n                                        <div>\n                                            <nav class=\"col-md-12 p-0\">\n                                                <div class=\"nav nav-tabs mb-0\" id=\"nav-tab\" role=\"tablist\">\n                                                    <a class=\"nav-item nav-link automation-navlink\" [ngClass]=\"{'active': botIndex == 0}\" *ngFor=\"let bots of botDetails(suitIndex).controls; let botIndex = index\"\n                                                    id=\"nav-bot-tab{{intakeData.intakeId}}{{suitIndex}}{{botIndex}}\" data-toggle=\"tab\" href=\"#bot{{intakeData.intakeId}}{{suitIndex}}{{botIndex}}\" role=\"tab\"\n                                                    aria-controls=\"nav-bot\" aria-selected=\"true\">bot{{botIndex + 1}}</a>\n                                                </div>\n                                            </nav>\n                                            <div class=\"col-md-12 p-0\">\n                                                <div class=\"tab-content automation-tab\" id=\"nav-tabContent\" *ngIf = \"botDetails(suitIndex).controls.length > 0\" >\n                                                    <div  *ngFor=\"let bots of botDetails(suitIndex).controls; let botIndex = index\" class=\"tab-pane fade\" [ngClass]=\"{'active show': botIndex == 0}\" id=\"bot{{intakeData.intakeId}}{{suitIndex}}{{botIndex}}\"\n                                                        role=\"tabpanel\" [attr.aria-labelledby]=\"'nav-bot-tab'+suitIndex+botIndex\">\n                                                        <div class=\"panel-body row px-3\" [formGroupName]=\"botIndex\">\n                                                            <div class=\"form-group col-md-4\">\n                                                                <label for=\"botName\">Bot Name</label>\n                                                                <input type=\"text\" class=\"form-control\" id=\"botName\"\n                                                                    formControlName=\"botName\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndex].controls.botDetailsList.controls[botIndex].controls.botName.errors}\">\n                                                                    <div *ngIf=\"submitted && w[suitIndex].controls.botDetailsList.controls[botIndex].controls.botName.errors\" class=\"invalid-feedback\">\n                                                                        <div *ngIf=\"w[suitIndex].controls.botDetailsList.controls[botIndex].controls.botName.errors\">Bot Name is required</div>\n                                                                    </div>\n                                                            </div>\n                                                            <div class=\"form-group col-md-4\" [hidden]=\"hideCostWeitage && w[suitIndex].controls.botDetailsList.controls[botIndex].value.botweightage == null\">\n                                                                <label for=\"weightage\">Savings Weightage(%)</label>\n                                                                <input type=\"number\" min=\"1\" max=\"100\" size=\"1\" maxlength=\"3\" value='0' [(ngModel)]=\"bots[botIndex]\" class=\"form-control\" id=\"weightage\" (change)=\"costWeitageCal($event.target.value,botIndex,suitIndex)\"\n                                                                    formControlName=\"botweightage\" [ngClass]=\"{ 'is-invalid': submitted && enterdCostSum == 0}\" >\n                                                                    <div *ngIf=\"submitted && enterdCostSum == 0\" class=\"invalid-error\">\n                                                                        Cost Weightage is required\n                                                                    </div>\n                                                                    <div *ngIf=\"errorAlert && hideCostWeitage\" class=\"invalid-error\">\n                                                                        Please enter the value less than or equal to \"{{errorValue}}\"!\n                                                                    </div>\n                                                            </div>\n                                                            <!-- <div class=\"form-group col-md-4\">\n                                                                <label for=\"serviceType\">Service Type</label>\n                                                                <select class=\"custom-select\" formControlName=\"serviceType\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndex].controls.botDetailsList.controls[botIndex].controls.serviceType.errors}\">\n                                                                    <option selected value=\"\">Select</option>\n                                                                    <option *ngFor=\"let item of serviceType\" value=\"{{item.serviceType}}\">{{item.serviceType}}</option>\n                                                                </select>\n                                                                <div *ngIf=\"submitted && w[suitIndex].controls.botDetailsList.controls[botIndex].controls.serviceType.errors\" class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"w[suitIndex].controls.botDetailsList.controls[botIndex].controls.serviceType.errors\">Service Type is required</div>\n                                                                </div>\n                                                            </div> -->\n                                                            <div class=\"form-group col-md-12\">\n                                                                <label for=\"botInput\">Bot Input</label>\n                                                                <textarea class=\"form-control\" id=\"botInput\" rows=\"16\"\n                                                                    formControlName=\"botInput\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndex].controls.botDetailsList.controls[botIndex].controls.botInput.errors}\"></textarea>\n                                                                <!-- <div *ngIf=\"submitted && w[suitIndex].controls.botDetailsList.controls[botIndex].controls.botInput.errors}\" class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"w[suitIndex].controls.botDetailsList.controls[botIndex].controls.botInput.errors}\">Bot Input is required</div>\n                                                                </div> -->\n                                                                <div *ngIf=\"submitted && w[suitIndex].controls.botDetailsList.controls[botIndex].controls.botInput.errors\" class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"w[suitIndex].controls.botDetailsList.controls[botIndex].controls.botInput.errors\">Bot input is required</div>\n                                                                </div>\n                                                            </div>\n                                                            \n                                                        </div>\n                                                        <div class=\"text-right\">\n                                                            <button type=\"submit\" class=\"btn bot-btn remove-bot\" (click)=\"removeBot(suitIndex,botIndex,intakeData.intakeId)\" *ngIf = \"botDetails(suitIndex).controls.length > 1\">Remove Bot</button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"text-right pt-3\">\n                                    <button type=\"submit\" class=\"btn bot-btn remove-bot\" (click)=\"removeSuite(suitIndex)\" *ngIf = \"botcatalogue().controls.length > 1\">Remove Suite</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata && intakeData.intakeId == alertindex\"></app-alert>\n    <div class=\"modal-footer automation-footer\">\n        <button type=\"button\" class=\"btn btn-secondary bot-btn\" data-dismiss=\"modal\" (click)=resetform()>Cancel</button>\n        <button type=\"submit\" class=\"btn btn-success submit-bot bot-btn\"\n            (click)=\"automateIdea(intakeData,intakeData.intakeId)\">Submit</button>\n    </div>\n</div>","import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../../service/login.service';\nimport { IntakeService } from './../../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-intake-all',\n  templateUrl: './intake-all.component.html',\n  styleUrls: ['./intake-all.component.scss'],\n  providers: [DatePipe]\n})\nexport class IntakeAllComponent implements OnInit {\n  @Input() intakes: any;\n  editData: any;\n  index: any;\n  viewData: any;\n  viewindex: any;\n  viewfield:boolean=false;\n  adminFlag:any=false;\n  public message: any;\n  public alertMessage: any = [];\n  commonApprover: any = {};\n  public alertdata = false;\n  alertIndex: any;\n  user: any;\n  roles: any;\n  approverFlag = false;\n  upadateJiraContent: any;\n  approvalMessage: any;\n  public automatedData:any;\n  public automatedIndex:any;\n  public readWriteFlag:any;\n  public automate:any;\n  public alertindex:any;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    this.intakeService.getcommonApprover().subscribe(\n      val => {\n        this.commonApprover = val;\n      });\n    let j = this.roles.filter(item => item.rolePermission.permission === 'Approver');\n    if (j.length > 0) {\n      this.approverFlag = true;\n    }\n    let k = this.roles.filter(item => item.rolePermission.permission === 'Admin');\n    if (k.length > 0) {\n      this.adminFlag = true;\n    }\n    let i = this.roles.filter(item => item.rolePermission.permission === 'Read Write');\n    if (i.length > 0) {\n      this.readWriteFlag = true;\n    }\n    \n    \n    setTimeout(function () {\n      this.intakes.forEach(element => {\n        if(element.team.ldapRole!= null){\n          let k = this.roles.filter(item => item.roleId === element.team.ldapRole.roleId);\n            if (k.length > 0) {\n            element.automateFlag = true;\n          }\n        }\n      });\n    }.bind(this), 5000); \n      // this.intakes.forEach(element => {\n      //   console.log(element);\n      //   if(element.team.ldapRole!= null){\n      //     console.log(element.team.ldapRole.roleId);\n      //     let k = this.roles.filter(item => item.roleId === element.team.ldapRole.roleId);\n      //       if (k.length > 0) {\n      //       element.automateFlag = true;\n      //       console.log(element.automateFlag);\n      //     }\n      //   }\n      // });\n    //   if(this.intakes.team.ldapRole !=null){\n    //   let k = this.roles.filter(item => item.roleId === this.intakes.team.ldapRole.roleId);\n    //   if (k.length > 0) {\n    //     this.readWriteFlag = true;\n    //     console.log(k);\n    //   }\n    // }\n    \n  }\n  \n  checkRoleIdAll(event){\n    // console.log(event);\n    // console.log(this.roles);\n    if(event.team.ldapRole !=null){\n      let k = this.roles.filter(item => item.roleId === event.team.ldapRole.roleId);\n    if (k.length > 0) {\n      this.readWriteFlag = true;\n    }\n    }\n    // console.log(this.readWriteFlag);\n  }\n  // uncheckRoleAll(){\n  //   this.readWriteFlag = false;\n  //   // console.log(this.readWriteFlag);\n  // }\n\n  editIntake(intake, index) {\n    // console.log(intake);\n    this.editData = intake;\n    this.index = index;\n  }\n\n  automateIntakeAll(intake, index){\n    this.automate = intake;\n    this.alertindex = index;\n    let automate = {\n      intakeId: intake.intakeId,\n    };\n  }\n\n  deleteIntake(intake, index) {\n    this.alertIndex = index;\n    this.intakeService.deleteIntake(intake.intakeId).subscribe(\n      val => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"success\", \"close\": true,\n          \"content\": \"Intake deleted successfully\",\n        }];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n      },\n      error => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>Failed</strong> to delete intake\",\n        }\n        ];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n      });\n  }\n\n  viewIntake(intake, index) {\n    this.viewData = intake;\n    this.viewindex = index;\n  }\n\n  approveIntake(intake, index) {\n    this.alertIndex = index;\n    let comment = (<HTMLSelectElement>document.getElementById(\"approverCommentsAll_\" + index)).value;\n    if (comment != '' && comment != undefined && comment.trim().length > 0){\n      this.viewfield=true\n      let approve = {\n        intakeId: intake.intakeId,\n        approver: {\n          id: this.user.id\n        },\n        approvercomments: (<HTMLSelectElement>document.getElementById(\"approverCommentsAll_\" + index)).value,\n        rfStatus: {\n          status: 'APPROVED'\n          // statusdesc: 'approved'\n        }\n      };\n  \n      this.intakeService.approveIntake(approve).subscribe(\n        val => {\n          this.approvalMessage = val;\n          let maildata = {\n            mailContent: '<b>' + intake.ideaName + '</b> has been approved by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n            to: '',\n            cc: '',\n            Bcc: '',\n            testingRecipients: {\n              to: intake.createdby.email,\n              cc: this.commonApprover.email.value + ',' + this.user.email,\n              Bcc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com'\n            },\n            subject: 'INTAKE-Approved'\n          };\n          if(this.approvalMessage.message  && this.approvalMessage.message.includes('failed') && this.approvalMessage.message.includes('Jira')) {\n            maildata.mailContent += '<br><br><span style=\"color:red;\"><b>Note:</b> Failed to update in Jira.</span>';\n          }\n          this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n            val1 => {\n              this.message = val1;\n              if(this.approvalMessage.message && this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": this.approvalMessage.message,\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else if (this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": \"Intake approved successfully\",\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"danger\", \"close\": true,\n                  \"content\": \"<strong>Failed</strong> to send mail\",\n                }\n                ];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              }\n            });\n        });\n    }else{\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"Kindly provide comments before Approval!\",\n      }\n      ];\n      setTimeout(function () {\n        this.alertdata = false;\n        //window.location.reload();\n      }.bind(this), 1000);\n    }\n   \n  }\n\n  rejectIntake(intake, index) {\n    this.alertIndex = index;\n    let comment = (<HTMLSelectElement>document.getElementById(\"approverComments_\" + index)).value;\n    console.log(\"commentapprovela\",comment)\n    if (comment != '' && comment != undefined && comment.trim().length > 0) {\n     this.viewfield=true\n      let reject = {\n        intakeId: intake.intakeId,\n        approver: {\n          id: this.user.id\n        },\n        approvercomments: (<HTMLSelectElement>document.getElementById(\"approverComments_\" + index)).value,\n        rfStatus: {\n          status: 'REJECTED'\n          // statusdesc: 'rejected'\n        }\n      };\n\n      this.intakeService.approveIntake(reject).subscribe(\n        val => {\n          this.approvalMessage = val;\n          let maildata = {\n            mailContent: '<b>' + intake.ideaName + '</b> has been rejected by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n            to: '',\n            cc: '',\n            Bcc: '',\n            testingRecipients: {\n              to: intake.createdby.email,\n              cc: this.commonApprover.email.value + ',' + this.user.email,\n              Bcc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com'\n            },\n            subject: 'INTAKE-Rejected'\n          };\n          if(this.approvalMessage.message  && this.approvalMessage.message.includes('failed') && this.approvalMessage.message.includes('Jira')) {\n            maildata.mailContent += '<br><br><span style=\"color:red;\"><b>Note:</b> Failed to update in Jira.</span>';\n          }\n          this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n            val1 => {\n              this.message = val1;\n              if(this.approvalMessage.message && this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": this.approvalMessage.message,\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else if (this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": \"Intake rejected successfully\",\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"danger\", \"close\": true,\n                  \"content\": \"<strong>Failed</strong> to send mail\",\n                }\n                ];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              }\n            });\n        });\n    } else {\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"Kindly provide comments before rejection!\",\n      }\n      ];\n      setTimeout(function () {\n        this.alertdata = false;\n        //window.location.reload();\n      }.bind(this), 1000);\n    }\n  }\n\n  updateJira(intake, index) {\n    this.alertIndex = index;\n    intake.rfEffort.device = JSON.stringify(intake.rfEffort.device);\n    intake.rfEffort.application = JSON.stringify(intake.rfEffort.application);\n    this.intakeService.jiraCreateAndUpdate(JSON.stringify(intake)).subscribe(\n      val => {\n        this.upadateJiraContent = val;\n        console.log(this.upadateJiraContent.message);      \n        if (this.upadateJiraContent.message.includes('failed') || this.upadateJiraContent.message.includes('Failed')) {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": this.upadateJiraContent.message,\n          }];\n          setTimeout(function () {\n            this.alertdata = false;\n            window.location.reload();\n          }.bind(this), 1000);\n        } else {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"success\", \"close\": true,\n            \"content\": this.upadateJiraContent.message,\n          }];\n          setTimeout(function () {\n            this.alertdata = false;\n            window.location.reload();\n          }.bind(this), 1000);\n        }\n        // setTimeout(function () {\n        //   this.alertdata = false;\n        //   // window.location.reload();\n        // }.bind(this), 1000);\n        // console.log(this.upadateJiraContent.message);\n      });\n  }\n\n\n  automateIntakeEdit(intake , index) {\n    this.automatedData = intake;\n    this.automatedIndex = index;\n  }\n\n  // rejectIntake(intake, index) {\n  //   this.alertIndex = index;\n  //   let reject = {\n  //     intakeId: intake.intakeId,\n  //     approver: {\n  //       id: this.user.id\n  //     },\n  //     approvercomments: (<HTMLSelectElement>document.getElementById(\"approverComments_\" + index)).value,\n  //     rfStatus: {\n  //       status: 'REJECTED'\n  //       // statusdesc: 'rejected'\n  //     }\n  //   };\n\n  //   this.intakeService.approveIntake(reject).subscribe(\n  //     val => {\n  //       let maildata = {\n  //         mailContent: '<b>' + intake.ideaName + '</b> has been rejected by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n  //         to: '',\n  //         cc: '',\n  //         Bcc: '',\n  //         testingRecipients: {\n  //           to: 'RCIOSSAutomation@rci.rogers.com,' + intake.createdby.email,\n  //           cc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com',\n  //           Bcc: ''\n  //         },\n  //         subject: 'INTAKE-Rejected'\n  //       };\n  //       this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n  //         val1 => {\n  //           this.message = val1;\n  //           if (this.message.response == 'Mail Sent Successfully') {\n  //             this.alertdata = true;\n  //             this.alertMessage = [{\n  //               \"type\": \"success\", \"close\": true,\n  //               \"content\": \"Intake rejected successfully\",\n  //             }];\n  //             setTimeout(function () {\n  //               this.alertdata = false;\n  //               window.location.reload();\n  //             }.bind(this), 1000);\n  //           } else {\n  //             this.alertdata = true;\n  //             this.alertMessage = [{\n  //               \"type\": \"danger\", \"close\": true,\n  //               \"content\": \"<strong>Failed</strong> to send mail\",\n  //             }\n  //             ];\n  //             setTimeout(function () {\n  //               this.alertdata = false;\n  //               window.location.reload();\n  //             }.bind(this), 1000);\n  //           }\n  //         });\n  //     });\n  // }\n}\n","<div class=\"row\">\n  <div *ngFor=\"let intake of intakes; let i = index\" class=\"col-md-3\">\n    <div class=\"card\">\n      <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata && i==alertIndex\"></app-alert>\n      <div class=\"card-body\">\n        <div *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"pos-absolute filter-indicator-small in-progress\"></div>\n        <div *ngIf=\"intake.rfStatus.status=='PENDING'\" class=\"pos-absolute filter-indicator-small yet-to-start\"></div>\n        <div *ngIf=\"intake.rfStatus.status=='APPROVED'\" class=\"pos-absolute filter-indicator-small completed\"></div>\n        <div *ngIf=\"intake.rfStatus.status=='REJECTED'\" class=\"pos-absolute filter-indicator-small rejected\"></div>\n        <div *ngIf=\"intake.rfStatus.status=='AUTOMATED'\" class=\"pos-absolute filter-indicator-small automated\"></div>\n        <div class=\"card-content\">\n          <div class=\"d-flex px-2 mb-3\">\n            <div class=\"img-container\"></div>\n            <div class=\"description\">\n              <div class=\"card-title\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-view-' + i\"\n                (click)=\"viewIntake(intake,i)\">\n                {{intake.ideaName}}</div>\n              <p class=\"card-text\">by {{intake.createdby.name}}</p>\n              <div class=\"card-upadted-time\">Updated on {{intake.modifieddate | date:\"dd/MM/yyyy\"}}</div>\n            </div>\n          </div>\n\n          <div class=\"card-body slidder-card\">\n            <div class=\"card-thumnail\">\n              <!-- <div *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"pos-absolute filter-indicator-small in-progress\">\n              </div>\n              <div *ngIf=\"intake.rfStatus.status=='PENDING'\" class=\"pos-absolute filter-indicator-small yet-to-start\">\n              </div>\n              <div *ngIf=\"intake.rfStatus.status=='APPROVED'\" class=\"pos-absolute filter-indicator-small completed\">\n              </div>\n              <div *ngIf=\"intake.rfStatus.status=='REJECTED'\" class=\"pos-absolute filter-indicator-small rejected\">\n              </div>\n              <div *ngIf=\"intake.rfStatus.status=='AUTOMATED'\" class=\"pos-absolute filter-indicator-small automated\">\n              </div> -->\n              <div class=\"pos-abs\">\n                <div *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"pos-absolute filter-indicator-small in-progress\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='PENDING'\" class=\"pos-absolute filter-indicator-small yet-to-start\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='APPROVED'\" class=\"pos-absolute filter-indicator-small completed\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='REJECTED'\" class=\"pos-absolute filter-indicator-small rejected\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='AUTOMATED'\" class=\"pos-absolute filter-indicator-small automated\">\n                </div>\n                <div *ngIf=\"approverFlag && intake.rfStatus.status=='PENDING'\"\n                  class=\"approval-text in-progress-opaque trgslide\" id=\"comment-box-all-{{i}}\">Approve\n                </div>\n                <div *ngIf=\"intake.automateFlag && intake.rfStatus.status=='AUTOMATED'\"\n                 class=\"approval-text in-progress-opaque trgslide\" (click)=\"automateIntakeEdit(intake, intake.intakeId)\" data-toggle=\"modal\" data-target=\"#intake-automate-edit\">Automate Form Edit\n                </div>\n                <div *ngIf=\"intake.automateFlag &&  intake.rfStatus.status=='APPROVED'\"\n                  class=\"approval-text in-progress-opaque trgslide\" (click)=\"automateIntakeAll(intake, i)\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-automateAll-' + i\">Automate\n                </div>\n              </div>\n              <div *ngIf=\"approverFlag && intake.rfStatus.status=='PENDING'\"\n                class=\"comment-box-all-{{i}} wrap-content slider-wrap\">\n                <textarea class=\"form-control\" id=\"approverCommentsAll_{{i}}\" placeholder=\"Approval Remarks\"\n                  rows=\"3\" maxlength=\"250\" ngModel #approvercomments='ngModel' [ngModelOptions]=\"{standalone: true}\"></textarea>\n                  <div *ngIf=\"approvercomments?.value.length>249\">\n                    <span style=\"color: red;font-size: 10px;\">You have reached the maximum limit of {{approvercomments?.value.length}} characters!</span>\n                  </div> \n\n                <!-- <i class=\"fa fa-pencil-square-o comment-icon ml-2\" aria-hidden=\"true\"></i> -->\n                <i class=\"fa fa-thumbs-up float-right comment-icon mr-2 closepop green\" (click)=\"approveIntake(intake, i)\"\n                  aria-hidden=\"true\"  [ngClass]=\"{'disabled':viewfield}\"></i>\n                <i class=\"fa fa-thumbs-down float-right comment-icon mr-2 closepop red\" (click)=\"rejectIntake(intake, i)\"\n                  aria-hidden=\"true\"  [ngClass]=\"{'disabled':viewfield}\"></i>\n              </div>\n              <img src=\"./assets/images/thumnail-hover.jpg\" class=\"w-100 h-100\">\n            </div>\n            <div class=\"card-content inner-card-content mt-0\">\n              <!-- <div type=\"button\" class=\"btn-plus\" data-toggle=\"modal\" data-target=\"#intake-create\">+</div> -->\n              <div class=\"card-title-inner\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-view-' + i\"\n                (click)=\"viewIntake(intake,i)\">\n                {{intake.ideaName}}</div>\n              <!-- <div class=\"dollar\"><img src=\"./assets/images/dollar.png\" alt=\"\"></div> -->\n              <p class=\"card-text-inner mt-1\">by {{intake.createdby.name}}</p>\n              <div class=\"inner-card-upadted-time\">Updated on {{intake.modifieddate | date:\"dd/MM/yyyy\"}}</div>\n              <div class=\"inner-description\">{{intake.ideaDescription}}\n              </div>\n            </div>\n          </div>\n\n\n          <div class=\"card-bottom\">\n            <div class=\"comments mr-auto\">\n              <!-- <i class=\"fa fa-heart mr-3 mt-3\" aria-hidden=\"true\"></i> -->\n              <!-- <i class=\"fa fa-share-square-o mt-3 mr-2\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-comment mr-2\" aria-hidden=\"true\"><span>123</span></i> -->\n              <!-- <i class=\"fa fa-pencil-square-o mr-2\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> -->\n              <img class=\"jira-icon\"   *ngIf=\"(intake.rfStatus.status!='DRAFT'  && intake.rfStatus.status!='PENDING' && approverFlag)|| (intake.createdby.id == user.id &&  intake.rfStatus.status!='DRAFT') || (intake.createdby.id == user.id &&  intake.rfStatus.status!='DRAFT' && approverFlag) || (intake.rfStatus.status!='DRAFT' && adminFlag ) \" src=\"./assets/images/jiraIcon.png\" (click)=\"updateJira(intake, i)\" alt=\"\">\n              <i *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"fa fa-trash\" id=\"intake-delete-{{i}}\"\n                (click)=\"deleteIntake(intake, i)\" aria-hidden=\"true\"></i>\n              <i *ngIf=\"intake.rfStatus.status=='DRAFT' || (intake.rfStatus.status=='REJECTED' && intake.createdby.id == user.id)\" class=\"fa fa-pencil-square-o\" data-toggle=\"modal\"\n                [attr.data-target]=\"'#intake-edit-' + i\" (click)=\"editIntake(intake,i)\" aria-hidden=\"true\"></i>\n            </div>\n            <div class=\"currency d-flex\">\n              <div>\n                <span class=\"value-dollar d-block\">${{intake.rfEffort.revenueFormatted}}</span>\n                <span class=\"value-description\">Total savings in a Year</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div *ngFor=\"let intake of intakes; let i = index\">\n  <div *ngIf=\"editData && index==i\" class=\"modal fade\" data-backdrop=\"static\" data-keyboard=\"false\"\n    id=\"intake-edit-{{i}}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <app-intake-edit [intakeData]=\"editData\"></app-intake-edit>\n    </div>\n  </div>\n  <!-- <div *ngIf=\"viewData && viewindex==i\" class=\"overlay slider-wrap intake-view-{{i}}\">\n    <app-intake-view [intakeData]=\"viewData\"></app-intake-view>\n  </div> -->\n  <div *ngIf=\"viewData && viewindex==i\" class=\"modal fade\" data-backdrop=\"static\" data-keyboard=\"false\"\n    id=\"intake-view-{{i}}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <app-intake-view [intakeData]=\"viewData\"></app-intake-view>\n    </div>\n  </div>\n  <div class=\"modal fade\" data-backdrop=\"static\" data-keyboard=\"false\" id=\"intake-automateAll-{{i}}\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"ModalLongTitle\"\n            aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n            <app-automation-intake-form [intakeData]=\"automate\"></app-automation-intake-form>\n        </div>\n  </div>\n</div>\n<div *ngIf=\"automatedData\" class=\"modal fade\" data-backdrop=\"static\" data-keyboard=\"false\" id=\"intake-automate-edit\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"ModalLongEdit\"\n  aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <app-intake-automation-edit [intake]=\"automatedData\"></app-intake-automation-edit>\n  </div>\n</div>","import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../../service/login.service';\nimport { IntakeService } from './../../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-intake-approval',\n  templateUrl: './intake-approval.component.html',\n  styleUrls: ['./intake-approval.component.scss'],\n  providers: [DatePipe]\n})\nexport class IntakeApprovalComponent implements OnInit {\n  @Input() intakes: any;\n  editData: any;\n  index: any;\n  viewData: any;\n  viewindex: any;\n  alertindex: any;\n  public message: any;\n  public alertMessage: any = [];\n  commonApprover: any = {};\n  public alertdata = false;\n  user: any;\n  roles: any;\n  approverFlag = false;\n  viewfield:boolean=false;\n  adminFlag:boolean=false;\n  upadateJiraContent: any;\n  approvalMessage: any;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    this.intakeService.getcommonApprover().subscribe(\n      val => {\n        this.commonApprover = val;\n      });\n    let j = this.roles.filter(item => item.rolePermission.permission === 'Approver');\n    if (j.length > 0) {\n      this.approverFlag = true;\n    }\n    let k = this.roles.filter(item => item.rolePermission.permission === 'Admin');\n    if (k.length > 0) {\n      this.adminFlag = true;\n    }\n  }\n\n  editIntake(intake, index) {\n    // console.log(intake);\n    this.editData = intake;\n    this.index = index;\n  }\n\n  viewIntake(intake, index) {\n    this.viewData = intake;\n    this.viewindex = index;\n  }\n\n  deleteIntake(intake, index) {\n    this.alertindex = index;\n    this.intakeService.deleteIntake(intake.intakeId).subscribe(\n      val => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"success\", \"close\": true,\n          \"content\": \"Intake deleted successfully\",\n        }];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n      },\n      error => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>Failed</strong> to delete intake\",\n        }\n        ];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n      });\n  }\n\n  approveIntake(intake, index) {\n    this.alertindex = index;\n    let comment = (<HTMLSelectElement>document.getElementById(\"approverComments_\" + index)).value;\n    if(comment != '' && comment != undefined && comment.trim().length > 0 ){\n      this.viewfield=true\n      let approve = {\n        intakeId: intake.intakeId,\n        approver: {\n          id: this.user.id\n        },\n        approvercomments: (<HTMLSelectElement>document.getElementById(\"approverComments_\" + index)).value,\n        rfStatus: {\n          status: 'APPROVED'\n          // statusdesc: 'approved'\n        }\n      };\n  \n      this.intakeService.approveIntake(approve).subscribe(\n        val => {\n          this.approvalMessage = val;\n          let maildata = {\n            mailContent: '<b>' + intake.ideaName + '</b> has been approved by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n            to: '',\n            cc: '',\n            Bcc: '',\n            testingRecipients: {\n              to: intake.createdby.email,\n              cc: this.commonApprover.email.value + ',' + this.user.email,\n              Bcc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com'\n            },\n            subject: 'INTAKE-Approved'\n          };\n          if (this.approvalMessage.message  && this.approvalMessage.message.includes('failed') && this.approvalMessage.message.includes('Jira')) {\n            maildata.mailContent += '<br><br><span style=\"color:red;\"><b>Note:</b> Failed to update in Jira.</span>';\n          }\n          this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n            val1 => {\n              this.message = val1;\n              if (this.approvalMessage.message && this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": this.approvalMessage.message,\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else if (this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": \"Intake approved successfully\",\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"danger\", \"close\": true,\n                  \"content\": \"<strong>Failed</strong> to send mail\",\n                }\n                ];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              }\n            });\n        });\n    }else{\n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"Kindly provide comments before Approval!\",\n      }\n      ];\n      setTimeout(function () {\n        this.alertdata = false;\n        //window.location.reload();\n      }.bind(this), 1000);\n    }\n    // this.viewfield=true\n    // let approve = {\n    //   intakeId: intake.intakeId,\n    //   approver: {\n    //     id: this.user.id\n    //   },\n    //   approvercomments: (<HTMLSelectElement>document.getElementById(\"approverComments_\" + index)).value,\n    //   rfStatus: {\n    //     status: 'APPROVED'\n        \n    //   }\n    // };\n\n    // this.intakeService.approveIntake(approve).subscribe(\n    //   val => {\n    //     this.approvalMessage = val;\n    //     let maildata = {\n    //       mailContent: '<b>' + intake.ideaName + '</b> has been approved by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n    //       to: '',\n    //       cc: '',\n    //       Bcc: '',\n    //       testingRecipients: {\n    //         to: intake.createdby.email,\n    //         cc: this.commonApprover.email.value + ',' + this.user.email,\n    //         Bcc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com'\n    //       },\n    //       subject: 'INTAKE-Approved'\n    //     };\n    //     if (this.approvalMessage.message  && this.approvalMessage.message.includes('failed') && this.approvalMessage.message.includes('Jira')) {\n    //       maildata.mailContent += '<br><br><span style=\"color:red;\"><b>Note:</b> Failed to update in Jira.</span>';\n    //     }\n    //     this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n    //       val1 => {\n    //         this.message = val1;\n    //         if (this.approvalMessage.message && this.message.response == 'Mail Sent Successfully') {\n    //           this.alertdata = true;\n    //           this.alertMessage = [{\n    //             \"type\": \"success\", \"close\": true,\n    //             \"content\": this.approvalMessage.message,\n    //           }];\n    //           setTimeout(function () {\n    //             this.alertdata = false;\n    //             window.location.reload();\n    //           }.bind(this), 1000);\n    //         } else if (this.message.response == 'Mail Sent Successfully') {\n    //           this.alertdata = true;\n    //           this.alertMessage = [{\n    //             \"type\": \"success\", \"close\": true,\n    //             \"content\": \"Intake approved successfully\",\n    //           }];\n    //           setTimeout(function () {\n    //             this.alertdata = false;\n    //             window.location.reload();\n    //           }.bind(this), 1000);\n    //         } else {\n    //           this.alertdata = true;\n    //           this.alertMessage = [{\n    //             \"type\": \"danger\", \"close\": true,\n    //             \"content\": \"<strong>Failed</strong> to send mail\",\n    //           }\n    //           ];\n    //           setTimeout(function () {\n    //             this.alertdata = false;\n    //             window.location.reload();\n    //           }.bind(this), 1000);\n    //         }\n    //       });\n    //   });\n  }\n\n  rejectIntake(intake, index) {\n   \n    \n    this.alertindex = index;\n    let comment = (<HTMLSelectElement>document.getElementById(\"approverComments_\" + index)).value;\n     \n    console.log(\"comment\",comment,index)\n  \n     \n  \n    if(comment != '' && comment != undefined && comment.trim().length > 0 ){\n      this.viewfield=true\n       \n      let reject = {\n        intakeId: intake.intakeId,\n        approver: {\n          id: this.user.id\n        },\n        approvercomments: (<HTMLSelectElement>document.getElementById(\"approverComments_\" + index)).value,\n        rfStatus: {\n          status: 'REJECTED'\n          // statusdesc: 'rejected'\n        }\n      };\n  \n      this.intakeService.approveIntake(reject).subscribe(\n        val => {\n          this.approvalMessage = val;\n     \n          let maildata = {\n            mailContent: '<b>' + intake.ideaName + '</b> has been rejected by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n            to: '',\n            cc: '',\n            Bcc: '',\n            testingRecipients: {\n              to: intake.createdby.email,\n              cc: this.commonApprover.email.value + ',' + this.user.email,\n              Bcc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com'\n            },\n            subject: 'INTAKE-Rejected'\n          };\n          if (this.approvalMessage.message  && this.approvalMessage.message.includes('failed') && this.approvalMessage.message.includes('Jira')) {\n            maildata.mailContent += '<br><br><span style=\"color:red;\"><b>Note:</b> Failed to update in Jira.</span>';\n          }\n          this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n            val1 => {\n              this.viewfield=true\n              this.message = val1;\n              if(this.approvalMessage.message && this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                \n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": this.approvalMessage.message,\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else if (this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": \"Intake rejected successfully\",\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"danger\", \"close\": true,\n                  \"content\": \"<strong>Failed</strong> to send mail\",\n                }\n                ];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              }\n            });\n        });\n    } else { \n      this.alertdata = true;\n      this.alertMessage = [{\n        \"type\": \"danger\", \"close\": true,\n        \"content\": \"Kindly provide comments before rejecting!\",\n      }\n      ];\n      setTimeout(function () {\n        this.alertdata = false;\n        //window.location.reload();\n      }.bind(this), 1000);\n    }\n  }\n\n  updateJira(intake, index) {\n    this.alertdata = index;\n    intake.rfEffort.device = JSON.stringify(intake.rfEffort.device);\n    intake.rfEffort.application = JSON.stringify(intake.rfEffort.application);\n    this.intakeService.jiraCreateAndUpdate(JSON.stringify(intake)).subscribe(\n      val => {\n        this.upadateJiraContent = val;\n        this.alertdata = true;\n        if (this.upadateJiraContent.message.includes('failed') || this.upadateJiraContent.message.includes('Failed')) {\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": this.upadateJiraContent.message,\n          }];\n        } else {\n          this.alertMessage = [{\n            \"type\": \"success\", \"close\": true,\n            \"content\": this.upadateJiraContent.message,\n          }];\n        }\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n        // console.log(this.upadateJiraContent.message);\n      });\n  }\n\n  // rejectIntake(intake, index) {\n  //   this.alertindex = index;\n  //   let reject = {\n  //     intakeId: intake.intakeId,\n  //     approver: {\n  //       id: this.user.id\n  //     },\n  //     approvercomments: (<HTMLSelectElement>document.getElementById(\"approverComments_\" + index)).value,\n  //     rfStatus: {\n  //       status: 'REJECTED'\n  //       // statusdesc: 'rejected'\n  //     }\n  //   };\n\n  //   this.intakeService.approveIntake(reject).subscribe(\n  //     val => {\n  //       let maildata = {\n  //         mailContent: '<b>' + intake.ideaName + '</b> has been rejected by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n  //         to: '',\n  //         cc: '',\n  //         Bcc: '',\n  //         testingRecipients: {\n  //           to: 'RCIOSSAutomation@rci.rogers.com,' + intake.createdby.email,\n  //           cc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com',\n  //           Bcc: ''\n  //         },\n  //         subject: 'INTAKE-Rejected'\n  //       };\n  //       this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n  //         val1 => {\n  //           this.message = val1;\n  //           if (this.message.response == 'Mail Sent Successfully') {\n  //             this.alertdata = true;\n  //             this.alertMessage = [{\n  //               \"type\": \"success\", \"close\": true,\n  //               \"content\": \"Intake rejected successfully\",\n  //             }];\n  //             setTimeout(function () {\n  //               this.alertdata = false;\n  //               window.location.reload();\n  //             }.bind(this), 1000);\n  //           } else {\n  //             this.alertdata = true;\n  //             this.alertMessage = [{\n  //               \"type\": \"danger\", \"close\": true,\n  //               \"content\": \"<strong>Failed</strong> to send mail\",\n  //             }\n  //             ];\n  //             setTimeout(function () {\n  //               this.alertdata = false;\n  //               window.location.reload();\n  //             }.bind(this), 1000);\n  //           }\n  //         });\n  //     });\n  // }\n}\n","<div class=\"row\">\n    <div *ngFor=\"let intake of intakes; let i = index\" class=\"col-md-3\">\n        <div class=\"card\">\n            <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata && i==alertindex\"></app-alert>\n            <div class=\"card-body\">\n                <div *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"pos-absolute filter-indicator-small in-progress\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='PENDING'\" class=\"pos-absolute filter-indicator-small yet-to-start\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='APPROVED'\" class=\"pos-absolute filter-indicator-small completed\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='REJECTED'\" class=\"pos-absolute filter-indicator-small rejected\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='AUTOMATED'\" class=\"pos-absolute filter-indicator-small automated\">\n                </div>\n                <div class=\"card-content\">\n                    <div class=\"d-flex px-2 mb-3\">\n                        <div class=\"img-container\"></div>\n                        <div class=\"description\">\n                            <div class=\"card-title\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-view-' + i\"\n                                (click)=\"viewIntake(intake,i)\">\n                                {{intake.ideaName}}</div>\n                            <p class=\"card-text\">by {{intake.createdby.name}}</p>\n                            <div class=\"card-upadted-time\">Updated on {{intake.modifieddate | date:\"dd/MM/yyyy\"}}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"card-body slidder-card\">\n                        <div class=\"card-thumnail\">\n                            <div class=\"pos-abs\">\n                                <div class=\"filter-indicator-small yet-to-start\"></div>\n                                <div *ngIf=\"approverFlag\"\n                                    class=\"approval-text in-progress-opaque trgslide\" id=\"comment-box-{{i}}\">Approve\n                                </div>\n                            </div>\n                            <div *ngIf=\"approverFlag\" class=\"comment-box-{{i}} wrap-content slider-wrap\">\n                                <textarea class=\"form-control\" id=\"approverComments_{{i}}\"\n                                    placeholder=\"Approval Remarks\" rows=\"3\" maxlength=\"250\" ngModel #approvercomments='ngModel' [ngModelOptions]=\"{standalone: true}\"></textarea>\n\n                                    <div *ngIf=\"approvercomments?.value.length>249\">\n                                        <span style=\"color: red;font-size: 10px;\">You have reached the maximum limit of {{approvercomments?.value.length}} characters!</span>\n                                      </div> \n                                <!-- <i class=\"fa fa-pencil-square-o comment-icon ml-2\" aria-hidden=\"true\"></i> -->\n                                <i class=\"fa fa-thumbs-up float-right comment-icon mr-2 closepop green\"\n                                    (click)=\"approveIntake(intake, i)\" aria-hidden=\"true\" [ngClass]=\"{'disabled':viewfield}\"></i>\n                                <i class=\"fa fa-thumbs-down float-right comment-icon mr-2 closepop red\"\n                                    (click)=\"rejectIntake(intake, i)\" aria-hidden=\"true\" [ngClass]=\"{'disabled':viewfield}\"></i>\n                            </div>\n                            <img src=\"./assets/images/thumnail-hover.jpg\" class=\"w-100 h-100\">\n                        </div>\n                        <div class=\"card-content inner-card-content mt-0\">\n                            <div class=\"card-title-inner\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-view-' + i\"\n                                (click)=\"viewIntake(intake,i)\">\n                                {{intake.ideaName}}</div>\n                            <p class=\"card-text-inners mt-1\">by {{intake.createdby.name}}</p>\n                            <div class=\"inner-card-upadted-time\">Updated on\n                                {{intake.modifieddate | date:\"dd/MM/yyyy\"}}\n                            </div>\n                            <div class=\"inner-description\">{{intake.ideaDescription}}</div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"card-bottom\">\n                        <div class=\"comments mr-auto\">\n                            <!-- <i class=\"fa fa-heart mr-2 mt-3\" aria-hidden=\"true\"></i> -->\n                            <img class=\"jira-icon\"  *ngIf=\"(intake.rfStatus.status!='DRAFT' &&  intake.rfStatus.status!='PENDING' && approverFlag)||(intake.createdby.id == user.id  && intake.rfStatus.status!='DRAFT') || (intake.createdby.id == user.id  && intake.rfStatus.status!='DRAFT' && approverFlag)||(intake.rfStatus.status!='DRAFT' && adminFlag)\" src=\"./assets/images/jiraIcon.png\" (click)=\"updateJira(intake, i)\" alt=\"\">\n                            <i *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"fa fa-trash mr-2\" id=\"intake-delete-{{i}}\"\n                                (click)=\"deleteIntake(intake, i)\" aria-hidden=\"true\"></i>\n                            <i *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"fa fa-pencil-square-o mr-3\"\n                                data-toggle=\"modal\" [attr.data-target]=\"'#intake-edit-' + i\"\n                                (click)=\"editIntake(intake,i)\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"currency d-flex\">\n                            <div>\n                                <span class=\"value-dollar d-block\">${{intake.rfEffort.revenueFormatted}}</span>\n                                <span class=\"value-description\">Total savings in a Year</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngFor=\"let intake of intakes; let i = index\">\n    <div *ngIf=\"editData && index==i\" class=\"modal fade\" id=\"intake-edit-{{i}}\" tabindex=\"-1\" role=\"dialog\"\n        aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <app-intake-edit [intakeData]=\"editData\"></app-intake-edit>\n        </div>\n    </div>\n    <!-- <div *ngIf=\"viewData && viewindex==i\" class=\"overlay slider-wrap intake-view-{{i}}\">\n      <app-intake-view [intakeData]=\"viewData\"></app-intake-view>\n    </div> -->\n    <div *ngIf=\"viewData && viewindex==i\" class=\"modal fade\" id=\"intake-view-{{i}}\" tabindex=\"-1\" role=\"dialog\"\n        aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <app-intake-view [intakeData]=\"viewData\"></app-intake-view>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../../service/login.service';\nimport { IntakeService } from './../../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators,FormArray } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { AutomationFactoryService } from 'src/app/service/automation-factory.service';\nimport { IfStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-intake-automation-edit',\n  templateUrl: './intake-automation-edit.component.html',\n  styleUrls: ['./intake-automation-edit.component.scss']\n})\nexport class IntakeAutomationEditComponent implements OnInit {\n  @Input() intake: any;\n  public message: any;\n  public alertMessage: any = [];\n  public alertMessageModal:any = [];\n  public alertdata = false;\n  alertIndex: any;\n  user: any;\n  roles: any;\n  approverFlag = false;\n  /***Automation**/\n  public automationFormEdit: any;\n  public intakeFormDetails: any;\n  public orderType: any;\n  public submitted =  false;\n  public serviceType:any;\n  public hideCostWeitageEdit = false;\n  public costWeitageEdit:any;\n  public suitArray:any;\n  public serviceTypeEdit:any;\n  public orderTypeEdit:any;\n  public errorValueEdit:any;\n  public errorAlertEdit = false;\n  public roleByPermission:any;\n  public automatedData:any;\n  public automatedIndex:any;\n  public role:any;\n  public isJsonError:any;\n  public enterdCostSumEdit:any;\n  public roleId:any;\n  public sum:any;\n  public suitId:any;\n  public botId:any;\n  public orderTypevalue:any;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router,\n    private automationService: AutomationFactoryService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    // console.log(this.roles);\n    let j = this.roles.filter(item => item.rolePermission.permission === 'Approver');\n    if (j.length > 0) {\n      this.approverFlag = true;\n    }\n    this.costWeitageEdit = [];\n    this.errorValueEdit = 0 ;\n    this.hideCostWeitageEdit = false;\n    this.errorAlertEdit = false;\n    this.isJsonError = false;\n    this.enterdCostSumEdit = 0;\n    this.costWeitageEdit = [];\n    this.hideCostWeitageEdit = false;\n    this.sum = 0;\n    this.automationFormEdit = this.formBuilder.group({\n      // roleEdit: [''],\n      orderTypeEdit: [''],\n      botcatalogueEdit: this.formBuilder.array([\n      ]),\n    });\n\n    /*****Get Order Type*******/\n    this.automationService.getOrderType().subscribe(val => {\n      this.orderType = val;\n      console.log(this.orderType);\n    }, error => {\n    })\n\n    /*******Get role by ID********/\n    // this.intakeService.getRoleByPermission(2).subscribe(val =>{\n    //     this.roleByPermission = val;\n    //     console.log(this.roleByPermission);\n    // });\n  /**************GET EDIT AUTOMATED FORM****************/\n  // this.suitId = [];\n    this.botId = [];\n    this.intakeService.getAutomateById(this.intake.intakeId).subscribe(val =>{\n      this.intakeFormDetails = val;\n      this.suitArray = this.intakeFormDetails.suiteCatalogues;\n      // this.automationFormEdit.patchValue({\n      //   roleEdit: [this.intake.team.ldapRole.roleName],\n      // })\n      for(var i=0; i<this.suitArray.length; i++){\n        // this.suitId.push(this.suitArray[i].botCatalogue[i].suiteId);\n        this.orderTypeEdit = this.suitArray[i].botCatalogue[i].orderType;\n\n        this.addSuitEdit(this.suitArray[i]);\n        // this.roleId = this.intake.team.ldapRole.roleName;\n        // let sum = 0 ;\n        if(!this.botId[i]){\n          this.botId[i]=[];\n        }\n        for(var j=0; j<this.suitArray[i].botCatalogue.length; j++){\n          this.botId[i][j]= this.suitArray[i].botCatalogue[j].botId;\n          this.addNewBotEdit(i,this.suitArray[i].botCatalogue[j]);\n          this.costWeitageCalEdit(this.suitArray[i].botCatalogue[j].savingPercentage,j,i);\n        }\n      }\n  });\n  }\n  /*********Get form control********/\nget v() {\n  return this.automationFormEdit.controls;\n}\nget w(){\n  return this.automationFormEdit.controls.botcatalogueEdit.controls;\n}\n\n\nselectOrderType(event){\n  console.log(event);\n  this.orderTypeEdit = event;\n  this.automationFormEdit.controls['orderTypeEdit'].setValidators(Validators.required);\n  this.automationFormEdit.controls[\"orderTypeEdit\"].updateValueAndValidity();\n}\n/*******Get Service type from Order Type********/\n// getServiceType(event: any) {\n//   if (event == '') {\n//     this.serviceType = [];\n//     this.automationFormEdit.patchValue({\n\n//     });\n//   } else {\n//     this.orderType.forEach(element => {\n//       if (element.orderType == event) {\n//         this.serviceType = element.serviceType;\n//       }\n//     });\n//   }\n// }\n\nbotcatalogueEdit(): FormArray {\n  return this.automationFormEdit.get(\"botcatalogueEdit\") as FormArray\n}\n\nnewSuiteEdit(suits:any): FormGroup {\n  return this.formBuilder.group({\n    suiteNameEdit: [suits.suiteName, Validators.required],\n    // configTypeEdit: [suits.confType, Validators.required],\n    botDetailsListEdit: this.formBuilder.array([\n    ]),\n  })\n}\nnewSuiteEditEmpty(): FormGroup {\n  return this.formBuilder.group({\n    suiteNameEdit: ['', Validators.required],\n    // configTypeEdit: ['', Validators.required],\n    botDetailsListEdit: this.formBuilder.array([\n    ]),\n  })\n}\naddSuitEditEmpty() {\n  this.botcatalogueEdit().push(this.newSuiteEditEmpty());\n}\naddSuitEdit(suits) {\n  this.botcatalogueEdit().push(this.newSuiteEdit(suits));\n}\n\nremoveSuiteEdit(suitIndexEdit: number) {\n  this.botcatalogueEdit().removeAt(suitIndexEdit);\n  this.costWeitageCalEdit(0,-1,suitIndexEdit);\n}\n\nbotDetailsEdit(suitIndexEdit: number): FormArray {\n  return this.botcatalogueEdit().at(suitIndexEdit).get('botDetailsListEdit') as FormArray;\n}\n\nnewBotEdit(botCatalogue): FormGroup {\n  console.log(botCatalogue.savingPercentage);\n  return this.formBuilder.group({\n    botNameEdit: [botCatalogue.botName, Validators.required],\n    botweightageEdit: [botCatalogue.savingPercentage],\n    // serviceTypeEdit: [botCatalogue.serviceType, Validators.required],\n    botInputEdit: [JSON.stringify(botCatalogue.botInput.input), Validators.required]\n  })\n}\nnewBotEditEmpty(): FormGroup {\n  return this.formBuilder.group({\n    botNameEdit: ['', Validators.required],\n    botweightageEdit: [''],\n    // serviceTypeEdit: ['', Validators.required],\n    botInputEdit: ['',Validators.required]\n  })\n}\naddNewBotEditEmpty(suitIndexEdit: number) {\n  this.botDetailsEdit(suitIndexEdit).push(this.newBotEditEmpty());\n}\n\naddNewBotEdit(suitIndexEdit: number, botCatalogue:any) {\n  this.botDetailsEdit(suitIndexEdit).push(this.newBotEdit(botCatalogue));\n}\n\nremoveBotEdit(suitIndexEdit: number, botIndexEdit: number) {\n  (<HTMLInputElement>document.getElementById('nav-bot-tabEdit'+suitIndexEdit+'0')).className = \"nav-item nav-link automation-navlink active\";\n  (<HTMLInputElement>document.getElementById('botEdit'+suitIndexEdit+'0')).className = \"tab-pane fade active show\";\n  this.botDetailsEdit(suitIndexEdit).removeAt(botIndexEdit);\n  this.costWeitageCalEdit(0,botIndexEdit,suitIndexEdit);\n}\n\n/*****Cost Weitage calculation*******/\ncostWeitageCalEdit(event:number,botIndex:number,suitIndex:number){\n  // console.log(event,botIndex,suitIndex);\n  this.sum=0;\n  if(botIndex == -1){\n    for(var k=0; k<this.costWeitageEdit[suitIndex].length; k++){\n      this.costWeitageEdit[suitIndex][k] = event;\n    }\n  }\n  for(var i=0; i<=suitIndex; i++){\n    if(!this.costWeitageEdit[suitIndex]){\n      this.costWeitageEdit[suitIndex]=[];\n    }\n    for(var j=0; j<=botIndex; j++){\n      this.costWeitageEdit[suitIndex][botIndex] = event;\n    }\n    for (var i = 0; i < this.costWeitageEdit.length; i++) {\n       for (var j = 0; j < this.costWeitageEdit[i].length; j++) {\n        if(this.costWeitageEdit[i][j]){\n          this.sum += Number(this.costWeitageEdit[i][j]);\n        }\n      }\n    }\n  }\n  this.enterdCostSumEdit = this.sum;\n  console.log(this.sum);\n  if(this.sum == 100){\n    this.hideCostWeitageEdit = true;\n    this.errorValueEdit = 0;\n    this.errorAlertEdit = false\n  }\n  else if(this.sum > 100){\n    this.hideCostWeitageEdit = true;\n    let diff = this.sum - 100;\n    this.errorAlertEdit = true;\n    this.errorValueEdit = event - diff;\n  }\n  else{\n    this.hideCostWeitageEdit = false;\n    this.errorValueEdit = 0;\n    this.errorAlertEdit = false\n  }\n}\n\n// setRole(event){\n//   this.roleId = event;\n// }\n/****AUTOMATION EDIT******/\nupdateAutomate(intake,index){\n  this.submitted = true;\n  this.alertIndex = index;\n  if(this.automationFormEdit.invalid || this.errorValueEdit!=0 || this.enterdCostSumEdit >100 || this.enterdCostSumEdit == 0){\n    this.alertdata = true;\n    this.alertMessageModal = [{\n      \"type\": \"danger\", \"close\": true,\n      \"content\": \"<strong>Kindly provide correct Automation Details</strong>\",\n    }\n    ];\n    setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n    return;\n  }else if(this.enterdCostSumEdit < 100){\n    this.alertdata = true;\n    this.alertMessageModal = [{\n      \"type\": \"danger\", \"close\": true,\n      \"content\": \"<strong>Kindly provide '100%' saving!</strong>\",\n    }\n    ];\n    setTimeout(function () { this.alertdata = false; }.bind(this), 5000);\n    return;\n  }\n  else{\n    let pojo = {};\n  pojo['intakeId'] = intake.intakeId;\n  var suiteCatalogueEdit = [];\n  for(var i=0; i<this.botcatalogueEdit().controls.length; i++){\n    let suits={};\n    suits['orderType'] = this.orderTypeEdit;\n    suits['suiteName'] = this.botcatalogueEdit().controls[i].value.suiteNameEdit;\n    // let role = {};\n    // role['roleId'] = this.intake.team.ldapRole.roleId;\n    // suits['role'] = role;\n    suits['botCatalogue'] = [];\n    for(var j=0; j<this.botDetailsEdit(i).controls.length; j++){\n      let bot={};\n      let val;\n      try{\n        val = JSON.parse(this.botDetailsEdit(i).controls[j].value.botInputEdit);\n      }catch(e){\n        this.isJsonError = true;\n            this.alertdata = true;\n            this.alertMessageModal = [{\n              \"type\": \"danger\", \"close\": true,\n              \"content\": \"Error while parsing JSON Input on <strong>\" + this.botDetailsEdit(i).controls[j].value.botNameEdit + \" </strong>\",\n            }];\n            setTimeout(function () { this.alertdata = false; }.bind(this), 7000);\n            return;\n      }\n      bot['orderType'] = this.orderTypeEdit;\n      var input={};\n      input['input']=val;\n      bot['botInput'] = input;\n      bot['botName'] = this.botDetailsEdit(i).controls[j].value.botNameEdit;\n      // bot['serviceType'] = this.botDetailsEdit(i).controls[j].value.serviceTypeEdit;\n\n\n      if(this.botDetailsEdit(i).controls[j].value.botweightageEdit){\n        bot['savingPercentage'] = this.botDetailsEdit(i).controls[j].value.botweightageEdit;\n      }else{\n        bot['savingPercentage'] = '0';\n      }\n      console.log(bot);\n      suits['botCatalogue'].push(bot);\n    }\n    suiteCatalogueEdit.push(suits);\n    pojo['suiteCatalogues'] = suiteCatalogueEdit;\n  }\n    console.log(pojo);\n    // pojo = JSON.stringify(pojo);\n    this.intakeService.automateIntakeEdit(pojo).subscribe(val=>{\n      let response: any = val;\n      console.log(response);\n      if(response.message ==\"Intake Automated Successfully ,but Failed to update Dashboard!\" || response.message ==\"Intake Automated Successfully!\"){\n        this.alertdata = true;\n            this.alertMessageModal = [{\n              \"type\": \"success\", \"close\": true,\n              \"content\": \"<strong>\"+response.message+\"</strong>\",\n            }];\n            setTimeout(function () {\n            this.alertdata = false;\n              this.resetform();\n              let element: HTMLElement = document.getElementById('btnModalCloseEdit') as HTMLElement;\n              element.click();\n              window.location.reload();\n            }.bind(this), 5000);\n      }else{\n        this.alertdata = true;\n        console.log(response.message)\n        this.alertMessageModal = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>\"+response.message+\"</strong>\",\n        }];\n        setTimeout(function () {\n          this.alertdata = false;\n        }.bind(this), 5000);\n      }\n    }, error => {\n        let errorResponse = error;\n    })\n  }\n}\n\nresetform(){\n  this.submitted = false;\n  this.costWeitageEdit = [];\n    this.errorValueEdit = 0 ;\n    this.hideCostWeitageEdit = false;\n    this.errorAlertEdit = false;\n    this.isJsonError = false;\n    this.enterdCostSumEdit = 0;\n    this.costWeitageEdit = [];\n    this.sum = 0;\n    window.location.reload();\n  // this.automationFormEdit.reset();\n  // this.ngOnInit();\n}\n}\n","<div class=\"modal-content\">\n    <div class=\"modal-header\">\n        <i class=\"fa fa-file mr-3\" aria-hidden=\"true\"></i>\n        <h5 class=\"modal-title\" id=\"ModalLongTitle\">Automation Form</h5>\n        <button type=\"button\" id=\"btnModalCloseEdit\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"resetform()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body automation-body\">\n        <form [formGroup]=\"automationFormEdit\">\n            <div class=\"automation-title pr-3\">Basic Details</div>\n            <div class=\"form-row\">\n                <!-- <div class=\"form-group col-md-3\">\n                    <label for=\"\">Role Type</label>\n                    <select class=\"custom-select\" formControlName=\"roleEdit\" [ngClass]=\"{'is-invalid': submitted && v.roleEdit.errors}\">\n                        <option value=''>Select</option>\n                        <option *ngFor=\"let item of roleByPermission\" value=\"{{item.roleId}}\">{{item.roleName}}</option>\n                    </select>\n                    <div *ngIf=\"submitted && v.roleEdit.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"v.roleEdit.errors\">Role is required</div>\n                    </div>\n                </div> -->\n                <!-- <div class=\"form-group col-md-3\">\n                    <label for=\"\">Role Type</label>\n                    <input type=\"text\" class=\"form-control\"\n                    formControlName=\"roleEdit\" [ngClass]=\"{ 'is-invalid': submitted && v.roleEdit.errors }\" value=\"{{intake?.team.ldapRole.roleName}}\" disabled>\n                    <div *ngIf=\"submitted && v.roleEdit.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"v.roleEdit.errors\">Role is required</div>\n                    </div>\n                </div> -->\n                <div class=\"form-group col-md-3\">\n                    <label for=\"\">Order Type</label>\n                    <select class=\"custom-select\" formControlName=\"orderTypeEdit\"\n                    [ngClass]=\"{ 'is-invalid': submitted && v.orderTypeEdit.errors }\" (click)=\"selectOrderType($event.target.value)\">\n                        <option selected value=\"\">Select</option>\n                        <option *ngFor=\"let item of orderType\" value=\"{{item.orderType}}\" [selected]=\"item.orderType == orderTypeEdit\">{{item.orderType}}</option>\n                    </select>\n                    <div *ngIf=\"submitted && v.orderTypeEdit.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"v.orderTypeEdit.errors\">Order Type is required</div>\n                    </div>\n                </div> \n            </div> \n            <div class=\"d-flex\">\n                <div class=\"automation-title pr-3\">Bot Catalogue</div>\n                <!-- <i class=\"fa fa-plus-circle automation-bot\" aria-hidden=\"true\"\n                (click)=\"addSuitEditEmpty()\"></i>\n                <div>Add new suite</div> -->\n            </div>\n            <div id=\"catalogueAccordionEdit\" formArrayName=\"botcatalogueEdit\">\n                <div *ngFor=\"let suits of botcatalogueEdit().controls; let suitIndexEdit = index\">\n                    <div class=\"mb-3\" [formGroupName]=\"suitIndexEdit\">\n                        <div class=\"header\" id=\"suiteHeading{{suitIndexEdit}}\">\n                            <div class=\"mb-0\">\n                                <button class=\"btn btn-link\" [ngClass]=\"{'collapsed': suitIndexEdit != 0}\" data-toggle=\"collapse\" [attr.data-target]=\"'#suiteCollapseEdit'+suitIndexEdit\"\n                                    [attr.aria-expanded]=\"false\" [attr.aria-controls]=\"'suiteCollapseEdit'+ suitIndexEdit\">\n                                    Suite-{{suitIndexEdit + 1}}<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                                    aria-hidden=\"true\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        <div id=\"suiteCollapseEdit{{suitIndexEdit}}\" class=\"catalogueDetails collapse show\" [attr.aria-labelledby]=\"'suiteHeadingEdit'+ suitIndexEdit\" [ngClass]=\"{'show': suitIndexEdit == 0}\" data-parent=\"#catalogueAccordionEdit\">\n                            <div class=\"card-body-collapse\">\n                                <div class=\"form-group col-md-6 p-0\">\n                                    <label for=\"suiteNameEdit\">Suite Name</label>\n                                    <input type=\"text\" class=\"form-control\" id=\"suiteNameEdit{{suitIndexEdit}}\"\n                                    formControlName=\"suiteNameEdit\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndexEdit].controls.suiteNameEdit.errors }\">\n                                    <div *ngIf=\"submitted && w[suitIndexEdit].controls.suiteNameEdit.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"w[suitIndexEdit].controls.suiteNameEdit.errors\">Suit Name is required</div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group col-md-6 p-0\">\n                                    <label for=\"configTypeEdit\">Config Type</label>\n                                    <select class=\"custom-select\" formControlName=\"configTypeEdit\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndexEdit].controls.configTypeEdit.errors }\">\n                                        <option selected value=\"\">select</option>\n                                        <option value=\"CLI\">CLI</option>\n                                        <option value=\"Netconf\">Netconf </option>\n                                        <option value=\"SNMP\">SNMP </option>\n                                        <option value=\"RESTCONF\">RESTCONF </option>\n                                    </select> \n                                    <div *ngIf=\"submitted && w[suitIndexEdit].controls.configTypeEdit.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"w[suitIndexEdit].controls.configTypeEdit.errors\">Config Type is required</div>\n                                    </div>                     \n                                </div> -->\n                                <div class=\"d-flex\">\n                                    <div class=\"automation-title pr-3\">Bot Details</div>\n                                    <i class=\"fa fa-plus-circle automation-bot\" aria-hidden=\"true\"\n                                    (click)=\"addNewBotEditEmpty(suitIndexEdit)\"></i>\n                                    <div>Add new bot details</div>\n                                </div>\n                                <div formArrayName=\"botDetailsListEdit\">\n                                    <div>\n                                        <div>\n                                            <nav class=\"col-md-12 p-0\">\n                                                <div class=\"nav nav-tabs mb-0\" id=\"nav-tab\" role=\"tablist\">\n                                                    <a class=\"nav-item nav-link automation-navlink\" [ngClass]=\"{'active': botIndexEdit == 0}\" *ngFor=\"let bots of botDetailsEdit(suitIndexEdit).controls; let botIndexEdit = index\"\n                                                    id=\"nav-bot-tabEdit{{suitIndexEdit}}{{botIndexEdit}}\" data-toggle=\"tab\" href=\"#botEdit{{suitIndexEdit}}{{botIndexEdit}}\" role=\"tab\"\n                                                    aria-controls=\"nav-bot\" aria-selected=\"true\">bot{{botIndexEdit + 1}}</a>\n                                                </div>\n                                            </nav>\n                                            <div class=\"col-md-12 p-0\">\n                                                <div class=\"tab-content automation-tab\" id=\"nav-tabContent\" *ngIf = \"botDetailsEdit(suitIndexEdit).controls.length > 0\" >\n                                                    <div  *ngFor=\"let bots of botDetailsEdit(suitIndexEdit).controls; let botIndexEdit = index\" class=\"tab-pane fade\" [ngClass]=\"{'active show': botIndexEdit == 0}\" id=\"botEdit{{suitIndexEdit}}{{botIndexEdit}}\"\n                                                        role=\"tabpanel\" [attr.aria-labelledby]=\"'nav-bot-tabEdit'+suitIndexEdit+botIndexEdit\">\n                                                        <div class=\"panel-body row px-3\" [formGroupName]=\"botIndexEdit\">\n                                                            <div class=\"form-group col-md-4\">\n                                                                <label for=\"botNameEdit\">Bot Name</label>\n                                                                <input type=\"text\" class=\"form-control\" id=\"botNameEdit{{suitIndexEdit}}{{botIndexEdit}}\"\n                                                                    formControlName=\"botNameEdit\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].controls.botNameEdit.errors}\">\n                                                                    <div *ngIf=\"submitted && w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].controls.botNameEdit.errors\" class=\"invalid-feedback\">\n                                                                        <div *ngIf=\"w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].controls.botNameEdit.errors\">Bot Name is required</div>\n                                                                    </div>\n                                                            </div>\n                                                            <div class=\"form-group col-md-4\" [hidden]=\"hideCostWeitageEdit && w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].value.botweightageEdit == 0\">\n                                                                <label for=\"weightageEdit\">Savings Weightage(%)</label>\n                                                                <input type=\"number\" min=\"1\" max=\"100\" size=\"1\" maxlength=\"3\" value='0' class=\"form-control\" id=\"weightageEdit{{suitIndexEdit}}{{botIndexEdit}}\" (change)=\"costWeitageCalEdit($event.target.value,botIndexEdit,suitIndexEdit)\"\n                                                                    formControlName=\"botweightageEdit\" [ngClass]=\"{ 'is-invalid': submitted && enterdCostSumEdit == 0}\" >\n                                                                    <div *ngIf=\"submitted && enterdCostSumEdit == 0\" class=\"invalid-error\">\n                                                                        Cost weightage is required\n                                                                    </div>\n                                                                    <div *ngIf=\"errorAlertEdit && hideCostWeitageEdit\" class=\"invalid-error\">\n                                                                      Please enter the value less than or equal to \"{{errorValueEdit}}\"!\n                                                                  </div>\n                                                            </div>\n                                                            <!-- <div class=\"form-group col-md-4\">\n                                                                <label for=\"serviceTypeEdit\">Service Type</label>\n                                                                <select class=\"custom-select\" formControlName=\"serviceTypeEdit\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].controls.serviceTypeEdit.errors}\">\n                                                                    <option selected value=\"\">Select</option>\n                                                                    <option *ngFor=\"let item of serviceType\" value=\"{{item.serviceType}}\" >{{item.serviceType}}</option>\n                                                                </select>\n                                                                <div *ngIf=\"submitted && w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].controls.serviceTypeEdit.errors\" class=\"invalid-feedback\">\n                                                                    <div *ngIf=\"w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].controls.serviceTypeEdit.errors\">Service Type is required</div>\n                                                                </div>\n                                                            </div> -->\n                                                            <div class=\"form-group col-md-12\">\n                                                                <label for=\"botInputEdit\">Bot Input</label>\n                                                                <textarea class=\"form-control\" id=\"botInputEdit{{suitIndexEdit}}{{botIndexEdit}}\" rows=\"16\"\n                                                                    formControlName=\"botInputEdit\" [ngClass]=\"{ 'is-invalid': submitted && w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].controls.botInputEdit.errors}\"></textarea>\n                                                                    <div *ngIf=\"submitted && w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].controls.botInputEdit.errors\" class=\"invalid-feedback\">\n                                                                        <div *ngIf=\"w[suitIndexEdit].controls.botDetailsListEdit.controls[botIndexEdit].controls.botInputEdit.errors\">Bot input is required</div>\n                                                                    </div>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"text-right\">\n                                                            <button type=\"submit\" class=\"btn bot-btn remove-bot\" (click)=\"removeBotEdit(suitIndexEdit,botIndexEdit)\" *ngIf = \"botDetailsEdit(suitIndexEdit).controls.length > 1\">Remove Bot</button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"text-right pt-3\">\n                                    <button type=\"submit\" class=\"btn bot-btn remove-bot\" (click)=\"removeSuiteEdit(suitIndexEdit)\" *ngIf = \"botcatalogueEdit().controls.length > 1\">Remove Suite</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n    <app-alert [data]=\"alertMessageModal\" *ngIf=\"alertdata && intake.intakeId==alertIndex\"></app-alert>\n    <div class=\"modal-footer automation-footer\">\n        <button type=\"button\" class=\"btn btn-secondary bot-btn\" data-dismiss=\"modal\" (click)=resetform()>Cancel</button>\n        <button type=\"submit\" class=\"btn btn-success submit-bot bot-btn\"\n        (click)='updateAutomate(intake,intake.intakeId)'>Submit</button>\n    </div>\n</div>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../../service/login.service';\nimport { IntakeService } from './../../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { error } from '@angular/compiler/src/util';\nimport { NumberDirective } from './../../../numbers.directive';\nimport { RealNumberDirective } from './../../../realNumbers.directive';\nimport { IDayCalendarConfig, DatePickerComponent } from \"ng2-date-picker\";\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { event } from 'jquery';\n\n@Component({\n  selector: 'app-intake-create',\n  templateUrl: './intake-create.component.html',\n  styleUrls: ['./intake-create.component.scss'],\n  providers: [DatePipe]\n})\n\nexport class IntakeCreateComponent implements OnInit {\n  @ViewChild(\"dateFromDp\") public dateFromDp: DatePickerComponent;\n  @ViewChild('fileInputCreate') fileInputsCreate: any;\n  public message: any;\n  public alertMessage: any = [];\n  public errorAlertDevice = false;\n  public errorAlertApp = false;\n  zeromessage:boolean=false\n  public messageroledevice = false;\n  public messageroleApp =false;\n  public alertdata = false;\n  intakeCreate: FormGroup;\n  filenamearray=[]\n  spcharmessage:any=false;\n  spclAllowed:any;\n  submitted = false;\n  fileInfo: any = [];\n  intakelist:any;\n  user: any;\n  coe: any;\n  spoc: any;\n  financialBenefits: any;\n  // comparison: any;\n  savings: any;\n  approver: any = {};\n  commonApprover: any = {};\n  createdIntake: any;\n  buttonSubmitted = false;\n  summaryOpened = false;\n   finalfilearray:any=[];\n   totalsize:any=''\n   allowedType:any=['application/pdf','application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/msword','application/vnd.openxmlformats-officedocument.wordprocessingml.document','application/vnd.openxmlformats-officedocument.presentationml.presentation']\n  complexity: any;\n  manualCost: any;\n  automationCost: any;\n  revenue: any;\n  costDifference: any;\n  firstMonthRevenue: any;\n  secondMonthRevenue: any;\n  thirdMonthRevenue: any;\n  ideanamearray=[];\n  firstMonthRoiPerc: any;\n  isideanameDuplicate=false\n  secondMonthRoiPerc: any;\n  thirdMonthRoiPerc: any;\n  firstMonthRoiNegative = false;\n  secondMonthRoiNegative = false;\n  thirdMonthRoiNegative = false;\n  roiPerc: any;\n  manualHours: any;\n  ratio: any;\n  automationHours: any;\n  costSaving: any;\n  hoursSaving: any;\n  sbiList: any;\n  nbiList: any;\n  fteRate: any;\n  nbiTypeSelected: any = [];\n  sbiTypeSelected: any = [];\n  complexityList: any;\n  businessUnitList: any;\n  selectedBusinessUnit: any;\n  selectedComplexity: any;\n  calcValues: any;\n  monthlyRevenue: any;\n  disabled = false;\n  ShowFilter = true;\n  limitSelection = true;\n  savingsReturned = false;\n  public days: any = [];\n  NBItableLength: any;\n  SBItableLength: any;\n  public sbitype = [];\n  public nbiTypeArray = [];\n  public otherDeviceName = false;\n  public otherApplicationName = false;\n  public sbiRoleInvalid = false;\n  public nbiRoleInvalid = false;\n  public sbitypeRole = [];\n  public nbitypeRole = [];\n  public validation = true;\n  public othersbiValue:any;\n  public othernbiValue:any;\n  // public cities: any = [];\n  ideaBenefitsDropdownSettings = {\n    singleSelection: false,\n    idField: 'businessBenefitId',\n    textField: 'businessBenefit',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 2,\n    enableCheckAll:false,\n    // limitSelection: 0,\n    allowSearchFilter: this.ShowFilter\n  }\n  nbiTypeDropdownSettings: any = {\n    singleSelection: false,\n    idField: 'id',\n    textField: 'nbitype',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 1,\n    limitSelection: 0,\n    allowSearchFilter: this.ShowFilter\n  };\n  sbiTypeDropdownSettings: any = {\n    singleSelection: false,\n    idField: 'id',\n    textField: 'sbitype',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 1,\n    limitSelection: 0,\n    allowSearchFilter: this.ShowFilter\n  };\n  public dayPickerConfig = <IDayCalendarConfig>{\n    format: \"YYYY-MM-DD\",\n    monthFormat: \"MMMM, YYYY\",\n    firstDayOfWeek: \"mo\",\n    min: this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd'),\n    max: \"\"\n  };\n  /*****************************/\n  benefitsList:any =[]\n  formValueBB:any=[];\n  /*****************************/\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    /********************************************/\n    // this.benefitsList = [\n    //   {id: 1, ideaBenefits: \"Automation Benefits\"},\n    //   {id: 19, ideaBenefits: \"Automation Benefits\"}\n    // ];\n    \n    /*********************************************/\n    var d = new Date();\n    var year = d.getFullYear();\n    var month = d.getMonth();\n    var day = d.getDate();\n    this.sbitype = [];\n    this.nbiTypeArray = [];\n    this.sbiRoleInvalid = false;\n    this.nbiRoleInvalid = false;\n    this.othersbiValue = '';\n    this.othernbiValue = '';\n\n    if(month==1 && day==29)\n      day=28;\n    //var c = new Date(year + 1, month, day);\n    this.dayPickerConfig.max = this.datePipe.transform(new Date(year + 1, month, day).toISOString(), 'yyyy-MM-dd');\n    this.SBItableLength = [];\n    this.NBItableLength = [];\n    this.SBItableLength.length = 0;\n    this.NBItableLength.length = 0;\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    for (let i = 1; i <= 31; i++) {\n      this.days.push(i);\n    }\n    // this.nbiTypeDropdownSettings.limitSelection = 4;\n    this.intakeService.getBusinessUnitList().subscribe(\n      val1 => {\n        this.businessUnitList = val1;\n        this.intakeService.getBusinessBenefitsList().subscribe(\n          val2 => {\n            this.benefitsList = val2;\n            this.intakeService.getComplexityList().subscribe(\n              val3 => {\n                this.complexityList = val3;\n                this.intakeService.getNBIList().subscribe(\n                  val4 => {\n                    this.nbiList = val4;\n                    // this.cities = this.nbiList;\n                    this.intakeService.getSBIList().subscribe(\n                      val5 => {\n                        this.sbiList = val5;\n                        this.intakeService.getFTErate().subscribe(\n                          val6 => {\n                            this.fteRate = val6;\n                          });\n                      });\n                  });\n              });\n          });\n      });\n      this.intakeService.getAllIntakes().subscribe(\n        val5=>\n        {\n           this.intakelist=val5\n          \n      console.log(\"listideaname\",this.intakelist)\n      this.intakelist.forEach(element => {\n        if(element.hasOwnProperty('ideaName')==true)\n        {\n          this.ideanamearray.push(element.ideaName)\n        }\n      });\n      \n      console.log('ideanamearray',this.ideanamearray)\n        })\n    this.intakeService.getcommonApprover().subscribe(\n      val6 => {\n        this.commonApprover = val6;\n      });\n    this.coe = 'Not Required';\n    this.spoc = 'No';\n    this.financialBenefits = 'No';\n    // this.comparison = 'No';\n    this.savings = 'OPEX Savings';\n    if (!this.user) {\n      this.router.navigateByUrl('loginmain');\n    }\n    this.intakeCreate = this.formBuilder.group({\n      submitter: [this.user.name, Validators.required],\n      dateFrom: [''],\n      businessUnitName: ['', Validators.required],\n      benefittingDirector: ['', Validators.required],\n      ideaName: ['', Validators.required],\n      ideaDescription: ['', Validators.required],\n      automationObjectives: ['', Validators.required],\n      averageDailyVolume: ['', Validators.required],\n      aet: ['', Validators.required],\n      // noOfDevices: ['', Validators.required],\n      noOfNBI: ['', Validators.required],\n      automationRatio: [''],\n      fteRate: ['', Validators.required],\n      // costPerFTE: ['', Validators.required],\n      noOfSBI: ['', Validators.required],\n      // noOfSystems: ['', Validators.required],\n      // deviceNames: ['', Validators.required],\n      typeOfNBI: [''],\n    //   primaryApprover: ['', Validators.required],\n      dataInterpretation: [''],\n      decisionMaking: [''],\n      manualActivity: [''],\n      actualFTE: ['', Validators.required],\n      typeOfSBI: [''],\n      requestedComplexity: ['', Validators.required],\n      noOfMonths: ['1', Validators.required],\n      // city: [this.selectedItems],\n      // noOfWorkingDays: ['', Validators.required]\n      // remarks: ['', Validators.required]\n      /***************************************************************/\n      ideaBenefits: ['', Validators.required],\n      benefitsForm: this.formBuilder.array([ ]),\n      /***************************************************************/\n    });\n  }\n\n  /********************************************************************/\n  benefitsForm(): FormArray {\n    return this.intakeCreate.get(\"benefitsForm\") as FormArray\n  }\n\n  createBenefitsForm():FormGroup{\n    return this.formBuilder.group({\n      ideaBenefitName:'',\n      description:['', [Validators.required, Validators.maxLength(500)]],\n    });\n  }\n\n  addIdeaBenefit():void {\n    this.benefitsForm().push(this.createBenefitsForm());\n    console.log(this.benefitsForm().value);\n  }\n\n  onideaBenefitsSelect(item: any){\n    this.addIdeaBenefit();\n    this.formValueBB.push(item);\n    console.log(this.formValueBB);\n  }\n  onideaBenefitsDeSelect(element) {\n    let index2 = this.formValueBB.findIndex(x => x.businessBenefit === element.businessBenefit);\n    this.formValueBB.splice(index2,1);\n    this.benefitsForm().removeAt(index2);\n  }\n  /********************************************************************/\n\n  onNbiItemSelect(item: any) {\n    this.nbiTypeArray = [];\n      this.intakeCreate.value.typeOfNBI.forEach(element => {\n        this.nbiTypeArray.push(element.nbitype);\n      });\n\n    this.nbiRoleInvalid = true;\n    if(item.nbitype == 'Other (Specify)'){\n        this.otherApplicationName = true;\n    }\n    this.nbitypeRole.push(\"\");\n  }\n  myTrim(x) {\n    return x.replace(/^\\s+|\\s+$/gm,'');\n  }\n  ideanameDuplicateCheck(name)\n  {\n    var userinputname=this.myTrim(name)\n    console.log(\"incre\",this.intakeCreate)\n    console.log(\"ide\",name)\n\n    if(this.ideanamearray.length >0 )\n    {\n      if(this.ideanamearray.includes(userinputname)==true)\n      {\n        this.isideanameDuplicate=true\n      }\n      else{\n        this.isideanameDuplicate=false\n      }\n    }\nconsole.log(\"ideaduplicate\",this.isideanameDuplicate)\n  }\n  onSbiItemSelect(item: any) {\n      this.sbitype = [];\n      this.intakeCreate.value.typeOfSBI.forEach(element => {\n        this.sbitype.push(element.sbitype);\n      });\n\n      this.sbiRoleInvalid = true;\n      if(item.sbitype == 'Other (Specify)'){\n          this.otherDeviceName = true;\n      }\n      this.sbitypeRole.push(\"\");\n      // for(let i=0; i < this.sbitypeRole.length; i++) {\n      //   (<HTMLSelectElement>document.getElementById('deviceRole_'+i)).value = this.sbitypeRole[i];\n      // }\n\n\n    //  if (this.intakeCreate.value.typeOfSBI.length != \"\") {\n    //   this.intakeCreate.value.typeOfSBI.forEach((element, index) => {\n    //     let pojo = {};\n    //     pojo['id'] = element.id;\n    //     pojo['sbitype'] = element.sbitype;\n    //     pojo['roleInAutomation'] = \"\";\n    //     sbiTypeList.push(pojo);\n    //     console.log(sbiTypeList);\n    //   });\n    // }\n  }\n  vaildationdevicerole(event,index)\n  {\n \nif(event.length >99)\n{\nthis.messageroledevice=true;\n(<HTMLInputElement>document.getElementById('deviceRole_'+index)).className = \"table-cell errorMessage\";\n}\nelse\n{\n  this.messageroledevice=false;\n  (<HTMLInputElement>document.getElementById('deviceRole_'+index)).className = \"table-cell\";\n}\n  }\n  vaildationApprole(event, index)\n  {\n \nif(event.length >99)\n{\nthis.messageroleApp=true;\n(<HTMLInputElement>document.getElementById('applicationRole_'+index)).className = \"table-cell errorMessage\";\n}\nelse\n{\n  this.messageroleApp=false;\n  (<HTMLInputElement>document.getElementById('applicationRole_'+index)).className = \"table-cell\";\n}\n  }\n  roleValidationSbi(){\n    let count = 0;\n    for(var i=0; i<this.intakeCreate.value.typeOfSBI.length; i++){\n      if((<HTMLSelectElement>document.getElementById('deviceRole_'+i)).value == ''){\n        count++;\n        break;\n      }\n      else{\n        this.sbitypeRole[i] = (<HTMLSelectElement>document.getElementById('deviceRole_'+i)).value;\n      }\n    }\n    if(count !=0 || this.intakeCreate.value.typeOfSBI.length!=this.SBItableLength.length){\n      this.sbiRoleInvalid = true;\n    }else{\n      this.sbiRoleInvalid = false;\n    }\n    console.log(this.sbitypeRole);\n  }\n\n  onPaste(event)\n  {\n    console.log(\"eventpaste\",event.clipboardData.getData('text'))\n    var value=/^[a-zA-Z0-9- ]*$/.test(event.clipboardData.getData('text'))\n    console.log(\"value\",value)\n  \n    if(value==false)\n    {\n      return false\n    }\n  \n  \n  }\n  vaildationmessageApp(event){\n    console.log(\"function is wo1rking\") \n    // let value=event.target.value\n    // var message='You have reached the maximum limit 100 charactesssr!'\n    if(event.target.value.length >99){\n      this.errorAlertApp = true;\n      // let myContainer = document.getElementById('appMessage') as HTMLInputElement;\n      // myContainer.value = message;\n      // (<HTMLSelectElement>document.getElementById('appMessage')).innerHTML=message\n    }\n    else{\n      this.errorAlertApp = false;\n    }\n  }\n  vaildationmessagedevice(event){\n    console.log(\"function is wo1rking\")\n    // let value=event.target.value\n    // var message='You have reached the maximum limit 100 charactesssr!'\n    if(event.target.value.length >99){\n      this.errorAlertDevice = true;\n      // debugger;\n      // let myContainer = document.getElementById('deviceMessage') as HTMLInputElement;\n      // myContainer.value = message;\n      // (<HTMLSelectElement>document.getElementById('deviceMessage')).innerHTML=message;\n    }\n  }\n\n  vaildationspcl_character(event){\n    var k;\n    if(event=='')\n    {\n      this.spcharmessage=false\n    }\n     k = event.which; \n     console.log(event.key)\n     \n     if(((k > 64 && k < 91) || (k > 96 && k < 123) || (k > 7 && k < 10) || k == 32 || (k > 47 && k < 58) || (k==20)) == false){\n      \n      this.spcharmessage=true\n     }\n     if(((k > 64 && k < 91) || (k > 96 && k < 123) || (k > 7 && k < 10) || k == 32 || (k > 47 && k < 58)) == true){\n      if(((event.key == '!') || (event.key == '@') || (event.key == '#') || (event.key == '$') || (event.key == '%') || (event.key == '^') || (event.key == '&') || (event.key == '*') || (event.key == '(') || (event.key == ')')) == true){\n        this.spcharmessage=true;\n      }else{\n        this.spcharmessage=false\n      }\n     }\n    //  console.log(\"expressionafter\",((k > 64 && k < 91) || (k > 96 && k < 123) || (k > 10 && k < 7) || k == 32 || (k > 47 && k < 58)))\n     \n     //         k = event.keyCode;  (Both can be used)\n     return (!this.spcharmessage); \n    //var originalpattern=/^([a-zA-Z0-9 _-]+)$/\n    // var pattern=/^[a-zA-Z0-9_]*$/\n    // console.log(\"sss\",this.f)\n    // console.log(\"cha\",event.which)\n    // console.log(\"ee\", String.fromCharCode(event.which));\n    //   var reg = event.target.value.match();\n    //   var expr = pattern.test(String.fromCharCode(event.which));\n    //   if(String.fromCharCode(event.which)=='')\n    //   {\n    //     this.spcharmessage=false\n    //   }\n    //   if (expr == false) {\n  \n    //     this.spcharmessage=true\n    //     console.log(\"d\");\n    //     event.preventDefault();\n    //     return false;\n    //   }\n    //   else\n    //   {\n    //     this.spcharmessage=false\n    //   }\n  }\n  roleValidationNbi(){\n    let count = 0;\n    for(var i=0; i<this.intakeCreate.value.typeOfNBI.length; i++){\n      if((<HTMLSelectElement>document.getElementById('applicationRole_'+i)).value == ''){\n        count++;\n        break;\n      }\n      else{\n        this.nbitypeRole[i] = (<HTMLSelectElement>document.getElementById('applicationRole_'+i)).value;\n      }\n    }\n    if(count !=0 || this.intakeCreate.value.typeOfNBI.length != this.NBItableLength.length){\n      this.nbiRoleInvalid = true;\n    }\n    else{\n      this.nbiRoleInvalid = false;\n    }\n  }\n  otherFieldValidation(event){\n    if(event == ''){\n      this.otherDeviceName = true;\n    }\n    else{\n      this.otherDeviceName = false;\n      this.othersbiValue = (<HTMLSelectElement>document.getElementById('other-Name')).value;\n    }\n  }\n\n  otherFieldValidationApp(event){\n    if(event == ''){\n      this.otherApplicationName = true;\n    }\n    else{\n      this.otherApplicationName = false;\n      this.othernbiValue = (<HTMLSelectElement>document.getElementById('other-Name-app')).value;\n    }\n  }\n\n  onItemDeSelect(item: any){\n    const index = this.sbitype.indexOf(item.sbitype);\n    if (index > -1) {\n      this.sbitypeRole.splice(index, 1);\n      this.sbitype.splice(index, 1);\n    }\n    if(item.sbitype == 'Other (Specify)'){\n      this.otherDeviceName = false;\n      this.othersbiValue = \"\";\n    }\n    let count = 0;\n    for(var i=0; i<this.intakeCreate.value.typeOfSBI.length; i++){\n      if((<HTMLSelectElement>document.getElementById('deviceRole_'+i)).value == ''){\n        count++;\n        break;\n      }\n    }\n    if(count !=0 || this.intakeCreate.value.typeOfSBI.length!=this.SBItableLength.length){\n      this.sbiRoleInvalid = true;\n    }else{\n      this.sbiRoleInvalid = false;\n    }\n    console.log(this.sbitypeRole);\n  }\n  onItemDeSelectApp(item:any){\n    const index = this.nbiTypeArray.indexOf(item.nbitype);\n    if (index > -1) {\n      this.nbitypeRole.splice(index, 1);\n      this.nbiTypeArray.splice(index, 1);\n    }\n    if(item.nbitype == 'Other (Specify)'){\n      this.otherApplicationName = false;\n      this.othernbiValue = \"\";\n    }\n    // const index = this.nbiTypeArray.indexOf(item.nbitype, 0);\n    // if (index > -1) {\n    //   this.nbiTypeArray.splice(index, 1);\n    // }\n    let count = 0;\n    for(var i=0; i<this.intakeCreate.value.typeOfNBI.length; i++){\n      if((<HTMLSelectElement>document.getElementById('applicationRole_'+i)).value == ''){\n        count++;\n        break;\n      }\n    }\n    if(count !=0 || this.intakeCreate.value.typeOfNBI.length != this.NBItableLength.length){\n      this.nbiRoleInvalid = true;\n    }\n    else{\n      this.nbiRoleInvalid = false;\n    }\n  }\n  calculateRatio() {\n    this.ratio = (this.intakeCreate.value.dataInterpretation * 1) + (this.intakeCreate.value.manualActivity * 1) + (this.intakeCreate.value.decisionMaking * 1);\n    this.ratio = this.intakeCreate.value.aet - this.ratio;\n    this.ratio = (this.ratio * 100) / this.intakeCreate.value.aet;\n    this.ratio = this.ratio.toFixed();\n    this.intakeCreate.patchValue({\n      automationRatio: this.ratio,\n      dataInterpretation: this.intakeCreate.value.dataInterpretation * 1,\n      manualActivity: this.intakeCreate.value.manualActivity * 1,\n      decisionMaking: this.intakeCreate.value.decisionMaking * 1,\n    });\n  }\n  limitNBI(data) {\n    if(data == 0){\n      this.nbiRoleInvalid = false;\n      this.otherApplicationName = false;\n    }\n    else{\n      this.nbiRoleInvalid = true;\n    }\n    this.nbitypeRole=[];\n    this.othernbiValue = \"\";\n    this.nbiTypeArray =[];\n    this.NBItableLength = [];\n    this.NBItableLength.length = data;\n    this.intakeCreate.patchValue({\n      typeOfNBI: '',\n    });\n    this.nbiTypeDropdownSettings = Object.assign({}, this.nbiTypeDropdownSettings, { limitSelection: this.intakeCreate.value.noOfNBI * 1 });\n  }\n  limitSBI(data) {\n    if(data == 0){\n      this.sbiRoleInvalid = false;\n      this.otherDeviceName = false;\n    }\n    else{\n      this.sbiRoleInvalid = true;\n    }\n    this.sbitypeRole=[];\n    this.othersbiValue\n    this.othersbiValue = \"\";\n    this.sbitype = [];\n    this.SBItableLength = [];\n    this.SBItableLength.length = data;\n    this.intakeCreate.patchValue({\n      typeOfSBI: '',\n    });\n    this.sbiTypeDropdownSettings = Object.assign({}, this.sbiTypeDropdownSettings, { limitSelection: this.intakeCreate.value.noOfSBI * 1 });\n  }\n  onSelectAll(items: any) {\n    // console.log('onSelectAll', items);\n  }\n  toogleShowFilter() {\n    this.ShowFilter = !this.ShowFilter;\n    this.nbiTypeDropdownSettings = Object.assign({}, this.nbiTypeDropdownSettings, { allowSearchFilter: this.ShowFilter });\n  }\n\n  changeCOEreq(event: any) {\n    this.coe = event.target.value;\n  }\n\n  selectBusinessUnit(event: any) {\n    if (event.target.value === \"\") {\n      this.approver = {};\n      this.intakeCreate.patchValue({\n        // primaryApprover: '',\n        benefittingDirector: ''\n      });\n    } else {\n      this.approver = this.businessUnitList.filter(item => item.id === (event.target.value * 1));\n      this.approver = this.approver[0];\n      this.selectedBusinessUnit = this.approver.teamName;\n      this.approver = this.approver.department.director;\n      // this.intakeCreate.value.benefittingDirector = this.approver.name;\n      // this.intakeCreate.value.primaryApprover = this.approver.id;\n      this.intakeCreate.patchValue({\n        // primaryApprover: this.commonApprover.role.roleId,\n        benefittingDirector: this.approver.name\n      });\n    }\n  }\n\n  changeSPOCreq(event: any) {\n    this.spoc = event.target.value;\n  }\n\n  changeFinancialBenefits(event: any) {\n    this.financialBenefits = event.target.value;\n  }\n\n  // changecomparisonreq(event: any) {\n  //   this.comparison = event.target.value;\n  // }\n\n  changeSavingsType(event: any) {\n    this.savings = event.target.value;\n  }\n\n  get f() { return this.intakeCreate.controls; }\n\n  onFileSelectCreate(input: HTMLInputElement): void {\n    console.log(\"arraylist\",input,this.filenamearray,this.finalfilearray)\n    //console.log(\"filenameduplication\",this.filenameduplication('addharcardcopy.pdf'))\n      this.totalsize=this.checkFilesizeCreate(input)\n   \n    // console.log('file', input.files[0].size);\n    for (let i = 0; i < input.files.length; i++) {\n      if (this.allowedType.includes(input.files[i].type)==true && this.totalsize <= 5242880  && this.filenameduplication(input.files[i].name)==false) {\n        this.fileInfo = this.fileInfo.concat(input.files[i]);\n        console.log(\"fileinf\",this.filenameduplication(input.files[i].name))\n        this.filenamearray.push(input.files[i].name)\n      } else {\n     //   console.log('Please select Word Documents less than 5MB');\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"Please select the documents of size less than 5MB(Accepted file formats: .pdf, .docx, .doc, .pptx, .csv, .xls, .xlsx)\",\n        }];\n       if(this.filenameduplication(input.files[i].name)==true && this.filenamearray.length > 0)\n        {\n          \n          this.alertMessage=[{\n            \"type\": \"danger\", \"close\": true,\n            \"content\":input.files[i].name+ ' is already been added',\n          }]\n        }\n        setTimeout(function () {\n          this.alertdata = false;\n          // window.location.reload();\n        }.bind(this), 3000);\n      }\n    }\n    this.fileInputsCreate.nativeElement.value = '';\n    console.log('files', this.fileInfo);\n    // this.fileInfo = this.fileInfo.concat(Array.from(input.files));\n  }\n\n  removeFileCreate(index,filename) {\n    console.log('this.os working')\n    // console.log(index);\n    this.fileInfo.splice(index, 1);\n    this.finalfilearray.splice(index,1)\n    this.filenamearray=this.filenamearray.filter(e=>e!==filename)\n    console.log(\"neww arry\",this.filenamearray)\n  }\n  filenameduplication(files) {\n    console.log(\"filename\",this.filenamearray,files)\n   let filename=false\n    if(this.filenamearray.length > 0)\n    {\n  let array= this.filenamearray.some(x=>\n      {\nif(x==files)\n{\n  return true\n}\nreturn false\n    })\n     filename=array\n    \n    }\n    console.log('fileename',filename)\n    return filename\n\n \n  }\n  checkFilesizeCreate(files) {\n\n    for (let i = 0; i < files.files.length; i++) {\n      if (this.allowedType.includes(files.files[i].type)==true && this.totalsize <= 5242880 && this.filenameduplication(files.files[i].name)==false) {\n       \n      this.finalfilearray = this.finalfilearray.concat(files.files[i]);\n      console.log(\"filesarray\", this.finalfilearray)\n      }\n    }\n    console.log(\"finalfilearray\", this.finalfilearray)\n\n    var sum = 0\n    // if (this.finalfilearray.length >= 1) {\n \n      this.finalfilearray.filter((word, index) => {\n \n        sum = (index >= 1 ? sum + word.size : word.size);\n       \n      });\n\n  //  }\n    return sum\n  }\n\n  saveDraft() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.intakeCreate.invalid) {\n      return;\n    }\n    // for(var i=0; i<this.benefitsForm().controls.length; i++){\n    //   let businessBenefits ={}\n    //   businessBenefits['name'] = this.benefitsForm().controls[i].value.\n    // }\n    let benefitArry = [];\n    for(var i=0; i<this.benefitsForm().controls.length; i++){\n      let pojobenefits = {};\n      pojobenefits['mapId'] = 0;\n      let businessBenefit = {};\n      businessBenefit['businessBenefitId'] = this.formValueBB[i].businessBenefitId;\n      pojobenefits['businessBenefit'] = businessBenefit;\n      pojobenefits['description'] = this.benefitsForm().controls[i].value.description;\n      benefitArry.push(pojobenefits);\n    }\n    let nbiTypeList = [];\n    let sbiTypeList = [];\n    if (this.intakeCreate.value.typeOfNBI.length != \"\") {\n      this.intakeCreate.value.typeOfNBI.forEach((element, index) => {\n        let pojo = {};\n        // console.log(element);\n        pojo['id'] = element.id;\n        nbiTypeList.push(pojo);\n        console.log(pojo);\n      });\n    }\n\n    this.nbiTypeSelected = this.intakeCreate.value.typeOfNBI;\n    this.sbiTypeSelected = this.intakeCreate.value.typeOfSBI;\n\n    if (this.intakeCreate.value.typeOfSBI.length != \"\") {\n      this.intakeCreate.value.typeOfSBI.forEach((element, index) => {\n        let pojo = {};\n        pojo['id'] = element.id;\n        sbiTypeList.push(pojo);\n      });\n    }\n\n    let deviceNames = [];\n    let applicationNames = [];\n    if (this.intakeCreate.value.typeOfSBI.length >= 1) {\n      for (let i = 0; i < this.intakeCreate.value.typeOfSBI.length; i++) {\n        let pojo = {};\n        if((<HTMLSelectElement>document.getElementById('deviceName_' + i)).textContent == \"Other (Specify)\"){\n          pojo['devicename'] = (<HTMLSelectElement>document.getElementById('other-Name')).value;\n          pojo['otherFlag'] = \"Other (Specify)\";\n        }\n        else{\n          pojo['devicename'] = (<HTMLSelectElement>document.getElementById('deviceName_' + i)).textContent;\n          pojo['otherFlag'] = \"\";\n        }\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('deviceRole_' + i)).value;\n        deviceNames.push(pojo);\n      }\n    }\n    if (this.intakeCreate.value.typeOfNBI.length >= 1) {\n      for (let i = 0; i < this.intakeCreate.value.typeOfNBI.length; i++) {\n        let pojo = {};\n        if((<HTMLSelectElement>document.getElementById('applicationName_' + i)).textContent == \"Other (Specify)\"){\n          pojo['applicationName'] = (<HTMLSelectElement>document.getElementById('other-Name-app')).value;\n          pojo['otherFlag'] = \"Other (Specify)\";\n        }else{\n          pojo['applicationName'] = (<HTMLSelectElement>document.getElementById('applicationName_' + i)).textContent;\n          pojo['otherFlag'] = \"\";\n        }\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('applicationRole_' + i)).value;\n        applicationNames.push(pojo);\n      }\n    }\n\n    this.buttonSubmitted = true;\n    let draftIntakeValues = {\n      rfStatus:\n      {\n        status: 'DRAFT'\n        // statusdesc: 'draft'\n      },\n      rfEffort: {\n        savingType: this.savings,\n        actualFTE: this.intakeCreate.value.actualFTE,\n        avgDailyVolume: this.intakeCreate.value.averageDailyVolume,\n        aet: this.intakeCreate.value.aet,\n        manualActivityCost: this.manualCost,\n        fteRate: {\n          fteRateId: this.intakeCreate.value.fteRate\n        },\n        costPerFTE: 50,\n        // noOfDevices: this.intakeCreate.value.noOfDevices,\n        noOfNBI: this.intakeCreate.value.noOfNBI,\n        noOfSBI: this.intakeCreate.value.noOfSBI,\n        noOfApplication: this.intakeCreate.value.noOfNBI,\n        noOfDeviceInterfaces: this.intakeCreate.value.noOfSBI,\n        deviceNames: deviceNames,\n        applicationsNames: applicationNames,\n        // noOfSystems: this.intakeCreate.value.noOfSystems,\n        typeOfNBI: nbiTypeList,\n        typeOfSBI: sbiTypeList,\n        requestedComplexity: this.intakeCreate.value.requestedComplexity,\n        noOfMonths: this.intakeCreate.value.noOfMonths,\n        noOfWorkingDays: 22,\n        assignedComplexity: {\n          complexityCode: this.complexity.complexityCode\n        },\n        automationCost: this.automationCost,\n        revenue: this.revenue,\n        dataInterpretation: this.intakeCreate.value.dataInterpretation,\n        manualActivity: this.intakeCreate.value.manualActivity,\n        automationRatio: this.intakeCreate.value.automationRatio,\n        decisionMaking: this.intakeCreate.value.decisionMaking,\n        spocrequirement: this.spoc,\n        // isValidationRequired: this.comparison\n      },\n      businessBenefit: benefitArry,\n      targetImplementationDate: this.intakeCreate.value.dateFrom,\n      financialBenefits: this.financialBenefits,\n      automationBenefits: this.intakeCreate.value.ideaBenefits,\n      automationObjectives: this.intakeCreate.value.automationObjectives,\n      team: {\n        id: this.intakeCreate.value.businessUnitName * 1,\n      },\n      benefitingdirector: this.approver.name,\n      ideaName: this.intakeCreate.value.ideaName,\n      ideaDescription: this.intakeCreate.value.ideaDescription,\n      pathupload: '',\n      remarks: '',\n      modifiedby: this.user.username,\n      status: 'Draft',\n      // approver: this.commonApprover.role,\n      approvercomments: '',\n      createddate: this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n      modifieddate: this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss')\n    };\n\n    let intakeDraftPojo = {\n      rfIntake: draftIntakeValues,\n      monthlyRevenue: this.monthlyRevenue\n    };\n    this.intakeService.saveIntake(JSON.stringify(intakeDraftPojo), this.user.id).subscribe(\n      val => {\n        this.createdIntake = val;\n        if (this.fileInfo && this.fileInfo.length > 0) {\n          this.intakeService.fileUpload(this.fileInfo, this.createdIntake.intakeId).subscribe(\n            val2 => {\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"success\", \"close\": true,\n                \"content\": \"Intake saved as draft\",\n              }];\n              setTimeout(function () {\n                this.alertdata = false;\n                window.location.reload();\n              }.bind(this), 1000);\n            },\n            error => {\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"<strong>Failed</strong> to save as draft\",\n              }\n              ];\n              setTimeout(function () {\n                this.alertdata = false;\n                window.location.reload();\n              }.bind(this), 3000);\n            });\n        } else {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"success\", \"close\": true,\n            \"content\": \"Intake saved as draft\",\n          }];\n          setTimeout(function () {\n            this.alertdata = false;\n            window.location.reload();\n          }.bind(this), 1000);\n        }\n      },\n      error => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>Failed</strong> to save as draft\",\n        }\n        ];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 3000);\n      });\n  }\n  vaildateZero(event)\n  {\n    //console.log(\"funcitonworking\",event)\nif(event==0 && event!='')\n{\n  this.zeromessage=true\n\n}\nelse\n{\n  this.zeromessage=false\n}\n  }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.intakeCreate.invalid) {\n      return;\n    }\n    let benefitArry = [];\n    for(var i=0; i<this.benefitsForm().controls.length; i++){\n      let pojobenefits = {};\n      pojobenefits['mapId'] = 0;\n      let businessBenefit = {};\n      businessBenefit['businessBenefitId'] = this.formValueBB[i].businessBenefitId;\n      pojobenefits['businessBenefit'] = businessBenefit;\n      pojobenefits['description'] = this.benefitsForm().controls[i].value.description;\n      benefitArry.push(pojobenefits);\n    }\n    let nbiTypeList = [];\n    let sbiTypeList = [];\n    if (this.intakeCreate.value.typeOfNBI.length != \"\") {\n      this.intakeCreate.value.typeOfNBI.forEach((element, index) => {\n        let pojo = {};\n        // console.log(element);\n        pojo['id'] = element.id;\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('applicationRole_' + index)).value;\n        nbiTypeList.push(pojo);\n      });\n    }\n\n    this.nbiTypeSelected = this.intakeCreate.value.typeOfNBI;\n    this.sbiTypeSelected = this.intakeCreate.value.typeOfSBI;\n    if (this.intakeCreate.value.typeOfSBI.length != \"\") {\n      this.intakeCreate.value.typeOfSBI.forEach((element, index) => {\n        let pojo = {};\n        pojo['id'] = element.id;\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('deviceRole_' + index)).value;\n        sbiTypeList.push(pojo);\n      });\n    }\n\n    let deviceNames = [];\n    let applicationNames = [];\n    if (this.intakeCreate.value.typeOfSBI.length >= 1) {\n      for (let i = 0; i < this.intakeCreate.value.typeOfSBI.length; i++) {\n        let pojo = {};\n        if((<HTMLSelectElement>document.getElementById('deviceName_' + i)).textContent == \"Other (Specify)\"){\n          pojo['devicename'] = (<HTMLSelectElement>document.getElementById('other-Name')).value;\n          pojo['otherFlag'] = \"Other (Specify)\";\n        }\n        else{\n          pojo['devicename'] = (<HTMLSelectElement>document.getElementById('deviceName_' + i)).textContent;\n          pojo['otherFlag'] = \"\";\n        }\n        pojo['id'] = this.intakeCreate.value.typeOfSBI[i].id;\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('deviceRole_' + i)).value;\n        deviceNames.push(pojo);\n      }\n    }\n    if (this.intakeCreate.value.typeOfNBI.length >= 1) {\n      for (let i = 0; i < this.intakeCreate.value.typeOfNBI.length; i++) {\n        let pojo = {};\n        if((<HTMLSelectElement>document.getElementById('applicationName_' + i)).textContent == \"Other (Specify)\"){\n          pojo['applicationName'] = (<HTMLSelectElement>document.getElementById('other-Name-app')).value;\n          pojo['otherFlag'] = \"Other (Specify)\";\n        }else{\n          pojo['applicationName'] = (<HTMLSelectElement>document.getElementById('applicationName_' + i)).textContent;\n          pojo['otherFlag'] = \"\";\n        }\n        pojo['id'] = this.intakeCreate.value.typeOfNBI[i].id;\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('applicationRole_' + i)).value;\n        applicationNames.push(pojo);\n      }\n    }\n\n    this.buttonSubmitted = true;\n    let createIntakeValues = {\n      rfStatus:\n      {\n        status: 'PENDING'\n      },\n      rfEffort: {\n        savingType: this.savings,\n        actualFTE: this.intakeCreate.value.actualFTE,\n        avgDailyVolume: this.intakeCreate.value.averageDailyVolume,\n        aet: this.intakeCreate.value.aet,\n        manualActivityCost: this.manualCost,\n        costPerFTE: 50,\n        fteRate: {\n          fteRateId: this.intakeCreate.value.fteRate\n        },\n        // noOfDevices: this.intakeCreate.value.noOfDevices,\n        noOfNBI: this.intakeCreate.value.noOfNBI,\n        noOfSBI: this.intakeCreate.value.noOfSBI,\n        noOfApplication: this.intakeCreate.value.noOfNBI,\n        noOfDeviceInterfaces: this.intakeCreate.value.noOfSBI,\n        deviceNames: deviceNames,\n        applicationsNames: applicationNames,\n        // noOfSystems: this.intakeCreate.value.noOfSystems,\n        typeOfNBI: nbiTypeList,\n        typeOfSBI: sbiTypeList,\n        requestedComplexity: this.intakeCreate.value.requestedComplexity,\n        noOfMonths: this.intakeCreate.value.noOfMonths,\n        noOfWorkingDays: 22,\n        assignedComplexity: {\n          complexityCode: this.complexity.complexityCode\n        },\n        automationCost: this.automationCost,\n        revenue: this.revenue,\n        dataInterpretation: this.intakeCreate.value.dataInterpretation,\n        manualActivity: this.intakeCreate.value.manualActivity,\n        automationRatio: this.intakeCreate.value.automationRatio,\n        decisionMaking: this.intakeCreate.value.decisionMaking,\n        spocrequirement: this.spoc,\n        // isValidationRequired: this.comparison\n      },\n      businessBenefit: benefitArry,\n      targetImplementationDate: this.intakeCreate.value.dateFrom,\n      financialBenefits: this.financialBenefits,\n      automationBenefits: this.intakeCreate.value.ideaBenefits,\n      automationObjectives: this.intakeCreate.value.automationObjectives,\n      team: {\n        id: this.intakeCreate.value.businessUnitName * 1,\n      },\n      benefitingdirector: this.approver.name,\n      ideaName: this.intakeCreate.value.ideaName,\n      ideaDescription: this.intakeCreate.value.ideaDescription,\n      pathupload: '',\n      remarks: '',\n      modifiedby: this.user.username,\n      status: 'Pending',\n      // approver: this.commonApprover.role,\n      approvercomments: '',\n      createddate: this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n      modifieddate: this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss')\n    };\n\n    let intakeCreatePojo = {\n      rfIntake: createIntakeValues,\n      monthlyRevenue: this.monthlyRevenue\n    };\n    this.intakeService.createIntake(JSON.stringify(intakeCreatePojo), this.user.id).subscribe(\n      val => {\n        this.createdIntake = val;\n        console.log(this.createdIntake);\n        if (this.fileInfo && this.fileInfo.length > 0) {\n          this.intakeService.fileUpload(this.fileInfo, this.createdIntake.intakeId).subscribe(\n            val3 => {\n              // console.log('fileupload', val3);\n              // this.createdIntake.rfUploadFile = val3;\n              let maildata = {\n                mailContent: '<b>' + this.intakeCreate.value.ideaName + '</b> has been submitted for approval by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n                to: '',\n                cc: '',\n                Bcc: '',\n                testingRecipients: {\n                  to: this.commonApprover.email.value,\n                  cc: this.user.email,\n                  Bcc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com'\n                },\n                subject: 'INTAKE-Submitted for Approval'\n              };\n              if(this.createdIntake.message  && this.createdIntake.message.includes('failed') && this.createdIntake.message.includes('Jira')) {\n                maildata.mailContent += '<br><br><span style=\"color:red;\"><b>Note:</b> Failed to update in Jira.</span>';\n              }\n              this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n                val4 => {\n                  this.message = val4;\n                  if (this.message.response == 'Mail Sent Successfully' && this.createdIntake.message) {\n                    this.alertdata = true;\n                    this.alertMessage = [{\n                      \"type\": \"danger\", \"close\": true,\n                      \"content\": this.createdIntake.message,\n                    }];\n                    setTimeout(function () {\n                      this.alertdata = false;\n                      window.location.reload();\n                    }.bind(this), 3000);\n                  } else if (this.message.response == 'Mail Sent Successfully') {\n                    this.alertdata = true;\n                    this.alertMessage = [{\n                      \"type\": \"success\", \"close\": true,\n                      \"content\": \"Intake submitted successfully\",\n                    }];\n                    setTimeout(function () {\n                      this.alertdata = false;\n                      window.location.reload();\n                    }.bind(this), 1000);\n                  } else {\n                    this.alertdata = true;\n                    this.alertMessage = [{\n                      \"type\": \"danger\", \"close\": true,\n                      \"content\": \"<strong>Failed</strong> to send mail\",\n                    }\n                    ];\n                    setTimeout(function () {\n                      this.alertdata = false;\n                      window.location.reload();\n                    }.bind(this), 3000);\n                  }\n                });\n              // this.intakeService.editIntake(JSON.stringify(createIntakeValues), this.createdIntake.intakeId).subscribe(\n              //   val1 => {\n\n              //   });\n            });\n        } else {\n          let maildata = {\n            mailContent: '<b>' + this.intakeCreate.value.ideaName + '</b> has been submitted for approval by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n            to: '',\n            cc: '',\n            Bcc: '',\n            testingRecipients: {\n              to: this.commonApprover.email.value,\n              cc: this.user.email,\n              Bcc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com'\n            },\n            subject: 'INTAKE-Submitted for Approval'\n          };\n          if(this.createdIntake.message  && this.createdIntake.message.includes('failed') && this.createdIntake.message.includes('Jira')) {\n            maildata.mailContent += '<br><br><span style=\"color:red;\"><b>Note:</b> Failed to update in Jira.</span>';\n          }\n          this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n            val4 => {\n              this.message = val4;\n              if (this.message.response == 'Mail Sent Successfully' && this.createdIntake.message) {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"danger\", \"close\": true,\n                  \"content\": this.createdIntake.message,\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 3000);\n              } else if (this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": \"Intake submitted successfully\",\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"danger\", \"close\": true,\n                  \"content\": \"<strong>Failed</strong> to send mail\",\n                }\n                ];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 3000);\n              }\n            });\n        }\n      },\n      error1 => {\n        console.log('error', error1);\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": error1.message,\n        }\n        ];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 3000);\n      });\n  }\n\n  public greaterThan(subj, num) {\n    return subj > num;\n  }\n\n  public lesserThan(subj, num) {\n    return subj < num;\n  }\n\n  public setStyle(subj, num) {\n    var styleObj={'background-color':''}\n   \n        if(subj==num)\n        {\n         styleObj['background-color']=\"#d0d0c5\"\n        }\n        if(subj>num)\n        {\n         styleObj['background-color']=\"#03bd5a\"\n        }\n        if(subj<num)\n        {\n         styleObj['background-color']=\"#ff9947\"\n        }\n        return styleObj\n        \n     }\n  viewSummary() {\n    this.savingsReturned = false;\n    if (this.summaryOpened === true) {\n      this.summaryOpened = false;\n    } else {\n      this.selectedComplexity = this.complexityList.filter(item => item.complexityCode === (this.intakeCreate.value.requestedComplexity * 1));\n      this.selectedComplexity = this.selectedComplexity[0];\n      this.summaryOpened = true;\n      // if (this.intakeCreate.value.noOfDevices === \"\" || !this.intakeCreate.value.noOfDevices) {\n      //   this.intakeCreate.value.noOfDevices = 0;\n      // }\n      if (this.intakeCreate.value.noOfSBI === \"\" || !this.intakeCreate.value.noOfSBI) {\n        this.intakeCreate.value.noOfSBI = 0;\n      }\n      // if (this.intakeCreate.value.noOfSystems === \"\" || !this.intakeCreate.value.noOfSystems) {\n      //   this.intakeCreate.value.noOfSystems = 0;\n      // }\n      if (this.intakeCreate.value.noOfNBI === \"\" || !this.intakeCreate.value.noOfNBI) {\n        this.intakeCreate.value.noOfNBI = 0;\n      }\n      let getComplexityValues = {\n        // noOfDevices: (this.intakeCreate.value.noOfDevices * 1),\n        noOfNorthBoundInterface: (this.intakeCreate.value.noOfNBI * 1),\n        noOfSouthBoundInterface: (this.intakeCreate.value.noOfSBI * 1),\n        // noOfSystems: (this.intakeCreate.value.noOfSystems * 1)\n      };\n      this.intakeService.getComplexity(getComplexityValues).subscribe(\n        val => {\n          this.complexity = val;\n          let roiCalcValues = {\n            actualFTE: this.intakeCreate.value.actualFTE,\n            averageDailyVolume: this.intakeCreate.value.averageDailyVolume,\n            aet: this.intakeCreate.value.aet,\n            noOfWorkingDays: 22,\n            noOfMonths: this.intakeCreate.value.noOfMonths,\n            timeDuration: this.complexity.timeDuration,\n            costPerFTE: this.intakeCreate.value.fteRate,\n            ftecostPerAutomation: 50,\n            costPerAutomation: this.complexity.costPerAutomation\n          };\n          this.intakeService.getROICalculation(roiCalcValues).subscribe(\n            val1 => {\n              this.savingsReturned = true;\n              this.calcValues = val1;\n              this.monthlyRevenue = this.calcValues.monthlyRevenue;\n              this.calcValues = this.calcValues.calculation;\n              this.manualHours = this.calcValues.manualHours.toFixed();\n              this.manualCost = this.calcValues.manualCost.toFixed();\n              // this.automationHours = this.calcValues.automationHours.toFixed();\n              this.automationCost = this.calcValues.automationCost.toFixed();\n              this.hoursSaving = this.calcValues.hoursSaving.toFixed();\n              this.costSaving = this.calcValues.costSaving.toFixed();\n              this.roiPerc = this.calcValues.roiPerc.toFixed();\n              this.revenue = this.calcValues.revenue.toFixed();\n              console.log('complexity', val1);\n            });\n          console.log('complexity', val);\n\n        });\n    }\n  }\n\n  resetForm() {\n    this.intakeCreate.reset();\n    this.fileInfo = [];\n    this.NBItableLength = [];\n    this.NBItableLength.length = 0;\n    this.intakeCreate.patchValue({\n      typeOfNBI: '',\n    });\n    this.nbiTypeDropdownSettings = Object.assign({}, this.nbiTypeDropdownSettings, { limitSelection: this.intakeCreate.value.noOfNBI * 1 });\n    this.SBItableLength = [];\n    this.SBItableLength.length = 0;\n    this.intakeCreate.patchValue({\n      typeOfSBI: '',\n    });\n    this.sbiTypeDropdownSettings = Object.assign({}, this.sbiTypeDropdownSettings, { limitSelection: this.intakeCreate.value.noOfSBI * 1 });\n    this.ngOnInit();\n    let element: HTMLElement = document.getElementById('btnCreateModalClose') as HTMLElement;\n    element.click();\n    this.filenamearray=[]\n  }\n}\n","<div class=\"modal-content\">\n    <div class=\"modal-header\">\n        <i class=\"fa fa-file mr-3\" aria-hidden=\"true\"></i>\n        <h6 class=\"modal-title\" id=\"exampleModalLongTitle\">NEW IDEA SUBMISSION</h6>\n        <button type=\"button\" id=\"btnCreateModalClose\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <form [formGroup]=\"intakeCreate\">\n        <div class=\"modal-body p-0\">\n            <div class=\"create-body\">\n                <app-alert [data]=\"alertMessage\" class=\"intake-alert\" *ngIf=\"alertdata\"></app-alert>\n                <div class=\"header\" id=\"headingOne\">\n                    <div class=\"mb-0\">\n                        <button class=\"btn btn-link trg-open\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\n                            aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            General Info<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                                aria-hidden=\"true\"></i>\n                        </button>\n\n                    </div>\n                </div>\n\n                <div id=\"collapseOne\" class=\"collapse show trg-show\">\n                    <div class=\"card-body-collapse\">\n                        <div class=\"form-row\">\n                            <div class=\"col-md-3 \" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Submitter of the Idea\">\n                                <label for=\"validationCustom01\">Submitter <sup class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"submitter\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.submitter.errors }\" readonly />\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Name of the business unit\">\n                                <label for=\"validationCustom02\">Team Name <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <select *ngIf=\"businessUnitList\" class=\"custom-select\"\n                                    formControlName=\"businessUnitName\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.businessUnitName.errors }\"\n                                    (change)=\"selectBusinessUnit($event)\">\n                                    <option selected value=\"\">Select Team Name</option>\n                                    <option *ngFor=\"let businessUnit of businessUnitList\"\n                                        [value]=\"businessUnit.id\">{{businessUnit.teamName}}</option>\n                                </select>\n                            </div>\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Head of the selected business unit\">\n                                <label for=\"\">Governance Team<sup class=\"mandatory-alert\">*</sup></label>\n                                <select class=\"custom-select\" formControlName=\"primaryApprover\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.primaryApprover.errors }\">\n                                    <option selected value=\"\">Select Approver</option>\n                                    <option *ngIf=\"(commonApprover|json) != '{}'\" [value]=\"commonApprover?.role.roleId\">\n                                        {{commonApprover?.role.roleCode}}\n                                    </option>\n                                    [selected]=\"intakeCreate.value.primaryApprover == approver.id\"\n                                </select>\n                            </div> -->\n                            <!-- <div class=\"col-md-3\">\n                                <label for=\"\">Secondary Approver</label>\n                                <input type=\"text\" value=\"Richard Abraham\" class=\"form-control\" disabled />\n                            </div> -->\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Head of the selected business unit\">\n                                <label for=\"validationCustom01\">Director <sup\n                                        class=\"mandatory-alert\"></sup></label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"benefittingDirector\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.benefittingDirector.errors }\"\n                                    value=\"{{approver?.name}}\" disabled />\n                            </div>\n                            <div class=\"col-md-3\">\n                                <label for=\"\">Target Implementation Date</label>\n                                <input class=\"form-control\" type=\"text\" [dpDayPicker]=\"dayPickerConfig\"\n                                    formControlName=\"dateFrom\" [theme]=\"'dp-material'\" [mode]=\"'day'\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.dateFrom.errors }\" readonly/>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-md-6\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Name of the Automation Idea\">\n                                <label for=\"validationCustom01\">Idea Name <sup class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"ideaName\" maxlength=\"100\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.ideaName.errors }\"  (keydown)=\"vaildationspcl_character($event)\" (change)=\"ideanameDuplicateCheck(intakeCreate.value.ideaName)\" (paste)=\"onPaste($event)\"#ideaName />\n                                    <span *ngIf=\"isideanameDuplicate\" style=\"font-size: 10px;color: red;\">Idea Name is already taken</span>\n                                    <div *ngIf=\"ideaName.value?.length > 99\" style=\"color: red;font-size: 10px;\">\n                                        You have reached the maximum limit of {{ideaName.value?.length}} characters!\n                                </div>\n                                <div *ngIf=\"spcharmessage\" style=\"color: red;font-size: 10px;\">\n                                    Special characters are not allowed here!\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"A context of your current manual process\">\n                                <label for=\"automationObjectives\">Automation Objectives<sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <textarea formControlName=\"automationObjectives\" maxlength=\"500\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.automationObjectives.errors }\" #automationObjectives></textarea>\n                                    <div *ngIf=\"automationObjectives.value?.length > 499\" style=\"color: red;font-size: 10px;\">\n                                        You have reached the maximum limit of {{automationObjectives.value?.length}} characters!\n                                    </div>\n                                    \n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-md-6\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Problem Statement of the Automation Idea\">\n                                <label for=\"ideaDescription\">Problem Statement<sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <textarea formControlName=\"ideaDescription\" maxlength=\"500\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.ideaDescription.errors }\" #ideaDescription></textarea>\n                                    <div *ngIf=\"ideaDescription.value?.length > 499\" style=\"color: red;font-size: 10px;\">\n                                        You have reached the maximum limit of {{ideaDescription.value?.length}} characters!\n                                     </div>\n                            </div>\n                            <div class=\"col-md-6\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Benefits of the Automation Idea\">\n                                <label for=\"ideaBenefits\">Business Benefits<sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <ng-multiselect-dropdown [data]=\"benefitsList\"  name=\"ideaBenefits\" [placeholder]=\"'Select Business Benefits'\"\n                                   [settings]=\"ideaBenefitsDropdownSettings\" \n                                    [formControl]=\"intakeCreate.controls['ideaBenefits']\"\n                                    (onSelect)=\"onideaBenefitsSelect($event)\" (onDeSelect)=\"onideaBenefitsDeSelect($event)\">\n                                </ng-multiselect-dropdown>\n                            </div>\n                        </div>\n                        <div *ngIf=\"intakeCreate.value.ideaBenefits.length>0\" class=\"form-row businessBenefitForm\">\n                            <div class=\"col-md-12 pb-0\">\n                                <div class=\"dynamicTable\">\n                                    <table class=\"table table-bordered w-100 mt-3 mb-0\">\n                                        <thead>\n                                            <tr>\n                                                <th style=\"width:27%\">Business Benefits</th>\n                                                <th>Description</th>\n                                            </tr>\n                                        </thead>\n                                        <ng-container formArrayName=\"benefitsForm\" *ngFor=\"let item of benefitsForm().controls; let i = index\">\n                                            <tbody  [formGroupName]=\"i\">\n                                                <tr>\n                                                    <td>{{formValueBB[i].businessBenefit}}</td>\n                                                    <td style=\"padding:0px !important;\"><input formControlName=\"description\" maxlength=501 class=\"table-cell form-control\" type=\"text\"></td>\n                                                </tr>\n                                                <tr *ngIf=\"item?.controls.description.value.length>500\">\n                                                   <td colspan=\"2\" style=\"padding: 2px 10px !important;\n                                                   background-color: #ffebee;\n                                                   text-align: right;color: red;font-size: 10px;\">You have Exceeded the Maximum Limit of 255 characters for the decription of <strong>{{formValueBB[i].businessBenefit}}!</strong></td> \n                                                </tr>\n                                            </tbody>\n                                        </ng-container> \n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"header\" id=\"headingFour\">\n                    <div class=\"mb-0\">\n                        <button class=\"btn btn-link collapsed trg-open\" data-toggle=\"collapse\"\n                            data-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\n                            Effort Estimation<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i\n                                class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                        </button>\n                    </div>\n                </div>\n                <div id=\"collapseFour\" class=\"collapse trg-show\">\n                    <div class=\"card-body-collapse\">\n                        <div class=\"form-row\">\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Savings type of the Idea\">\n                                <div><label for=\"\">Savings Type <sup class=\"mandatory-alert\">*</sup></label></div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\"\n                                        (change)=\"changeSavingsType($event)\" id=\"OPEX_Savings\" value=\"OPEX Savings\"\n                                        checked>\n                                    <label class=\"form-check-label\" for=\"gridRadios1\">\n                                        OPEX Savings\n                                    </label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\"\n                                        (change)=\"changeSavingsType($event)\" id=\"OPEX_Avoidance\" value=\"OPEX Avoidance\">\n                                    <label class=\"form-check-label\" for=\"gridRadios2\">\n                                        OPEX Avoidance\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of full time resources\">\n                                <label for=\"\">Actual FTE/Day <sup class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"actualFTE\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.actualFTE.errors }\" appNumberDirective />\n                                <!-- <select class=\"custom-select\" formControlName=\"actualFTE\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.actualFTE.errors }\">\n                                    <option selected value=\"\">Select actual FTE/Day</option>\n                                    <option value=\"10\">10</option>\n                                    <option value=\"20\">20</option>\n                                    <option value=\"30\">30</option>\n                                </select> -->\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of times the work is executed per day\">\n                                <label for=\"validationCustom02\">Average Volume/Day <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"averageDailyVolume\" class=\"form-control\" (keyup)=\"vaildateZero($event.target.value)\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.averageDailyVolume.errors }\"\n                                    appTwodigitdecimaldirective />\n                                    <span style=\"font-size: 10px; color:red;\" *ngIf=\"zeromessage\"> greater than 0 numbers should be allowed</span>\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Average time consumed for execution\">\n                                <label for=\"validationCustom02\">Average Time Spent/Execution (Mins) <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"aet\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.aet.errors }\" appNumberDirective />\n                            </div>\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of working days per month\">\n                                <label for=\"validationCustom02\">No. of workingDays/Month <sup\n                                        class=\"mandatory-alert\">*</sup></label> -->\n                            <!-- <input type=\"text\" formControlName=\"noOfWorkingDays\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfWorkingDays.errors }\" /> -->\n                            <!-- <select class=\"custom-select\" formControlName=\"noOfWorkingDays\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfWorkingDays.errors }\">\n                                    <option value=\"\" selected>select no. of working days\n                                    </option>\n                                    <option *ngFor=\"let day of days; let i=index;\" value=\"{{day}}\">{{day}}</option>\n                                </select>\n                            </div> -->\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Rate of FTE is determined using this field\">\n                                <label for=\"validationCustom02\">FTE Rate <sup class=\"mandatory-alert\">*</sup></label>\n                                <select class=\"custom-select\" formControlName=\"fteRate\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.fteRate.errors }\">\n                                    <option selected value=\"\">Select FTE Rate</option>\n                                    <option *ngFor=\"let fte of fteRate\" [value]=\"fte.fteRateId\">{{fte.fteType}}</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-sm-12 pb-0 alert-info\">Effort spent which cannot be automated (mins)</div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <label for=\"validationCustom02\">Data Interpretation(Mins)</label>\n                                <input type=\"text\" formControlName=\"dataInterpretation\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.dataInterpretation.errors }\"\n                                    appNumberDirective />\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <label for=\"validationCustom02\">Manual Activity(Mins)</label>\n                                <input type=\"text\" formControlName=\"manualActivity\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.manualActivity.errors }\"\n                                    appNumberDirective />\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <label for=\"validationCustom02\">Decision Making(Mins)</label>\n                                <input type=\"text\" formControlName=\"decisionMaking\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.decisionMaking.errors }\"\n                                    appNumberDirective />\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <label for=\"validationCustom02\">Automation Ratio</label>\n                                <input type=\"text\" formControlName=\"automationRatio\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.automationRatio.errors }\" readonly />\n                            </div>\n                            <div class=\"col-md-12\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Financial Benefits\">\n                                <div><label for=\"\">Will the automation generate recurrent benefits in the next 3+ years?</label></div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"financialBenefits\" value=\"Yes\"\n                                        (change)=\"changeFinancialBenefits($event)\">\n                                    <label class=\"form-check-label radiolabel\" for=\"financialBenefits1\">\n                                        Yes\n                                    </label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"financialBenefits\" value=\"No\"\n                                        (change)=\"changeFinancialBenefits($event)\" checked>\n                                    <label class=\"form-check-label radiolabel\" for=\"financialBenefits2\">\n                                        No\n                                    </label>\n                                </div>\n                                <button type=\"button\" class=\"btn btn-sm btn-calculate\"\n                                    (click)=\"calculateRatio();\">Calculate</button>\n                            </div>\n                            <!-- <div class=\"offset-md-9 col-md-3 text-right\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"\">\n\n                            </div> -->\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-sm-12 pb-0 alert-info\">Complexity Mapping</div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of Device Interfaces\">\n                                <label for=\"validationCustom02\">No. of Device Interfaces <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"noOfSBI\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfSBI.errors }\"\n                                    (change)=\"limitSBI($event.target.value)\" maxlength=\"1\" appRealNumberDirective />\n                                <!-- <select class=\"custom-select\" formControlName=\"noOfSBI\" (change)=\"limitSBI()\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfSBI.errors }\">\n                                    <option selected value=\"\">Select no. of Device Interface</option>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select> -->\n                            </div>\n\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Type of the Device Interfaces\">\n                                <label for=\" validationCustom02\">Type of Device Interfaces<sup class=\"mandatory-alert\">*</sup></label>\n                                <ng-multiselect-dropdown name=\"typeOfSBI\" [placeholder]=\"'Select Device Interfaces'\"\n                                    [data]=\"sbiList\" [disabled]=\"disabled\" [settings]=\"sbiTypeDropdownSettings\"\n                                    [formControl]=\"intakeCreate.controls['typeOfSBI']\"\n                                    (onSelect)=\"onSbiItemSelect($event)\"\n                                    (onDeSelect)=\"onItemDeSelect($event)\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.typeOfSBI.errors }\"\n                                    [(ngModel)]=\"sbiTypeSelected\">\n                                </ng-multiselect-dropdown>\n                            </div>\n\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Device Names\">\n                                <label for=\"validationCustom02\">Device Names <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"deviceNames\" maxlength=\"100\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.deviceNames.errors }\" />\n                            </div> -->\n                        </div>\n                        <div class=\"form-row\" *ngIf=\"this.intakeCreate.value.typeOfSBI.length>=1\">\n                            <div class=\"col-md-12 pb-0\">\n                                <div class=\"dynamicTable\">\n                                    <table class=\"table table-bordered w-100 mt-3 mb-0\">\n                                        <thead>\n                                            <tr>\n                                                <th style=\"width:27%\">Device Interface<sup class=\"mandatory-alert\">*</sup></th>\n                                                <th>Role in Automation<sup class=\"mandatory-alert\">*</sup></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor=\"let item of this.intakeCreate.value.typeOfSBI;let i=index\">\n                                                <td id=\"deviceName_{{i}}\" style=\"width:41%\">\n                                                    <span>{{item.sbitype}}</span>\n                                                      <input id=\"other-Name\" maxlength=100 *ngIf=\"item.sbitype == 'Other (Specify)'\" [ngClass]=\"{'errorMessage':(errorAlertDevice && othersbiValue.length>99)}\" (keydown)=\"vaildationmessagedevice($event)\" (change)=\"otherFieldValidation($event.target.value)\" class=\"table-cell-others\" type=\"text\" [value]=\"othersbiValue\"    [(ngModel)]='othersbiValue'  [ngModelOptions]=\"{standalone: true}\" >  \n                                                  \n                                                  <!-- <div *ngIf=\"item.sbitype == 'Other (Specify)'\">\n                                                     <div *ngIf=\"othersbiValue.length>99\">\n                                                        <span style=\"color: red;font-size: 10px;\">You have reached the maximum limit of {{othersbiValue?.value.length}} character!</span>\n                                                      </div> -->\n                                                  <!-- </div> -->\n                                                    <!-- <div *ngIf=\"otherName.length>99\">\n                                                        <span style=\"color: red;font-size: 10px;\">You have reached the Maximum Limit!</span>\n                                                      </div>  -->\n                                                </td>\n                                                <td>\n                                                    <input (change)=\"roleValidationSbi()\" (keyup)=\"vaildationdevicerole(sbitypeRole[i],i)\" maxlength=100 class=\"table-cell\" id=\"deviceRole_{{i}}\" type=\"text\" [value]=\"sbitypeRole[i]\" [(ngModel)]='sbitypeRole[i]'  [ngModelOptions]=\"{standalone: true}\" #devicerole>\n                                                    <!-- <div *ngIf=\"devicerole?.value.length>99\">\n                                                        <span style=\"color: red;font-size: 12px; margin-left: 11px;\">You have reached the maximum limit of  {{devicerole?.value.length}} character!</span>\n                                                      </div>  -->\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                    <div>\n                                                \n                                        <span *ngIf=\"(errorAlertDevice && othersbiValue.length>99) || messageroledevice\" style=\"color: #e65100;\n                                            font-size: 12px;\n                                            margin-left: 11px;\">You have reached the maximum limit 100 characters!</span>\n                                </div>\n                                    <div class=\"alert-other\" *ngIf=\"otherDeviceName\">Please Enter the device name for the Others field</div>\n                                    <div class=\"alert-other\" *ngIf=\"intakeCreate.value.typeOfSBI.length!=SBItableLength.length\">Please Enter {{SBItableLength.length}} Device Interface</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-row mt-2\">\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of Systems involved\">\n                                <label for=\"validationCustom02\">No. of Systems <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <select class=\"custom-select\" formControlName=\"noOfSystems\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfSystems.errors }\">\n                                    <option selected value=\"\">Select no. of Systems</option>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n                            </div> -->\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of Applications\">\n                                <label for=\"validationCustom02\">No. of Applications <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"noOfNBI\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfNBI.errors }\"\n                                    (change)=\"limitNBI($event.target.value)\" maxlength=\"1\" appRealNumberDirective />\n                                <!-- <select class=\"custom-select\" formControlName=\"noOfNBI\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfNBI.errors }\" (change)=\"limitNBI()\">\n                                    <option selected value=\"\">Select no. of Applications</option>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select> -->\n                            </div>\n\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Application Names\">\n                                <label for=\" validationCustom01\">Application Names<sup class=\"mandatory-alert\">*</sup></label>\n                                <ng-multiselect-dropdown name=\"typeOfNBI\" [placeholder]=\"'Select Application Names'\"\n                                    [data]=\"nbiList\" [disabled]=\"disabled\" [settings]=\"nbiTypeDropdownSettings\"\n                                    [formControl]=\"intakeCreate.controls['typeOfNBI']\" (onDeSelect)=\"onItemDeSelectApp($event)\" (onSelect)=\"onNbiItemSelect($event)\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.typeOfNBI.errors }\"\n                                    [(ngModel)]=\"nbiTypeSelected\">\n                                </ng-multiselect-dropdown>\n                            </div>\n                        </div>\n                        <div class=\"form-row\" *ngIf=\"this.intakeCreate.value.typeOfNBI.length>=1\">\n                            <div class=\"col-md-12 pb-0\">\n                                <div class=\"dynamicTable\">\n                                    <table class=\"table table-bordered w-100 mt-3 mb-0\">\n                                        <thead>\n                                            <tr>\n                                                <th style=\"width:27%\">Application Names<sup class=\"mandatory-alert\">*</sup></th>\n                                                <th>Role in Automation<sup class=\"mandatory-alert\">*</sup></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor=\"let item of intakeCreate.value.typeOfNBI;let i=index\">\n                                                <td id=\"applicationName_{{i}}\" style=\"width:41%\">\n                                                    <span>{{item.nbitype}}</span>\n                                                    <input id=\"other-Name-app\" maxlength=100 *ngIf=\"item.nbitype == 'Other (Specify)'\" [ngClass]=\"{'errorMessage':(errorAlertApp && othernbiValue.length>99)}\" class=\"table-cell-others\" (keydown)=\"vaildationmessageApp($event)\" (change)=\"otherFieldValidationApp($event.target.value)\"  type=\"text\" [value]=\"othernbiValue\" [(ngModel)]='othernbiValue'  [ngModelOptions]=\"{standalone: true}\" />\n                                                    <!-- <input id=\"other-Name-app\" maxlength=100 *ngIf=\"item.nbitype == 'Other (Specify)'\" class=\"table-cell-others\" (change)=\"otherFieldValidationApp($event.target.value)\"  type=\"text\" [value]=\"othernbiValue\" [(ngModel)]='othernbiValue'  [ngModelOptions]=\"{standalone: true}\" /> -->\n                                                    <!-- <div *ngIf=\"item.nbitype == 'Other (Specify)'\">\n                                                        <div *ngIf=\"othernbiValue.length>99\">\n                                                            <span style=\"color: red;font-size: 10px;\">You have reached the maximum limit of {{othernbiValue.length}} characters!</span>\n                                                          </div>\n                                                      </div> -->\n                                                </td>\n                                                <td>\n                                                    <input (change)=\"roleValidationNbi()\" (keyup)=\"vaildationApprole(nbitypeRole[i],i)\" maxlength=100 class=\"table-cell\" id=\"applicationRole_{{i}}\" type=\"text\" [value]=\"nbitypeRole[i]\" #applicationrole  [(ngModel)]=\"nbitypeRole[i]\" [ngModelOptions]=\"{standalone: true}\">\n                                                    <!-- <div *ngIf=\"applicationrole?.value.length>99\">\n                                                        <span style=\"color: red;font-size: 12px; margin-left: 11px;\">You have reached the maximum limit  of {{applicationrole.value?.length}} characters!</span>\n                                                      </div>  -->\n                                                </td>\n                                                <!-- <td>\n                                                    <input (change)=\"roleValidationNbi()\" maxlength=100 class=\"table-cell\" id=\"applicationRole_{{i}}\" type=\"text\" [value]=\"nbitypeRole[i]\" #applicationrole  [(ngModel)]=\"nbitypeRole[i]\" [ngModelOptions]=\"{standalone: true}\">\n                                                    <div *ngIf=\"applicationrole?.value.length>99\">\n                                                        <span style=\"color: red;font-size: 10px;\">You have reached the maximum limit of {{applicationrole?.value.length}} characters!</span>\n                                                      </div> \n                                                </td> -->\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <div>\n                                        <span *ngIf=\"(errorAlertApp && othernbiValue.length>99) || messageroleApp\" id=\"appMessage\" style=\"color: #e65100;\n                                            font-size: 12px;\n                                            margin-left: 11px;\">You have reached the maximum limit 100 characters!</span>\n                                    </div>\n                                    <div class=\"alert-other\" *ngIf=\"otherApplicationName\">Please Enter the Application Names for the Others field</div>\n                                    <div class=\"alert-other\" *ngIf=\"intakeCreate.value.typeOfNBI.length != NBItableLength.length\">Please Enter {{NBItableLength.length}} Application name</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-row mt-2\">\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"User assigned complexity\">\n                                <label for=\"validationCustom02\">Complexity<sup class=\"mandatory-alert\">*</sup></label>\n                                <select *ngIf=\"complexityList\" class=\"custom-select\"\n                                    formControlName=\"requestedComplexity\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.requestedComplexity.errors }\">\n                                    <option selected value=\"\">Select type</option>\n                                    <option *ngFor=\"let complex of complexityList\" [value]=\"complex.complexityCode\">\n                                        {{complex.complexityDesc}}</option>\n                                </select>\n\n                            </div>\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <div><label for=\"\">is validation required ?</label></div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"isComparisonRequired\"\n                                        (change)=\"changecomparisonreq($event)\" value=\"Yes\">\n                                    <label class=\"form-check-label radiolabel\" for=\"isComparisonRequired\">\n                                        Yes\n                                    </label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"isComparisonRequired\"\n                                        (change)=\"changecomparisonreq($event)\" value=\"No\" checked>\n                                    <label class=\"form-check-label radiolabel\" for=\"isComparisonRequired\">\n                                        No\n                                    </label>\n                                </div>\n                            </div> -->\n                            <!-- <div class=\"col-md-3\">\n                                <label for=\"validationCustom02\">No. of months <sup class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"noOfMonths\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfMonths.errors }\" />\n                            </div> -->\n                        </div>\n                        <!-- <div class=\"form-row\">\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <div><label for=\"\">SPOC required for detailed workshop?</label></div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"spocrequirement\"\n                                        (change)=\"changeSPOCreq($event)\" value=\"Yes\">\n                                    <label class=\"form-check-label radiolabel\" for=\"spocrequirement1\">\n                                        Yes\n                                    </label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"spocrequirement\"\n                                        (change)=\"changeSPOCreq($event)\" value=\"No\" checked>\n                                    <label class=\"form-check-label radiolabel\" for=\"spocrequirement2\">\n                                        No\n                                    </label>\n                                </div>\n                            </div>\n                        </div> -->\n                    </div>\n                </div>\n\n                <div class=\"header\" id=\"headingThree\">\n                    <div class=\"mb-0\">\n                        <button class=\"btn btn-link collapselast collapsed trg-open\" data-toggle=\"collapse\"\n                            data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                            File Upload<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                                aria-hidden=\"true\"></i>\n                        </button>\n                    </div>\n                </div>\n                <div id=\"collapseThree\" class=\"collapse trg-show\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                    title=\"\">\n                    <div class=\"card-body-collapse\">\n                        <!-- <div class=\"downloadFile\"><a target=\"_blank\" href=\"assets/images/Add-icon.png\">Download and View the High Level Manual Process Map Template</a></div> -->\n                        <label class=\"ml-1 mt-1\">High Level Manual Process Map / Business Justification Document(\n                            <span>Refer<a  href=\"https://rcirogers.sharepoint.com/:p:/r/sites/ossautomation/governance/Shared%20Documents/Governance%20Presentation%20Templates/Automation%20Governance%20Intake%20Template.pptx?d=w7a1a2b505a6442279844b85ab79ff56d&csf=1&web=1&e=A89JWt\" target=\"_blank\" >   Digital Governance Template<i class=\"fa fa-external-link\" style=\"align-items: right;font-size: 12px;margin-left: 5px;\" aria-hidden=\"true\"></i></a></span> )</label>\n                        <div class=\"custom-file-Upload mx-1\">\n                            <div>\n                                <label for=\"upload-create\">\n                                    <!-- <input type=\"file\" id=\"upload\" multiple> -->\n                                    <input type=\"file\" id=\"upload-create\" #fileInputCreate (change)=\"onFileSelectCreate(fileInputCreate)\"\n                                        multiple />\n                                    <div class=\"upload-icon\">+</div>\n                                    Add Files\n                                </label>\n                            </div>\n                            <div class=\"filess\">\n                                <ul class=\"file-list\">\n                                    <ng-container *ngFor=\"let file of fileInfo; let i = index\">\n                                        <li id=\"{{i}}\">\n                                            <div class=\"text-center\">\n                                                <i class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                            </div>\n                                            <div class=\"pt-1\">\n                                                {{file.name}}\n                                            </div>\n                                        </li>\n                                        <i class=\"fa fa-times-circle\" (click)=\"removeFileCreate(i,file.name)\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"intakeCreate.invalid\" class=\"mandatory-alert text-right mb-4\">Please fill all the mandatory\n                    values to view Summary</div>\n            </div>\n        </div>\n        <div class=\"model-overlay slider-wrap-up view-summary-create\">\n        </div>\n        <div class=\"create-summary slider-wrap-up view-summary-create\">\n            <div class=\"create-summary-title\"><img src=\"./assets/images/summary-logo.png\" alt=\"\" class=\"mr-2\">Summary\n                Details\n            </div>\n            <div class=\"container-fluild summary-view-port slider-wrap-up view-summary-create\">\n                <div class=\"row\">\n                    <div class=\"col-md-4 pr-0\">\n                        <div class=\" basic-details\">\n                            <div class=\"basic-details-content\">\n                                <table>\n                                    <tbody>\n                                        <tr>\n                                            <!-- <td>\n                                                <div class=\"field-name\" > \n                                       \n                                                    Intake ID  \n                                                        \n                                                    </div>\n                                                <div class=\"field-value\">{{intakeCreate.intakeId}}</div>\n    \n    \n    \n                                            <td> -->\n                                            <td>\n                                                <div class=\"field-name\">Team Name</div>\n                                                <div class=\"field-value\">{{selectedBusinessUnit}}</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"field-name\">Director</div>\n                                                <div class=\"field-value\">{{approver.name}}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"field-name\">Savings Type</div>\n                                                <div class=\"field-value\">{{savings}}</div>\n                                            </td>\n                                            <td>\n                                                <div class=\"field-name\">Actual FTE/Day</div>\n                                                <div class=\"field-value\">{{intakeCreate.value.actualFTE}}</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"field-name\">Average Daily Volume</div>\n                                                <div class=\"field-value\">{{intakeCreate.value.averageDailyVolume}}</div>\n                                            </td>\n                                            <td>\n                                                <div class=\"field-name\">Average Time Spent/Execution</div>\n                                                <div class=\"field-value\">{{intakeCreate.value.aet}} mins</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"field-name\">Manual Cost</div>\n                                                <div *ngIf=\"calcValues\" class=\"field-value\">\n                                                    ${{calcValues.manualCostFormatted}}</div>\n                                            </td>\n                                            <td>\n                                                <div class=\"field-name\">Cost Spent on Automation<small style=\"color:#000\"> (T-shirt OTL size)</small></div>\n                                                <div *ngIf=\"calcValues\" class=\"field-value\">\n                                                    ${{calcValues.automationCostFormatted}}</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colspan=\"2\">\n                                                <div class=\"field-name\">Idea Name</div>\n                                                <div class=\"field-value\">{{intakeCreate.value.ideaName}}</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colspan=\"2\">\n                                                <div class=\"field-name\">Problem Statement</div>\n                                                <div class=\"field-value decription_box\" style=\"white-space: pre-wrap;\">{{intakeCreate.value.ideaDescription}}</div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n\n                            </div>\n\n                            <div class=\"currency-card card m-0\">\n                                <div class=\"card-header\" id=\"headingCurrency\">\n\n                                    <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\"\n                                        data-target=\"#collapseCurrency\" aria-expanded=\"false\"\n                                        aria-controls=\"collapseCurrency\">\n                                        <div *ngIf=\"calcValues\" class=\"filter-status currency-status d-flex mr-4 mb-1\">\n                                            <ng-container *ngFor=\"let roi of calcValues.monthlyRoi; let i = index\">\n                                                <div *ngIf=\"lesserThan(roi, 0)\" class=\"btn currency-indicator loss\">\n                                                </div>\n                                                <div *ngIf=\"greaterThan(roi, 0)\" class=\"btn currency-indicator profit\">\n                                                </div>\n                                                <div *ngIf=\"roi == 0\" class=\"btn currency-indicator neutral-savings\">\n                                                </div>\n                                            </ng-container>\n                                            <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i>\n                                            <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                                        </div>\n\n                                    </button>\n\n                                </div>\n\n                                <div *ngIf=\"calcValues\" id=\"collapseCurrency\" class=\"collapse\"\n                                    aria-labelledby=\"headingCurrency\">\n                                    <div *ngFor=\"let roi of calcValues.monthlyRoi; let i = index\" class=\"card-body\">\n                                        <div class=\"month\">Month {{i + 1}}</div>\n                                        <div class=\"savingsRoi d-flex\">\n                                            <div class=\"savingsValue\"><span\n                                                    class=\"pr-1\">$</span>{{calcValues.monthlyRevenueFormatted[i]}}</div>\n                                            <div class=\"roiPercentage d-flex ml-auto\">\n                                                <div class=\"name\">\n                                                    ROI\n                                                </div>\n                                                <!-- <div class=\"percentage\" [ngClass]=\"{'warning-bg' : lesserThan(roi, 0)}\">\n                                                    {{roi}}%\n                                                </div> -->\n                                                <div class=\"percentage\"  [ngStyle]=\"setStyle(roi, 0)\">\n                                                    {{roi}}%\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"basic-details-bottom\">\n                                <div class=\"roi\">\n\n                                    <div class=\"percentage\" [ngClass]=\"{'warning-bg' : lesserThan(roiPerc, 0)}\">\n                                        {{roiPerc}}%\n                                    </div>\n                                    <div class=\"name\">\n                                        ROI\n                                    </div>\n                                </div>\n                                <div class=\"d-flex summary-currency\">\n                                    <div class=\"dollar mr-2\"><img src=\"./assets/images/Dollar-symbol.png\" alt=\"\"\n                                            class=\"w-100 h-100\"></div>\n                                    <div>\n                                        <span *ngIf=\"calcValues\"\n                                            class=\"value d-block\">{{calcValues.revenueFormatted}}</span>\n                                        <span class=\"value-description\"\n                                            [ngClass]=\"{'font-warning' : lesserThan(roiPerc, 0)}\">Total savings/Annum</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- <div class=\"basic-details-bottom\">\n                                <div class=\"roi\">\n                                    <div class=\"title\">Second Month</div>\n                                    <div class=\"percentage\" [ngClass]=\"{'warning-bg' : secondMonthRoiNegative}\">\n                                        {{secondMonthRoiPerc}}%\n                                    </div>\n                                    <div class=\"name\">\n                                        ROI\n                                    </div>\n                                </div>\n                                <div class=\"d-flex summary-currency\">\n                                    <div class=\"dollar mr-2\"><img src=\"./assets/images/Dollar-symbol.png\" alt=\"\"\n                                            class=\"w-100 h-100\"></div>\n                                    <div>\n                                        <span class=\"value d-block\">{{secondMonthRevenue}}</span>\n                                        <span class=\"value-description\"\n                                            [ngClass]=\"{'font-warning' : secondMonthRoiNegative}\">Total savings in\n                                            ($)</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"basic-details-bottom\">\n                                <div class=\"roi\">\n                                    <div class=\"title\">Third Month</div>\n                                    <div class=\"percentage\" [ngClass]=\"{'warning-bg' : thirdMonthRoiNegative}\">\n                                        {{thirdMonthRoiPerc}}%\n                                    </div>\n                                    <div class=\"name\">\n                                        ROI\n                                    </div>\n                                </div>\n                                <div class=\"d-flex summary-currency\">\n                                    <div class=\"dollar mr-2\"><img src=\"./assets/images/Dollar-symbol.png\" alt=\"\"\n                                            class=\"w-100 h-100\"></div>\n                                    <div>\n                                        <span class=\"value d-block\">{{thirdMonthRevenue}}</span>\n                                        <span class=\"value-description\"\n                                            [ngClass]=\"{'font-warning' : thirdMonthRoiNegative}\">Total savings in\n                                            ($)</span>\n                                    </div>\n                                </div>\n                            </div> -->\n                        </div>\n\n                    </div>\n                    <div class=\"col-md-8 other-details\">\n                        <div class=\"all-estimation\">\n                            <div class=\"block-heading\">\n                                Complexity Mapping\n                            </div>\n                            <div class=\"estimation\">\n                                <div>\n                                    <div class=\"d-flex\">\n                                        <div>No. of Device Interfaces</div>\n                                        <div class=\"estimationValue\">{{intakeCreate.value.noOfSBI}}</div>\n                                    </div>\n                                    <div class=\"d-flex\">\n                                        <div>No. of Applications</div>\n                                        <div class=\"estimationValue\">{{intakeCreate.value.noOfNBI}}</div>\n                                    </div>\n                                    <!-- <div class=\"d-flex\">\n                                        <div>Device Names</div>\n                                        <div class=\"estimationValue\">{{intakeCreate.value.deviceNames}}</div>\n                                    </div> -->\n                                </div>\n                                <div>\n                                    <!-- <div class=\"d-flex\">\n                                        <div>No. of Systems</div>\n                                        <div class=\"estimationValue\">{{intakeCreate.value.noOfSystems}}</div>\n                                    </div> -->\n                                    <div *ngIf=\"sbiTypeSelected.length > 0\" class=\"d-flex\">\n                                        <div>Type of Device Interfaces</div>\n                                        <div class=\"estimationValue\"><span *ngIf=\"sbiTypeSelected\"> <span\n                                                    *ngFor=\"let sbiTypeList of sbiTypeSelected; let i = index\">{{sbiTypeList.sbitype}}<span\n                                                        *ngIf=\"i<(sbiTypeSelected.length-1)\">,&nbsp;</span></span>\n                                                        <span>\n                                                            {{othersbiValue}}\n                                                        </span>\n                                            </span></div>\n                                    </div>\n                                    <div *ngIf=\"nbiTypeSelected.length > 0\" class=\"d-flex\">\n                                        <div>Application Names</div>\n                                        <div class=\"estimationValue\"><span *ngIf=\"nbiTypeSelected\"> <span\n                                                    *ngFor=\"let nbiTypeList of nbiTypeSelected; let i = index\">{{nbiTypeList.nbitype}}<span\n                                                        *ngIf=\"i<(nbiTypeSelected.length-1)\">,&nbsp;</span></span>\n                                                        <span>\n                                                            {{othernbiValue}}\n                                                        </span>\n                                            </span></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"estimation estimation-2\">\n                                <div>\n                                    <!-- <div *ngIf=\"selectedComplexity\" class=\"d-flex\">\n                                        <div>User assigned Complexity</div>\n                                        <div class=\"estimationValue\">{{selectedComplexity.complexityDesc}}</div>\n                                    </div> -->\n                                    <!-- <div class=\"d-flex\">\n                                        <div>Validation Required</div>\n                                        <div class=\"estimationValue\">{{comparison}}</div>\n                                    </div> -->\n                                    <div class=\"d-flex\">\n                                        <div>Financial benefits</div>\n                                        <div class=\"estimationValue\">{{financialBenefits}}</div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"text-right\">\n                                    <img _ngcontent-rvk-c59=\"\" src=\"./assets/images/summary-graph.png\" alt=\"\"\n                                        width=\"100px\" height=\"90px\">\n                                </div> -->\n                            </div>\n                            <!-- <div *ngIf=\"complexity && comparison=='No'\" class=\"text-center complexity-value\">\n                                Framework assigned Complexity : {{complexity.complexityDesc}}\n                            </div> -->\n                            <div *ngIf=\"complexity\" class=\"text-center complexity-value\">\n                                Framework assigned Complexity : {{complexity.complexityDesc}} vs User assigned\n                                Complexity : {{selectedComplexity.complexityDesc}}\n                            </div>\n                        </div>\n                        <!-- <div class=\"inner-block \">\n                            <div class=\"block-heading\">\n                                Hours/Month (in hrs)\n\n                            </div>\n                            <div class=\"block-content\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-2 bot-image\">\n                                        <img src=\"./assets/images/raf-bot.png\" alt=\"\">\n                                    </div>\n                                    <div class=\"col-md-10 block-details\">\n                                        <div class=\"d-flex mb-3\">\n                                            <div class=\"block-name\">\n                                                Manual Hours\n                                            </div>\n                                            <div class=\"progress\">\n                                                <div class=\"progress-bar bg-danger\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div class=\"content-value mr-5\">{{manualHours}} hrs</div>\n                                        </div>\n                                        <div class=\"d-flex\">\n                                            <div class=\"block-name\">\n                                                Automation Hours\n                                            </div>\n                                            <div class=\"progress progress-sm\">\n                                                <div class=\"progress-bar bg-success\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div class=\"content-value mr-5\">{{automationHours}} hrs</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"inner-block\">\n                            <div class=\"block-heading\">\n                                Cost/Month (in $)\n                            </div>\n                            <div class=\"block-content\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-2 bot-image\">\n                                        <img src=\"./assets/images/raf-bot.png\" alt=\"\">\n                                    </div>\n                                    <div class=\"col-md-10 block-details\">\n                                        <div class=\"d-flex mb-3\">\n                                            <div class=\"block-name\">\n                                                Manual Cost (in $)\n                                            </div>\n                                            <div class=\"progress\">\n                                                <div class=\"progress-bar bg-danger\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div *ngIf=\"calcValues\" class=\"content-value mr-5\">${{calcValues.manualCostFormatted}}</div>\n                                        </div>\n                                        <div class=\"d-flex\">\n                                            <div class=\"block-name\">\n                                                Automation Cost (in $)\n                                            </div>\n                                            <div class=\"progress progress-sm\">\n                                                <div class=\"progress-bar bg-primary\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div *ngIf=\"calcValues\" class=\"content-value mr-5\">${{calcValues.automationCostFormatted}}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> -->\n                        <div class=\"inner-block\">\n                            <div class=\"block-heading\">\n                                Potential Saving for First Month\n                            </div>\n                            <div class=\"block-content\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-2 bot-image\">\n                                        <img src=\"./assets/images/raf-bot.png\" alt=\"\">\n                                    </div>\n                                    <div class=\"col-md-10 block-details\">\n                                        <div class=\"d-flex mb-3\">\n                                            <div class=\"block-name\">\n                                                Hours Saved\n                                            </div>\n                                            <div class=\"progress progress-medium\">\n                                                <div class=\"progress-bar bg-success\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div class=\"content-value mr-5\">{{hoursSaving}} hrs</div>\n                                        </div>\n                                        <div class=\"d-flex\">\n                                            <div class=\"block-name\">\n                                                Cost Saved\n                                            </div>\n                                            <div class=\"progress progress-large\">\n                                                <div class=\"progress-bar bg-primary\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div *ngIf=\"calcValues\" class=\"content-value mr-5\">\n                                                ${{calcValues.costSavingFormatted}}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"disclaimer\"><sup>*</sup>All these numbers are based on T-Shirt sizing and\n                            estimations. Will have to be fine-tuned post workshop.</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal-footer\">\n            <div class=\"triangle-up slider-wrap-up view-summary-create\"></div>\n            <button type=\"button\" class=\"btn btn-secondary float-right mr-3 btn-view-summary trgcollapse\"\n                [disabled]=\"intakeCreate.invalid || nbiRoleInvalid || sbiRoleInvalid || otherApplicationName || otherDeviceName || isideanameDuplicate ||zeromessage\" id=\"view-summary-create\" (click)=\"viewSummary()\">VIEW SUMMARY</button>\n            <button *ngIf=\"!summaryOpened\" type=\"button\" class=\"btn btn-danger btn-save-create\" (click)=\"resetForm()\"\n                [disabled]='buttonSubmitted'>CANCEL</button>\n            <button *ngIf=\"summaryOpened && savingsReturned\" type=\"button\" class=\"btn btn-secondary btn-save-draft\" (click)=\"saveDraft()\"\n                [disabled]='buttonSubmitted'>SAVE AS DRAFT</button>\n            <button *ngIf=\"summaryOpened && savingsReturned\" type=\"button\" class=\"btn btn-danger btn-save-create\" (click)=\"onSubmit()\"\n                [disabled]='buttonSubmitted'>SUBMIT</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../../service/login.service';\nimport { IntakeService } from './../../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { NumberDirective } from './../../../numbers.directive';\nimport { RealNumberDirective } from './../../../realNumbers.directive';\nimport { IDayCalendarConfig, DatePickerComponent } from \"ng2-date-picker\";\n\n@Component({\n  selector: 'app-intake-edit',\n  templateUrl: './intake-edit.component.html',\n  styleUrls: ['./intake-edit.component.scss'],\n  providers: [DatePipe]\n})\nexport class IntakeEditComponent implements OnInit {\n  @ViewChild(\"dateFromDp\") public dateFromDp: DatePickerComponent;\n  @ViewChild('fileInput') fileInputs: any;\n  @Input() intakeData: any;\n  public message: any;\n  public submitMessage: any;\n  zeromessage:boolean=false\n  public alertMessage: any = [];\n  ideanamearray=[];\n  isideanameDuplicate=false;\n  public alertdata = false;\n  intakeEdit: FormGroup;\n  submitted = false;\n  buttonSubmitted = false;\n  spcharmessage:any=false;\n  finalfilearray:any=[]\n  totalsize:any=''\n  allowedType:any=['application/pdf','application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/msword','application/vnd.openxmlformats-officedocument.wordprocessingml.document','application/vnd.openxmlformats-officedocument.presentationml.presentation'];\n  applicationNames:any;\n  messageroleApp:any=false;\n  messageroledevice:any=false;\n  deviceapplicationNames:any=''\n  fileInfo: any = [];\n  user: any;\n  coe: any;\n  spoc: any;\n  financialBenefits: any;\n  savings: any;\n  // comparison: any;\n  approver: any;\n  commonApprover: any = {};\n  summaryOpened = false;\n  complexity: any;\n  manualCost: any;\n  automationCost: any;\n  revenue: any;\n  errorAlertDevice: boolean=false;\n  costDifference: any;\n  firstMonthRevenue: any;\n  secondMonthRevenue: any;\n  thirdMonthRevenue: any;\n  firstMonthRoiPerc: any;\n  secondMonthRoiPerc: any;\n  thirdMonthRoiPerc: any;\n  intakelist:any\n  firstMonthRoiNegative = false;\n  secondMonthRoiNegative = false;\n  thirdMonthRoiNegative = false;\n  roiPerc: any;\n  manualHours: any;\n  ratio: any;\n  automationHours: any;\n  filenamearray=[];\n  costSaving: any;\n  hoursSaving: any;\n  sbiList: any;\n  sbiTypeSelected: any = [];\n  nbiTypeSelected: any = [];\n  NBItableLength: any;\n  SBItableLength: any;\n  nbiList: any;\n  errorAlertApp:Boolean=false\n  complexityList: any;\n  businessUnitList: any;\n  selectedBusinessUnit: any;\n  selectedComplexity: any;\n  calcValues: any;\n  monthlyRevenue: any;\n  fteRate: any;\n  disabled = false;\n  ShowFilter = false;\n  savingsReturned = false;\n  nbiRoleInvalid = false;\n\n  sbitype = [];\n  otherDeviceName = false;\n  otherApplicationName = false;\n  nbiTypeArray = [];\n  roleInvalidNbi = false;\n  sbiRoleInvalid =false;\n  otherNbiIndex:any;\n  otherSbiIndex:any;\n  otherDeviceSbi:any;\n  otherDeviceNbi:any;\n  indexValueSbi:any;\n  indexValueNbi:any;\n  ideaBenefitsDropdownSettingsEdit = {\n    singleSelection: false,\n    idField: 'businessBenefitId',\n    textField: 'businessBenefit',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 2,\n    enableCheckAll:false,\n    // limitSelection: 5,\n    allowSearchFilter: this.ShowFilter\n  }\n  nbiTypeDropdownSettings: any = {\n    singleSelection: false,\n    idField: 'id',\n    textField: 'nbitype',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 1,\n    limitSelection: 0,\n    allowSearchFilter: this.ShowFilter\n  };\n  sbiTypeDropdownSettings: any = {\n    singleSelection: false,\n    idField: 'id',\n    textField: 'sbitype',\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    itemsShowLimit: 1,\n    limitSelection: 0,\n    allowSearchFilter: this.ShowFilter\n  };\n  public dayPickerConfig = <IDayCalendarConfig>{\n    format: \"YYYY-MM-DD\",\n    monthFormat: \"MMMM, YYYY\",\n    firstDayOfWeek: \"mo\",\n    min: this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd'),\n    max: \"\"\n  };\n\n  /***************************************/\n  benefitsListEdit:any =[];\n  benefitsSelected:any =[];\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n \n    this.sbitype = [];\n    this.nbiTypeArray = [];\n    this.otherDeviceName = false;\n    this.otherApplicationName = false;\n    this.roleInvalidNbi = false;\n    this.sbiRoleInvalid = false;\n    this.indexValueNbi = -1;\n    this.indexValueSbi = -1;\n    var d = new Date();\n    var year = d.getFullYear();\n    var month = d.getMonth();\n    var day = d.getDate();\n    if(month==1 && day==29)\n      day=28;\n    //var c = new Date(year + 1, month, day);\n    this.dayPickerConfig.max = this.datePipe.transform(new Date(year + 1, month, day).toISOString(), 'yyyy-MM-dd');\n    this.intakeData.targetImplementationDate = this.datePipe.transform(this.intakeData.targetImplementationDate, 'yyyy-MM-dd');\n    this.selectedBusinessUnit = this.intakeData.team.teamName;\n    // if (!this.intakeData.rfEffort.device.length) {\n    //   this.intakeData.rfEffort.device = JSON.parse(this.intakeData.rfEffort.device);\n    // }\n     // if (!this.intakeData.rfEffort.application.length) {\n    //   this.intakeData.rfEffort.application = JSON.parse(this.intakeData.rfEffort.application);\n    // }\n\n    this.SBItableLength = [];\n    this.NBItableLength = [];\n    this.SBItableLength.length = this.intakeData.rfEffort.device.length;\n    this.NBItableLength.length = this.intakeData.rfEffort.application.length;\n    console.log(this.intakeData);\n    // console.log(this.intakeData.rfEffort.application);\n    // if (this.SBItableLength.length >= 1) {\n    //   for (let i = 0; i < this.SBItableLength; i++) {\n    //     (<HTMLSelectElement>document.getElementById('deviceName_edit_' + i)).value = this.intakeData.rfEffort.device[i].devicename;\n    //     (<HTMLSelectElement>document.getElementById('deviceRole_edit_' + i)).value = this.intakeData.rfEffort.device[i].roleInAutomation;\n    //   }\n    // }\n    // if (this.NBItableLength.length >= 1) {\n    //   for (let i = 0; i < this.NBItableLength; i++) {\n    //     (<HTMLSelectElement>document.getElementById('applicationName_edit_' + i)).value = this.intakeData.rfEffort.application[i].applicationName;\n    //     (<HTMLSelectElement>document.getElementById('applicationRole_edit_' + i)).value = this.intakeData.rfEffort.application[i].roleInAutomation;\n    //   }\n    // }\n    this.intakeService.getAllIntakes().subscribe(\n      val5=>\n      {\n         this.intakelist=val5\n        \n      console.log(\"listideaname\",this.intakelist)\n      this.intakelist.forEach(element => {\n      if(element.hasOwnProperty('ideaName')==true)\n      {\n        this.ideanamearray.push(element.ideaName)\n      }\n      });\n\n    console.log('ideanamearray',this.ideanamearray)\n      })\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.intakeService.getBusinessUnitList().subscribe(\n      val1 => {\n        this.businessUnitList = val1;\n        this.intakeService.getBusinessBenefitsList().subscribe(\n          val2 => {\n            this.benefitsListEdit = val2;\n            this.intakeService.getComplexityList().subscribe(\n              val3 => {\n                this.complexityList = val3;\n                this.intakeService.getNBIList().subscribe(\n                  val4 => {\n                    this.nbiList = val4;\n                    // this.cities = this.nbiList;\n                    this.intakeService.getSBIList().subscribe(\n                      val5 => {\n                        this.sbiList = val5;\n                        this.intakeService.getFTErate().subscribe(\n                          val6 => {\n                            this.fteRate = val6;\n                          });\n                      });\n                  });\n              });\n          });\n      });\n    this.intakeService.getcommonApprover().subscribe(\n      val6 => {\n        this.commonApprover = val6;\n      });\n      if(this.intakeData.rfUploadFile.length > 0)\n{\nthis.intakeData.rfUploadFile.forEach(element => {\n  var elementname=element.fileName\n   var splitfilename=elementname.split(this.intakeData.intakeId+'_')\n  console.log(\"solitfilename\",splitfilename)\n  this.filenamearray.push(splitfilename[1])\n this.filenamearray.push(element.fileName)\n  console.log(\"this.filename\",this.filenamearray)\n  });\n}\n    this.nbiTypeSelected = this.intakeData.rfEffort.typeOfNBI;\n    this.sbiTypeSelected = this.intakeData.rfEffort.typeOfSBI;\n    for(var i=0; i<this.sbiTypeSelected.length; i++){\n      if(this.sbiTypeSelected[i].sbitype == 'Other (Specify)'){\n        var otherDeviceSbiId = this.sbiTypeSelected[i].id;\n        this.intakeData.rfEffort.device.filter(item=>\n          {\n            if(item.hasOwnProperty(\"otherFlag\")==true)\n            {\n              if(item.otherFlag!='')\n              {\n              this.deviceapplicationNames=item.devicename\n              }\n            }\n          })\n        break;\n      }\n    }\n\n    this.otherDeviceSbi = this.intakeData.rfEffort.device.filter(item => item.id == otherDeviceSbiId);\n\n    console.log(this.nbiTypeSelected);\n    console.log(this.sbiTypeSelected);\n    for(var i=0; i<this.nbiTypeSelected.length; i++){\n      if(this.nbiTypeSelected[i].nbitype == 'Other (Specify)'){\n        var otherDeviceNbiId = this.nbiTypeSelected[i].id;\n        this.intakeData.rfEffort.application.filter(item=>\n          {\n            if(item.hasOwnProperty(\"otherFlag\")==true)\n            {\n              if(item.otherFlag!='')\n              {\n                this.applicationNames=item.applicationName\n              }\n             \n            }\n          })\n        break;\n      }\n    }\n    this.otherDeviceNbi = this.intakeData.rfEffort.device.filter(item => item.id == otherDeviceNbiId);\n    this.nbiTypeDropdownSettings = Object.assign({}, this.nbiTypeDropdownSettings, { limitSelection: this.intakeData.rfEffort.noOfNBI * 1 });\n    this.sbiTypeDropdownSettings = Object.assign({}, this.sbiTypeDropdownSettings, { limitSelection: this.intakeData.rfEffort.noOfSBI * 1 });\n    this.spoc = this.intakeData.rfEffort.spocrequirement;\n    this.savings = this.intakeData.rfEffort.savingType;\n    // this.comparison = this.intakeData.rfEffort.isValidationRequired;\n    this.financialBenefits = this.intakeData.financialBenefits;\n    // this.approver = this.intakeData.approver;\n    // this.commonApprover = this.intakeData.approver;\n    // console.log(this.intakeData);\n    if (!this.user) {\n      this.router.navigateByUrl('loginmain');\n    }\n\n    /******************************************/\n    // for(var i=0;i<this.intakeData.businessBenefit.length;i++){\n    //   this.addBusinessBenefit(this.intakeData.businessBenefit[i]);\n    // }\n    /******************************************/\n    this.intakeEdit = this.formBuilder.group({\n      submitter: [this.intakeData.createdby.username, Validators.required],\n      dateFrom: [this.intakeData.targetImplementationDate],\n      comment: [this.intakeData.approvercomments],\n      businessUnitName: [this.intakeData.team.id, Validators.required],\n      benefittingDirector: [this.intakeData.team.department.director.name, Validators.required],\n      ideaName: [this.intakeData.ideaName, Validators.required],\n      ideaDescription: [this.intakeData.ideaDescription, Validators.required],\n      automationObjectives: [this.intakeData.automationObjectives, Validators.required],\n      avgDailyVolume: [this.intakeData.rfEffort.avgDailyVolume, Validators.required],\n      aet: [this.intakeData.rfEffort.aet, Validators.required],\n      // noOfDevices: [this.intakeData.rfEffort.noOfDevices, Validators.required],\n      // deviceNames: [this.intakeData.rfEffort.deviceNames, Validators.required],\n      noOfNBI: [this.intakeData.rfEffort.noOfNBI, Validators.required],\n      fteRate: [this.intakeData.rfEffort.fteRate.fteRateId, Validators.required],\n      automationRatio: [this.intakeData.rfEffort.automationRatio],\n      dataInterpretation: [this.intakeData.rfEffort.dataInterpretation],\n      manualActivity: [this.intakeData.rfEffort.manualActivity],\n      decisionMaking: [this.intakeData.rfEffort.decisionMaking],\n      noOfSBI: [this.intakeData.rfEffort.noOfSBI, Validators.required],\n      // noOfSystems: [this.intakeData.rfEffort.noOfSystems, Validators.required],\n    //   primaryApprover: [this.intakeData.approver.roleId, Validators.required],\n      typeOfNBI: [this.intakeData.rfEffort.typeOfNBI],\n      typeOfSBI: [this.intakeData.rfEffort.typeOfSBI],\n      actualFTE: [this.intakeData.rfEffort.actualFTE, Validators.required],\n      requestedComplexity: [this.intakeData.rfEffort.requestedComplexity, Validators.required],\n      noOfMonths: [this.intakeData.rfEffort.noOfMonths, Validators.required],\n      // noOfWorkingDays: [this.intakeData.rfEffort.noOfWorkingDays, Validators.required],\n      /****************************************************************************************/\n      businessBenefits: [this.intakeData.automationBenefits, Validators.required],\n      benefitsFormEdit: this.formBuilder.array([ ]),\n      /****************************************************************************************/\n    });\n\n    for(i=0;i<this.intakeData.businessBenefit.length; i++){\n      let benefittemp = {};\n      benefittemp['businessBenefitId'] = this.intakeData.businessBenefit[i].businessBenefit.businessBenefitId;\n      benefittemp['businessBenefit'] = this.intakeData.businessBenefit[i].businessBenefit.businessBenefit;\n      this.benefitsSelected.push(benefittemp);\n      this.addBusinessBenefit(this.intakeData.businessBenefit[i]);\n    }\n\n  }\n\n  /****************************NEW Form Edit****************************************/\n  benefitsFormEdit(): FormArray {\n    return this.intakeEdit.get(\"benefitsFormEdit\") as FormArray\n  }\n  vaildateZero(event)\n  {\n    //console.log(\"funcitonworking\",event)\nif(event==0 && event!='')\n{\n  this.zeromessage=true\n\n}\nelse\n{\n  this.zeromessage=false\n}\n  }\n\n  EditBenefitsFormNew(val):FormGroup{\n    return this.formBuilder.group({\n      benefitId:[val.businessBenefitId],\n      ideaBenefitName:[val.businessBenefit],\n      description:['',[Validators.required, Validators.maxLength(500)]],\n      mapId:[0],\n    });\n  }\n\n  addBusinessBenefitNew(val):void {\n    this.benefitsFormEdit().push(this.EditBenefitsFormNew(val));\n  }\n\n  /*/////////////////Edit Form Exiting DATA//////////////////////*/\n  EditBenefitsForm(benefit):FormGroup{\n    return this.formBuilder.group({\n      benefitId:[benefit.businessBenefit.businessBenefitId],\n      ideaBenefitName:[benefit.businessBenefit.businessBenefit],\n      description:[benefit.description,[Validators.required, Validators.maxLength(500)]],\n      mapId:[benefit.mapId],\n    });\n  }\n\n  addBusinessBenefit(benefit):void {\n    this.benefitsFormEdit().push(this.EditBenefitsForm(benefit));\n  }\n\n  /*//////////////////////ON select benefit/////////////////////*/\n  onideaBenefitsSelectEdit(event){\n    this.addBusinessBenefitNew(event);\n  }\n  onideaBenefitsDeSelectEdit(event){\n    let index = this.benefitsFormEdit().controls.findIndex(x => x.value.benefitId === event.businessBenefitId);\n    this.benefitsFormEdit().removeAt(index);\n  }\n  /********************************************************************/\n\n  changeCOEreq(event: any) {\n    this.coe = event.target.value;\n  }\n\n  changeSPOCreq(event: any) {\n    this.spoc = event.target.value;\n  }\n  filenameduplication(files) {\n    console.log(\"filename\",this.filenamearray,files)\n   let filename=false\n    if(this.filenamearray.length > 0)\n    {\n  let array= this.filenamearray.some(x=>\n      {\nif(x==files)\n{\n  return true\n}\nreturn false\n    })\n     filename=array\n    \n    }\n    console.log('fileename',filename)\n    return filename\n\n \n  }\n\n  toogleShowFilter() {\n    this.ShowFilter = !this.ShowFilter;\n    this.nbiTypeDropdownSettings = Object.assign({}, this.nbiTypeDropdownSettings, { allowSearchFilter: this.ShowFilter });\n  }\n  myTrim(x) {\n    return x.replace(/^\\s+|\\s+$/gm,'');\n  }\n  ideanameDuplicateCheck(name)\n  {\n    var userinputname=this.myTrim(name)\n    //alert(userinputname)\n    console.log(\"ide\",userinputname)\n\n    if(this.ideanamearray.length >0 )\n    {\n      if(this.intakeData.ideaName!=userinputname)\n      {\n        if(this.ideanamearray.includes(userinputname)==true)\n        {\n          this.isideanameDuplicate=true\n        }\n        else{\n          this.isideanameDuplicate=false\n        }\n      }\n      else\n      {\n        this.isideanameDuplicate=false\n      }\n     \n    }\nconsole.log(\"ideaduplicate\",this.isideanameDuplicate)\n  }\n\n  onSbiItemSelect(item: any) {\n    let pojo ={};\n    pojo['roleInAutomation'] = '';\n    this.sbiRoleInvalid = true;\n      if(item.sbitype == 'Other (Specify)'){\n        pojo['devicename'] = \"\";\n        pojo['otherFlag'] = \"Other (Specify)\";\n        this.intakeData.rfEffort.device.push(pojo);\n        this.otherDeviceName = true;\n      }\n      else{\n        pojo['devicename'] = item.sbitype;\n        pojo['otherFlag'] = \"\";\n        this.intakeData.rfEffort.device.push(pojo);\n      }\n  }\n  vaildationmessageApp(event){\n    console.log(\"function is wo1rking\") \n    // let value=event.target.value\n    // var message='You have reached the maximum limit 100 charactesssr!'\n    if(event.target.value.length >99){\n      this.errorAlertApp = true;\n      // let myContainer = document.getElementById('appMessage') as HTMLInputElement;\n      // myContainer.value = message;\n      // (<HTMLSelectElement>document.getElementById('appMessage')).innerHTML=message\n    }\n    else{\n      this.errorAlertApp = false;\n    }\n  }\n  onItemDeSelect(event: any){\n    this.indexValueSbi = -1;\n    for(var i=0;i<this.intakeData.rfEffort.device.length;i++){\n      if(this.intakeData.rfEffort.device[i].devicename == event.sbitype){\n        this.indexValueSbi = i;\n        break;\n      }\n      else if(this.intakeData.rfEffort.device[i].otherFlag == event.sbitype){\n        this.indexValueSbi = i;\n        break;\n      }\n    }\n    if (this.indexValueSbi > -1) {\n      this.intakeData.rfEffort.device.splice(this.indexValueSbi, 1);\n    }\n    if(event.sbitype == 'Other (Specify)'){\n      this.otherDeviceName = false\n    }\n    let count = 0;\n    setTimeout(function(){\n      for(var i=0; i<this.intakeData.rfEffort.device.length; i++){\n        if((<HTMLSelectElement>document.getElementById('deviceRole_edit_'+i)).value == ''){\n          count++;\n          break;\n        }\n      }\n    }.bind(this),1000);\n    if(count !=0  || this.intakeData.rfEffort.device.length!=this.SBItableLength.length){\n      this.sbiRoleInvalid = true;\n    }else{\n      this.sbiRoleInvalid = false;\n    }\n  }\n  otherFieldValidation(event, i){\n    if(event == ''){\n      this.otherDeviceName = true;\n    }\n    else{\n      this.otherDeviceName = false;\n      this.intakeData.rfEffort.device[i].devicename = event;\n      this.deviceapplicationNames=event\n    }\n\n  }\n  onNbiItemSelect(item: any){\n    let pojo ={};\n    pojo['roleInAutomation'] = '';\n    this.roleInvalidNbi = true;\n    if(item.nbitype == 'Other (Specify)'){\n      pojo['applicationName'] = \"\";\n      pojo['otherFlag'] = \"Other (Specify)\";\n      this.intakeData.rfEffort.application.push(pojo);\n      this.otherApplicationName = true;\n    }else{\n      pojo['applicationName'] = item.nbitype;\n      pojo['otherFlag'] = \"\";\n      this.intakeData.rfEffort.application.push(pojo);\n    }\n\n  }\n  onItemDeSelectApp(event:any){\n    this.indexValueNbi = -1;\n    for(var i=0; i<this.intakeData.rfEffort.application.length; i++){\n      if(this.intakeData.rfEffort.application[i].applicationName == event.nbitype){\n        this.indexValueNbi = i;\n        break;\n      }\n        else if(this.intakeData.rfEffort.application[i].otherFlag == event.nbitype){\n          this.indexValueNbi = i;\n          break;\n        }\n    }\n\n    if (this.indexValueNbi > -1) {\n      this.intakeData.rfEffort.application.splice(this.indexValueNbi, 1);\n    }\n    if(event.nbitype == 'Other (Specify)'){\n      this.otherApplicationName = false;\n      this.otherDeviceSbi.sbitype = \"\";\n    }\n    let count = 0;\n    setTimeout(function(){\n      for(var i=0; i<this.intakeData.rfEffort.application.length; i++){\n        if((<HTMLSelectElement>document.getElementById('applicationRole_edit_'+i)).value == ''){\n          count++;\n          break;\n        }\n      }\n    }.bind(this),1000);\n\n    if(count !=0 || this.intakeData.rfEffort.application.length != this.NBItableLength.length){\n      this.roleInvalidNbi = true;\n    }\n    else{\n      this.roleInvalidNbi= false;\n    }\n\n  }\n  otherFieldValidationApp(event, i){\n    if(event == ''){\n      this.otherApplicationName = true;\n    }\n    else{\n      this.otherApplicationName = false;\n      this.intakeData.rfEffort.application.applicationName = event;\n      this.applicationNames=event\n      \n    }\n  }\n\n  vaildationdevicerole(event,index)\n  {\n \nif(event.length >99)\n{\nthis.messageroledevice=true;\n(<HTMLInputElement>document.getElementById('deviceRole_edit_'+index)).className = \"table-cell errorMessage\";\n}\nelse\n{\n  this.messageroledevice=false;\n  (<HTMLInputElement>document.getElementById('deviceRole_edit_'+index)).className = \"table-cell\";\n}\n  }\n  vaildationApprole(event, index)\n  {\n \nif(event.length >99)\n{\nthis.messageroleApp=true;\n(<HTMLInputElement>document.getElementById('applicationRole_edit_'+index)).className = \"table-cell errorMessage\";\n}\nelse\n{\n  this.messageroleApp=false;\n  (<HTMLInputElement>document.getElementById('applicationRole_edit_'+index)).className = \"table-cell\";\n}\n  }\n\n  onPaste(event)\n  {\n    console.log(\"eventpaste\",event.clipboardData.getData('text'))\n    var value=/^[a-zA-Z0-9- ]*$/.test(event.clipboardData.getData('text'))\n    console.log(\"value\",value)\n  \n    if(value==false)\n    {\n      return false\n    }\n  \n  \n  }\n  vaildationmessagedevice(event){\n    console.log(\"function is wo1rking\")\n    // let value=event.target.value\n    // var message='You have reached the maximum limit 100 charactesssr!'\n    if(event.target.value.length >99){\n      this.errorAlertDevice = true;\n      // debugger;\n      // let myContainer = document.getElementById('deviceMessage') as HTMLInputElement;\n      // myContainer.value = message;\n      // (<HTMLSelectElement>document.getElementById('deviceMessage')).innerHTML=message;\n    }\n  }\n\n  vaildationspcl_character(event){\n    var k;\n    if(event=='')\n    {\n      this.spcharmessage=false\n    }\n     k = event.which; \n     console.log(event.key)\n     \n     if(((k > 64 && k < 91) || (k > 96 && k < 123) || (k > 7 && k < 10) || k == 32 || (k > 47 && k < 58)|| (k==20)) == false){\n      \n      this.spcharmessage=true\n     }\n     if(((k > 64 && k < 91) || (k > 96 && k < 123) || (k > 7 && k < 10) || k == 32 || (k > 47 && k < 58)) == true){\n      if(((event.key == '!') || (event.key == '@') || (event.key == '#') || (event.key == '$') || (event.key == '%') || (event.key == '^') || (event.key == '&') || (event.key == '*') || (event.key == '(') || (event.key == ')')) == true){\n        this.spcharmessage=true;\n      }else{\n        this.spcharmessage=false\n      }\n     }\n    //  console.log(\"expressionafter\",((k > 64 && k < 91) || (k > 96 && k < 123) || (k > 10 && k < 7) || k == 32 || (k > 47 && k < 58)))\n     \n     //         k = event.keyCode;  (Both can be used)\n     return (!this.spcharmessage); \n    //var originalpattern=/^([a-zA-Z0-9 _-]+)$/\n    // var pattern=/^[a-zA-Z0-9_]*$/\n    // console.log(\"sss\",this.f)\n    // console.log(\"cha\",event.which)\n    // console.log(\"ee\", String.fromCharCode(event.which));\n    //   var reg = event.target.value.match();\n    //   var expr = pattern.test(String.fromCharCode(event.which));\n    //   if(String.fromCharCode(event.which)=='')\n    //   {\n    //     this.spcharmessage=false\n    //   }\n    //   if (expr == false) {\n  \n    //     this.spcharmessage=true\n    //     console.log(\"d\");\n    //     event.preventDefault();\n    //     return false;\n    //   }\n    //   else\n    //   {\n    //     this.spcharmessage=false\n    //   }\n  }\n  roleValidationNbi(index){\n    let count = 0;\n    for(var i=0; i<this.intakeData.rfEffort.application.length; i++){\n      if((<HTMLSelectElement>document.getElementById('applicationRole_edit_'+i)).value == ''){\n        count++;\n        break;\n      }\n    }\n    if(count !=0  || this.intakeData.rfEffort.application.length != this.NBItableLength.length){\n      this.roleInvalidNbi = true;\n    }\n    else{\n      this.roleInvalidNbi= false;\n\n    }\n    if(this.intakeData.rfEffort.application.length > index){\n      this.intakeData.rfEffort.application[index].roleInAutomation = (<HTMLSelectElement>document.getElementById('applicationRole_edit_'+index)).value;\n    }else{\n      let pojo={}\n      pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('applicationRole_edit_'+index)).value;\n      this.intakeData.rfEffort.application.push(pojo);\n    }\n  }\n  roleValidationSbi(index){\n    let count = 0;\n    for(var i=0; i<this.intakeData.rfEffort.device.length; i++){\n      if((<HTMLSelectElement>document.getElementById('deviceRole_edit_'+i)).value == ''){\n        count++;\n        break;\n      }\n    }\n    if(count !=0 || this.intakeData.rfEffort.device.length!=this.SBItableLength.length){\n      this.sbiRoleInvalid = true;\n    }else{\n      this.sbiRoleInvalid = false;\n    }\n    if(this.intakeData.rfEffort.device.length > index){\n      this.intakeData.rfEffort.device[index].roleInAutomation = (<HTMLSelectElement>document.getElementById('deviceRole_edit_'+index)).value;\n    }else{\n      let pojo={}\n      pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('deviceRole_edit_'+index)).value;\n      this.intakeData.rfEffort.device.push(pojo);\n    }\n  }\n\n  limitNBI(data) {\n    if(data == 0){\n      this.nbiRoleInvalid = false;\n      this.otherApplicationName = false;\n    }\n    else{\n      this.roleInvalidNbi = true;\n    }\n    this.intakeData.rfEffort.application = [];\n    this.nbiTypeArray=[];\n    this.NBItableLength = [];\n    this.NBItableLength.length = data;\n    this.intakeEdit.patchValue({\n      typeOfNBI: '',\n    });\n    this.nbiTypeDropdownSettings = Object.assign({}, this.nbiTypeDropdownSettings, { limitSelection: this.intakeEdit.value.noOfNBI * 1 });\n  }\n\n  limitSBI(data) {\n    if(data == 0){\n      this.sbiRoleInvalid = false;\n      this.otherDeviceName = false;\n    }\n    else{\n      this.sbiRoleInvalid = true;\n    }\n    this.sbitype = [];\n    this.intakeData.rfEffort.device = [];\n    this.SBItableLength = [];\n    this.SBItableLength.length = data;\n    this.intakeEdit.patchValue({\n      typeOfSBI: '',\n    });\n    this.sbiTypeDropdownSettings = Object.assign({}, this.sbiTypeDropdownSettings, { limitSelection: this.intakeEdit.value.noOfSBI * 1 });\n\n  }\n\n  changeSavingsType(event: any) {\n    this.savings = event.target.value;\n  }\n\n  changeFinancialBenefits(event: any) {\n    this.financialBenefits = event.target.value;\n  }\n\n  calculateRatio() {\n    this.ratio = (this.intakeEdit.value.dataInterpretation * 1) + (this.intakeEdit.value.manualActivity * 1) + (this.intakeEdit.value.decisionMaking * 1);\n    this.ratio = this.intakeEdit.value.aet - this.ratio;\n    this.ratio = (this.ratio * 100) / this.intakeEdit.value.aet;\n    this.ratio = this.ratio.toFixed();\n    this.intakeEdit.patchValue({\n      automationRatio: this.ratio,\n      dataInterpretation: this.intakeEdit.value.dataInterpretation * 1,\n      manualActivity: this.intakeEdit.value.manualActivity * 1,\n      decisionMaking: this.intakeEdit.value.decisionMaking * 1,\n    });\n  }\n\n  selectBusinessUnit(event: any) {\n    // console.log(this.approver);\n    if (event.target.value === \"\") {\n      this.approver = {};\n      this.intakeEdit.patchValue({\n        // primaryApprover: '',\n        benefittingDirector: ''\n      });\n    } else {\n      this.approver = this.businessUnitList.filter(item => item.id === (event.target.value * 1));\n      this.approver = this.approver[0];\n      this.selectedBusinessUnit = this.approver.teamName;\n      this.approver = this.approver.department.director;\n      this.intakeEdit.patchValue({\n        // primaryApprover: this.commonApprover.role.roleId,\n        benefittingDirector: this.approver.name\n      });\n    }\n  }\n\n  // changecomparisonreq(event: any) {\n  //   this.comparison = event.target.value;\n  // }\n\n  get f() { return this.intakeEdit.controls; }\n\n  // onFileSelect(input: HTMLInputElement): void {\n  //   this.fileInfo = this.fileInfo.concat(Array.from(input.files));\n  //   console.log('files', this.fileInfo);\n  // }\n\n  onFileSelect(input: HTMLInputElement): void {\n    console.log(\"arraylist\",this.filenamearray,this.finalfilearray)\n    this.totalsize=this.checkFilesize(input)\n    for (let i = 0; i < input.files.length; i++) {\n      if (this.allowedType.includes(input.files[i].type)==true && this.totalsize <= 5242880 && this.filenameduplication(input.files[i].name)==false) {\n        this.fileInfo = this.fileInfo.concat(input.files[i]);\n        this.filenamearray.push(input.files[i].name)\n      } else {\n       // console.log('Please select Word Documents less than 5MB');\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"Please select the documents of size less than 5MB(Accepted file formats: .pdf, .docx, .doc, .pptx, .csv, .xls, .xlsx)\",\n        }];\n        if(this.filenameduplication(input.files[i].name)==true && this.filenamearray.length > 0)\n        {\n           \n          this.alertMessage=[{\n            \"type\": \"danger\", \"close\": true,\n            \"content\":input.files[i].name +' is already  been added',\n          }]\n        }\n        setTimeout(function () {\n          this.alertdata = false;\n          // window.location.reload();\n        }.bind(this), 3000);\n      }\n    }\n    this.fileInputs.nativeElement.value = '';\n    console.log('files', this.fileInfo);\n  }\n\n  checkFilesize(files)\n  {\n    console.log(\"totalsize\",this.totalsize)\n    \n    for (let i = 0; i < files.files.length; i++) {\n      if (this.allowedType.includes(files.files[i].type)==true && this.totalsize <= 5242880 && this.filenameduplication(files.files[i].name)==false) {\n      this.finalfilearray = this.finalfilearray.concat(files.files[i]);\n      console.log(\"filesarray\",this.finalfilearray)\n      }\n    }\n    console.log(\"finalfilearray\",this.finalfilearray)\n    \n    var sum=0 \nthis.finalfilearray.filter((word ,index)=>\n    {\n      \n      console.log(\"sumbrfoe\",sum,index)\n     sum=(index>=1?sum + word.size:word.size)\n     console.log(\"sum\",sum)\n    });\nreturn sum\n  }\n  removeFile(index,filename) {\n    // console.log(index);\n    this.fileInfo.splice(index, 1);\n    this.finalfilearray.splice(index,1)\n    this.filenamearray=this.filenamearray.filter(e=>e!==filename)\n    console.log(\"neww arry\",this.filenamearray)\n  }\n\n  removeUploadedFile(file, index,filename) {\n console.log(\"viewed filed\",file,index)\n     var splitfilename=filename.split(this.intakeData.intakeId+'_')\n\n     this.filenamearray=this.filenamearray.filter(e=>e!==splitfilename[1])\n    this.filenamearray=this.filenamearray.filter(e=>e!==filename)\nconsole.log(\"filenamearray\",this.filenamearray)\n    this.intakeService.deleteFile(file, this.intakeData.intakeId).subscribe(\n      val => {\n        this.intakeData.rfUploadFile.splice(index, 1);\n      });\n      \n  }\n\n  downloadFile(file) {\n    this.intakeService.downloadFile(file, this.intakeData.intakeId).subscribe(\n      val => {\n        // console.log(val);\n      });\n  }\n\n  saveDraft() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.intakeEdit.invalid) {\n      return;\n    }\n    let benefitArry = [];\n    for(var i=0; i<this.benefitsFormEdit().controls.length; i++){\n      let pojobenefits = {};\n      pojobenefits['mapId'] = this.benefitsFormEdit().controls[i].value.mapId;\n      let businessBenefit = {};\n      businessBenefit['businessBenefitId'] = this.benefitsFormEdit().controls[i].value.benefitId;\n      pojobenefits['businessBenefit'] = businessBenefit;\n      pojobenefits['description'] = this.benefitsFormEdit().controls[i].value.description;\n      benefitArry.push(pojobenefits);\n    }\n    let nbiTypeList = [];\n    let sbiTypeList = [];\n\n    if (this.intakeEdit.value.typeOfNBI.length != \"\") {\n      this.intakeEdit.value.typeOfNBI.forEach((element, index) => {\n        let pojo = {};\n        // console.log(element);\n        pojo['id'] = element.id;\n        nbiTypeList.push(pojo);\n      });\n    }\n\n    if (this.intakeEdit.value.typeOfSBI.length != \"\") {\n      this.intakeEdit.value.typeOfSBI.forEach((element, index) => {\n        let pojo = {};\n        pojo['id'] = element.id;\n        sbiTypeList.push(pojo);\n      });\n    }\n\n    let deviceNames = [];\n    let applicationNames = [];\n    if (this.intakeEdit.value.typeOfSBI.length >= 1) {\n      for (let i = 0; i < this.intakeEdit.value.typeOfSBI.length; i++) {\n        let pojo = {};\n        if((<HTMLSelectElement>document.getElementById('deviceName_edit_' + i)).textContent == \"Other (Specify)\"){\n          pojo['devicename'] = (<HTMLSelectElement>document.getElementById('other-Name-edit')).value;\n          pojo['otherFlag'] = \"Other (Specify)\";\n        }\n        else{\n          pojo['devicename'] = (<HTMLSelectElement>document.getElementById('deviceName_edit_' + i)).textContent;\n          pojo['otherFlag'] = \"\";\n        }\n        pojo['id'] = this.intakeEdit.value.typeOfSBI[i].id;\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('deviceRole_edit_' + i)).value;\n        deviceNames.push(pojo);\n      }\n    }\n    if (this.intakeEdit.value.typeOfNBI.length >= 1) {\n      for (let i = 0; i < this.intakeEdit.value.typeOfNBI.length; i++) {\n        let pojo = {};\n        if((<HTMLSelectElement>document.getElementById('applicationName_edit_' + i)).textContent == \"Other (Specify)\"){\n          pojo['applicationName'] = (<HTMLSelectElement>document.getElementById('other-Name-app-edit')).value;\n          pojo['otherFlag'] = \"Other (Specify)\";\n        }else{\n          pojo['applicationName'] = (<HTMLSelectElement>document.getElementById('applicationName_edit_' + i)).textContent;\n          pojo['otherFlag'] = \"\";\n        }\n        pojo['id'] = this.intakeEdit.value.typeOfNBI[i].id;\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('applicationRole_edit_' + i)).value;\n        applicationNames.push(pojo);\n      }\n    }\n\n    this.buttonSubmitted = true;\n    let draftIntakeValues = {\n      rfStatus:\n      {\n        status: 'DRAFT'\n      },\n      rfEffort: {\n        savingType: this.savings,\n        actualFTE: this.intakeEdit.value.actualFTE,\n        avgDailyVolume: this.intakeEdit.value.avgDailyVolume,\n        aet: this.intakeEdit.value.aet,\n        id: this.intakeData.rfEffort.id,\n        manualActivityCost: this.manualCost,\n        costPerFTE: 50,\n        fteRate: {\n          fteRateId: this.intakeEdit.value.fteRate\n        },\n        // noOfDevices: this.intakeEdit.value.noOfDevices,\n        noOfNBI: this.intakeEdit.value.noOfNBI * 1,\n        noOfSBI: this.intakeEdit.value.noOfSBI * 1,\n        noOfApplication: this.intakeEdit.value.noOfNBI * 1,\n        noOfDeviceInterfaces: this.intakeEdit.value.noOfSBI * 1,\n        deviceNames: deviceNames,\n        applicationsNames: applicationNames,\n        // noOfSystems: this.intakeEdit.value.noOfSystems,\n        typeOfNBI: nbiTypeList,\n        typeOfSBI: sbiTypeList,\n        requestedComplexity: this.intakeEdit.value.requestedComplexity,\n        noOfMonths: this.intakeEdit.value.noOfMonths,\n        noOfWorkingDays: 22,\n        assignedComplexity: {\n          complexityCode: this.complexity.complexityCode\n        },\n        automationCost: this.automationCost,\n        revenue: this.revenue,\n        dataInterpretation: this.intakeEdit.value.dataInterpretation,\n        manualActivity: this.intakeEdit.value.manualActivity,\n        automationRatio: this.intakeEdit.value.automationRatio,\n        decisionMaking: this.intakeEdit.value.decisionMaking,\n        spocrequirement: this.spoc,\n        // isValidationRequired: this.comparison\n      },\n      businessBenefit: benefitArry,\n      intakeId: this.intakeData.intakeId,\n      targetImplementationDate: this.intakeEdit.value.dateFrom,\n      financialBenefits: this.financialBenefits,\n      automationBenefits: this.intakeEdit.value.ideaBenefits,\n      automationObjectives: this.intakeEdit.value.automationObjectives,\n      team: {\n        id: this.intakeEdit.value.businessUnitName,\n      },\n      benefitingdirector: this.intakeEdit.value.benefittingDirector,\n      ideaName: this.intakeEdit.value.ideaName,\n      ideaDescription: this.intakeEdit.value.ideaDescription,\n      remarks: '',\n      approvercomments: '',\n      // approver: this.commonApprover.role,\n      createdby: this.user,\n      modifiedby: this.user.username,\n      status: 'Draft',\n      rfUploadFile: this.intakeData.rfUploadFile,\n      createddate: this.intakeData.createddate,\n      modifieddate: this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss')\n    };\n\n    let intakeDraftPojo = {\n      rfIntake: draftIntakeValues,\n      monthlyRevenue: this.monthlyRevenue\n    };\n    // console.log(this.benefitsFormEdit().controls);\n    // return false;\n    this.intakeService.editIntake(JSON.stringify(intakeDraftPojo)).subscribe(\n      val => {\n        if (this.fileInfo && this.fileInfo.length > 0) {\n          this.intakeService.fileUpload(this.fileInfo, this.intakeData.intakeId).subscribe(\n            val2 => {\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"success\", \"close\": true,\n                \"content\": \"Intake saved as draft\",\n              }];\n              setTimeout(function () {\n                this.alertdata = false;\n                window.location.reload();\n              }.bind(this), 1000);\n            },\n            error => {\n              this.alertdata = true;\n              this.alertMessage = [{\n                \"type\": \"danger\", \"close\": true,\n                \"content\": \"<strong>Failed</strong> to save as draft\",\n              }\n              ];\n              setTimeout(function () {\n                this.alertdata = false;\n                window.location.reload();\n              }.bind(this), 3000);\n            });\n        } else {\n          this.alertdata = true;\n          this.alertMessage = [{\n            \"type\": \"success\", \"close\": true,\n            \"content\": \"Intake saved as draft\",\n          }];\n          setTimeout(function () {\n            this.alertdata = false;\n            window.location.reload();\n          }.bind(this), 1000);\n        }\n      },\n      error => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>Failed</strong> to save as draft\",\n        }\n        ];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 3000);\n      });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.intakeEdit.invalid) {\n      return;\n    }\n    let benefitArry = [];\n    for(var i=0; i<this.benefitsFormEdit().controls.length; i++){\n      let pojobenefits = {};\n      pojobenefits['mapId'] = this.benefitsFormEdit().controls[i].value.mapId;\n      let businessBenefit = {};\n      businessBenefit['businessBenefitId'] = this.benefitsFormEdit().controls[i].value.benefitId;\n      pojobenefits['businessBenefit'] = businessBenefit;\n      pojobenefits['description'] = this.benefitsFormEdit().controls[i].value.description;\n      benefitArry.push(pojobenefits);\n    }\n    let nbiTypeList = [];\n    let sbiTypeList = [];\n\n    if (this.intakeEdit.value.typeOfNBI.length != \"\") {\n      this.intakeEdit.value.typeOfNBI.forEach((element, index) => {\n        let pojo = {};\n        // console.log(element);\n        pojo['id'] = element.id;\n        nbiTypeList.push(pojo);\n      });\n    }\n\n    if (this.intakeEdit.value.typeOfSBI.length != \"\") {\n      this.intakeEdit.value.typeOfSBI.forEach((element, index) => {\n        let pojo = {};\n        pojo['id'] = element.id;\n        sbiTypeList.push(pojo);\n      });\n    }\n\n    let deviceNames = [];\n    let applicationNames = [];\n    if (this.SBItableLength.length >= 1) {\n      for (let i = 0; i < this.intakeEdit.value.typeOfSBI.length; i++) {\n        let pojo = {};\n        if((<HTMLSelectElement>document.getElementById('deviceName_edit_' + i)).textContent == \"Other (Specify)\"){\n          pojo['devicename'] = (<HTMLSelectElement>document.getElementById('other-Name-edit')).value;\n          pojo['otherFlag'] = \"Other (Specify)\";\n        }\n        else{\n          pojo['devicename'] = (<HTMLSelectElement>document.getElementById('deviceName_edit_' + i)).textContent;\n          pojo['otherFlag'] = \"\";\n        }\n        pojo['id'] = this.intakeEdit.value.typeOfSBI[i].id;\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('deviceRole_edit_' + i)).value;\n        deviceNames.push(pojo);\n      }\n    }\n    if (this.intakeEdit.value.typeOfNBI.length >= 1) {\n      for (let i = 0; i < this.intakeEdit.value.typeOfNBI.length; i++) {\n        let pojo = {};\n        if((<HTMLSelectElement>document.getElementById('applicationName_edit_' + i)).textContent == \"Other (Specify)\"){\n          pojo['applicationName'] = (<HTMLSelectElement>document.getElementById('other-Name-app-edit')).value;\n          pojo['otherFlag'] = \"Other (Specify)\";\n        }else{\n          pojo['applicationName'] = (<HTMLSelectElement>document.getElementById('applicationName_edit_' + i)).textContent;\n          pojo['otherFlag'] = \"\";\n        }\n        pojo['id'] = this.intakeEdit.value.typeOfNBI[i].id;\n        pojo['roleInAutomation'] = (<HTMLSelectElement>document.getElementById('applicationRole_edit_' + i)).value;\n        applicationNames.push(pojo);\n      }\n    }\n\n    this.buttonSubmitted = true;\n    let createIntakeValues = {\n      rfStatus:\n      {\n        status: 'PENDING'\n      },\n      rfEffort: {\n        savingType: this.savings,\n        actualFTE: this.intakeEdit.value.actualFTE,\n        avgDailyVolume: this.intakeEdit.value.avgDailyVolume,\n        aet: this.intakeEdit.value.aet,\n        id: this.intakeData.rfEffort.id,\n        manualActivityCost: this.manualCost,\n        costPerFTE: 50,\n        fteRate: {\n          fteRateId: this.intakeEdit.value.fteRate\n        },\n        // noOfDevices: this.intakeEdit.value.noOfDevices,\n        noOfNBI: this.intakeEdit.value.noOfNBI * 1,\n        noOfSBI: this.intakeEdit.value.noOfSBI * 1,\n        noOfApplication: this.intakeEdit.value.noOfNBI * 1,\n        noOfDeviceInterfaces: this.intakeEdit.value.noOfSBI * 1,\n        deviceNames: deviceNames,\n        applicationsNames: applicationNames,\n        // noOfSystems: this.intakeEdit.value.noOfSystems,\n        typeOfNBI: nbiTypeList,\n        typeOfSBI: sbiTypeList,\n        requestedComplexity: this.intakeEdit.value.requestedComplexity,\n        noOfMonths: this.intakeEdit.value.noOfMonths,\n        noOfWorkingDays: 22,\n        assignedComplexity: {\n          complexityCode: this.complexity.complexityCode\n        },\n       \n        automationCost: this.automationCost,\n        revenue: this.revenue,\n        dataInterpretation: this.intakeEdit.value.dataInterpretation,\n        manualActivity: this.intakeEdit.value.manualActivity,\n        automationRatio: this.intakeEdit.value.automationRatio,\n        decisionMaking: this.intakeEdit.value.decisionMaking,\n        spocrequirement: this.spoc,\n        // isValidationRequired: this.comparison\n      },\n      businessBenefit: benefitArry,\n      rfUploadFile: this.intakeData.rfUploadFile,\n      intakeId: this.intakeData.intakeId,\n      targetImplementationDate: this.intakeEdit.value.dateFrom,\n      financialBenefits: this.financialBenefits,\n      automationBenefits: this.intakeEdit.value.ideaBenefits,\n      automationObjectives: this.intakeEdit.value.automationObjectives,\n      team: {\n        id: this.intakeEdit.value.businessUnitName,\n      },\n      pathupload: '',\n      benefitingdirector: this.intakeEdit.value.benefittingDirector,\n      ideaName: this.intakeEdit.value.ideaName,\n      ideaDescription: this.intakeEdit.value.ideaDescription,\n      remarks: '',\n      approvercomments: '',\n      createdby: this.user,\n      // approver: this.commonApprover.role,\n      modifiedby: this.user.username,\n      status: 'Pending',\n      createddate: this.intakeData.createddate,\n      modifieddate: this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss')\n    };\n\n    let intakeCreatePojo = {\n      rfIntake: createIntakeValues,\n      monthlyRevenue: this.monthlyRevenue\n    };\n    // console.log(JSON.stringify(createIntakeValues));\n\n    this.intakeService.editIntake(JSON.stringify(intakeCreatePojo)).subscribe(\n      val => {\n        this.submitMessage = val;\n        if (this.fileInfo && this.fileInfo.length > 0) {\n          this.intakeService.fileUpload(this.fileInfo, this.intakeData.intakeId).subscribe(\n            val2 => {\n              let maildata = {\n                mailContent: '<b>' + this.intakeEdit.value.ideaName + '</b> has been submitted for approval by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n                to: '',\n                cc: '',\n                Bcc: '',\n                testingRecipients: {\n                  to: this.commonApprover.email.value,\n                  cc: this.user.email,\n                  Bcc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com'\n                },\n                subject: 'INTAKE-Submitted for Approval'\n              };\n              if(this.submitMessage.message  && this.submitMessage.message.includes('failed') && this.submitMessage.message.includes('Jira')) {\n                maildata.mailContent += '<br><br><span style=\"color:red;\"><b>Note:</b> Failed to update in Jira.</span>';\n              }\n              this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n                val1 => {\n                  this.message = val1;\n                  if (this.message.response == 'Mail Sent Successfully' && this.submitMessage.message) {\n                    this.alertdata = true;\n                    this.alertMessage = [{\n                      \"type\": \"danger\", \"close\": true,\n                      \"content\": this.submitMessage.message,\n                    }];\n                    setTimeout(function () {\n                      this.alertdata = false;\n                      window.location.reload();\n                    }.bind(this), 3000);\n                  } else if (this.message.response == 'Mail Sent Successfully') {\n                    this.alertdata = true;\n                    this.alertMessage = [{\n                      \"type\": \"success\", \"close\": true,\n                      \"content\": \"Intake submitted Successfully\",\n                    }];\n                    setTimeout(function () {\n                      this.alertdata = false;\n                      window.location.reload();\n                    }.bind(this), 1000);\n                  } else {\n                    this.alertdata = true;\n                    this.alertMessage = [{\n                      \"type\": \"danger\", \"close\": true,\n                      \"content\": \"<strong>Failed</strong> to send mail\",\n                    }\n                    ];\n                    setTimeout(function () {\n                      this.alertdata = false;\n                      window.location.reload();\n                    }.bind(this), 3000);\n                  }\n                });\n            });\n        } else {\n          let maildata = {\n            mailContent: '<b>' + this.intakeEdit.value.ideaName + '</b> has been submitted for approval by <b>' + this.user.name + '</b> on ' + this.datePipe.transform(new Date().toISOString(), 'yyyy-MM-dd HH:mm:ss'),\n            to: '',\n            cc: '',\n            Bcc: '',\n            testingRecipients: {\n              to: this.commonApprover.email.value,\n              cc: this.user.email,\n              Bcc: 'arpan.jyoti@prodapt.com,ravichandran.k@prodapt.com,gayathri.sk@prodapt.com,praveen.ch@prodapt.com,anusudha.s@prodapt.com,williamedilbert.pr@prodapt.com'\n            },\n            subject: 'INTAKE-Submitted for Approval'\n          };\n          if(this.submitMessage.message  && this.submitMessage.message.includes('failed') && this.submitMessage.message.includes('Jira')) {\n            maildata.mailContent += '<br><br><span style=\"color:red;\"><b>Note:</b> Failed to update in Jira.</span>';\n          }\n          this.loginService.sendMail(JSON.stringify(maildata)).subscribe(\n            val1 => {\n              this.message = val1;\n              if (this.message.response == 'Mail Sent Successfully' && this.submitMessage.message) {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"danger\", \"close\": true,\n                  \"content\": this.submitMessage.message,\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 3000);\n              } else if (this.message.response == 'Mail Sent Successfully') {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"success\", \"close\": true,\n                  \"content\": \"Intake submitted successfully\",\n                }];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 1000);\n              } else {\n                this.alertdata = true;\n                this.alertMessage = [{\n                  \"type\": \"danger\", \"close\": true,\n                  \"content\": \"<strong>Failed</strong> to send mail\",\n                }\n                ];\n                setTimeout(function () {\n                  this.alertdata = false;\n                  window.location.reload();\n                }.bind(this), 3000);\n              }\n            });\n        }\n      },\n      error => {\n        console.log('error', error.error);\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": error.message,\n        }\n        ];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 3000);\n      });\n  }\n\n  public greaterThan(subj, num) {\n    return subj > num;\n  }\n\n  public lesserThan(subj, num) {\n    return subj < num;\n  }\n  public setStyle(subj, num) {\n    var styleObj={'background-color':''}\n   \n        if(subj==num)\n        {\n         styleObj['background-color']=\"#d0d0c5\"\n        }\n        if(subj>num)\n        {\n         styleObj['background-color']=\"#03bd5a\"\n        }\n        if(subj<num)\n        {\n         styleObj['background-color']=\"#ff9947\"\n        }\n        return styleObj\n        \n     }\n\n  viewSummary() {\n    this.savingsReturned = false;\n    if (this.summaryOpened === true) {\n      this.summaryOpened = false;\n    } else {\n      this.selectedComplexity = this.complexityList.filter(item => item.complexityCode === (this.intakeEdit.value.requestedComplexity * 1));\n      this.selectedComplexity = this.selectedComplexity[0];\n      this.summaryOpened = true;\n      // if (this.intakeEdit.value.noOfDevices === \"\" || !this.intakeEdit.value.noOfDevices) {\n      //   this.intakeEdit.value.noOfDevices = 0;\n      // }\n      if (this.intakeEdit.value.noOfSBI === \"\" || !this.intakeEdit.value.noOfSBI) {\n        this.intakeEdit.value.noOfSBI = 0;\n      }\n      // if (this.intakeEdit.value.noOfSystems === \"\" || !this.intakeEdit.value.noOfSystems) {\n      //   this.intakeEdit.value.noOfSystems = 0;\n      // }\n      if (this.intakeEdit.value.noOfNBI === \"\" || !this.intakeEdit.value.noOfNBI) {\n        this.intakeEdit.value.noOfNBI = 0;\n      }\n      let getComplexityValues = {\n        // noOfDevices: (this.intakeEdit.value.noOfDevices * 1),\n        noOfNorthBoundInterface: (this.intakeEdit.value.noOfNBI * 1),\n        noOfSouthBoundInterface: (this.intakeEdit.value.noOfSBI * 1),\n        // noOfSystems: (this.intakeEdit.value.noOfSystems * 1)\n      };\n      this.intakeService.getComplexity(getComplexityValues).subscribe(\n        val => {\n          this.complexity = val;\n          let roiCalcValues = {\n            actualFTE: this.intakeEdit.value.actualFTE,\n            averageDailyVolume: this.intakeEdit.value.avgDailyVolume,\n            aet: this.intakeEdit.value.aet,\n            noOfWorkingDays: 22,\n            noOfMonths: this.intakeEdit.value.noOfMonths,\n            timeDuration: this.complexity.timeDuration,\n            costPerFTE: this.intakeEdit.value.fteRate,\n            ftecostPerAutomation: 50,\n            costPerAutomation: this.complexity.costPerAutomation\n          };\n          this.intakeService.getROICalculation(roiCalcValues).subscribe(\n            val1 => {\n              this.savingsReturned = true;\n              this.calcValues = val1;\n              this.monthlyRevenue = this.calcValues.monthlyRevenue;\n              this.calcValues = this.calcValues.calculation;\n              this.manualHours = this.calcValues.manualHours.toFixed();\n              this.manualCost = this.calcValues.manualCost.toFixed();\n            //  this.automationHours = this.calcValues.automationHours.toFixed();\n              this.automationCost = this.calcValues.automationCost.toFixed();\n              this.hoursSaving = this.calcValues.hoursSaving.toFixed();\n              this.costSaving = this.calcValues.costSaving.toFixed();\n              this.roiPerc = this.calcValues.roiPerc.toFixed();\n              this.revenue = this.calcValues.revenue.toFixed();\n            });\n          // console.log('complexity', val);\n        });\n    }\n  }\n}\n","<div class=\"modal-content\">\n    <div class=\"modal-header\">\n        <i class=\"fa fa-file mr-3\" aria-hidden=\"true\"></i>\n        <h6 class=\"modal-title\" id=\"exampleModalLongTitle\">EDIT IDEA SUBMISSION</h6>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <form [formGroup]=\"intakeEdit\">\n        <div class=\"modal-body p-0\">\n            <div class=\"create-body\">\n                <app-alert [data]=\"alertMessage\" class=\"intake-alert\" *ngIf=\"alertdata\"></app-alert>\n                <div *ngIf=\"intakeData.rfStatus.status=='REJECTED'\" class=\"header\" id=\"Comments\">\n                    <div class=\"mb-0\">\n                        <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#comment\" aria-expanded=\"true\"\n                            aria-controls=\"comment\">\n                            Comments<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                                aria-hidden=\"true\"></i>\n                        </button>\n    \n                    </div>\n                </div>\n                <div *ngIf=\"intakeData.rfStatus.status=='REJECTED'\" id=\"comment\" class=\"collapse show trg-show\">\n                    <div class=\"card-body-collapse\">\n                        <div class=\"form-row\">\n                            <div class=\"col-md-12 \" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Comments for Rejection\">\n                                <label for=\"comment\">Remarks</label>\n                                <textarea formControlName=\"comment\" maxlength=\"100\" class=\"form-control\" readonly></textarea>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"header\" id=\"headingOne\">\n                    <div class=\"mb-0\">\n                        <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\"\n                            aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            General Info<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                                aria-hidden=\"true\"></i>\n                        </button>\n\n                    </div>\n                </div>\n\n                <div id=\"collapseOne\" class=\"collapse show trg-show\">\n                    <div class=\"card-body-collapse\">\n                        <div class=\"form-row\">\n                            <div class=\"col-md-3 \" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Submitter of the Idea\">\n                                <label for=\"validationCustom01\">Submitter <sup class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"submitter\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.submitter.errors }\" readonly/>\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Name of the Team\">\n                                <label for=\"validationCustom02\">Team Name <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <select *ngIf=\"businessUnitList\" class=\"custom-select\"\n                                    formControlName=\"businessUnitName\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.businessUnitName.errors }\"\n                                    (change)=\"selectBusinessUnit($event)\">\n                                    <option selected value=\"\">Select Team Name</option>\n                                    <option *ngFor=\"let businessUnit of businessUnitList\"\n                                        [value]=\"businessUnit.id\">{{businessUnit.teamName}}</option>\n                                </select>\n                                <!-- <input type=\"text\" formControlName=\"businessUnitName\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.businessUnitName.errors }\" /> -->\n                            </div>\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Head of the selected business unit\">\n                                <label for=\"\">Governance Team<sup class=\"mandatory-alert\">*</sup></label>\n                                <select class=\"custom-select\" formControlName=\"primaryApprover\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.primaryApprover.errors }\">\n                                    <option selected value=\"\">Select Approver</option>\n                                    <option *ngIf=\"(commonApprover|json) != '{}'\" [value]=\"commonApprover?.role.roleId\">\n                                        {{commonApprover?.role.roleCode}}\n                                        [selected]=\"intakeEdit.value.primaryApprover == approver.id\"\n                                </select>\n                            </div> -->\n                            <!-- <div class=\"col-md-3\">\n                                <label for=\"\">Secondary Approver</label>\n                                <input type=\"text\" value=\"Richard Abraham\" class=\"form-control\" disabled />\n                            </div> -->\n                            <div class=\"col-md-3 \" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Head of the selected business unit\">\n                                <label for=\"validationCustom01\">Director <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"benefittingDirector\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.benefittingDirector.errors }\"\n                                    value=\"{{intakeData.benefitingdirector}}\" disabled />\n                            </div>\n                            <div class=\"col-md-3\">\n                                <label for=\"\">Target Implementation Date</label>\n                                <input class=\"form-control\" type=\"text\" [dpDayPicker]=\"dayPickerConfig\"\n                                    formControlName=\"dateFrom\" [theme]=\"'dp-material'\" [mode]=\"'day'\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.dateFrom.errors }\" />\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-md-6\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Name of the Automation Idea\">\n                                <label for=\"validationCustom01\">Idea Name <sup class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"ideaName\" maxlength=\"100\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.ideaName.errors }\" (keydown)=\"vaildationspcl_character($event)\"  (change)=\"ideanameDuplicateCheck(intakeEdit.value.ideaName)\" (paste)=\"onPaste($event)\" #ideaName/>\n                                    <span *ngIf=\"isideanameDuplicate\" style=\"font-size: 10px;color: red;\">Ideaname is already taken</span>\n                                    <div *ngIf=\"ideaName.value?.length >99\" style=\"color: red;font-size: 10px;\">\n                                        You have reached the Maximum Limit of  {{ideaName.value?.length}} characters!\n                                    </div> \n                                    <div *ngIf=\"spcharmessage\" style=\"color: red;font-size: 10px;\">\n                                        Special characters are not allowed here!\n                                    </div>\n                            </div>\n                            <div class=\"col-md-6\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"A context of your current manual process\">\n                                <label for=\"automationObjectives\">Automation Objectives<sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <textarea formControlName=\"automationObjectives\" maxlength=\"500\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.automationObjectives.errors }\" #automationObjectives></textarea>\n                                    <div *ngIf=\"automationObjectives.value?.length >499\" style=\"color: red;font-size: 10px;\">\n                                        You have reached the maximum limit  of {{automationObjectives.value?.length}}characters!\n                                    </div>\n                            </div>\n                            \n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-md-6\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Problem Statement of the Automation Idea\">\n                                <label for=\"ideaDescription\">Problem Statement<sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <textarea formControlName=\"ideaDescription\" maxlength=\"500\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.ideaDescription.errors }\" #ideaDescription></textarea>\n                                    <div *ngIf=\"ideaDescription.value?.length >499\" style=\"color: red;font-size: 10px;\">\n                                        You have reached the maximum limit  of {{ideaDescription.value?.length}}characters!\n                                     </div>\n                            </div>\n                            <div class=\"col-md-6\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Benefits of the Automation Idea\">\n                                <label for=\"ideaBenefits\">Business Benefits<sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <ng-multiselect-dropdown name=\"ideaBenefits\" [placeholder]=\"'Select Business Benefits'\"\n                                   [settings]=\"ideaBenefitsDropdownSettingsEdit\" [data]=\"benefitsListEdit\" \n                                    [formControl]=\"intakeEdit.controls['businessBenefits']\"\n                                    (onSelect)=\"onideaBenefitsSelectEdit($event)\" (onDeSelect)=\"onideaBenefitsDeSelectEdit($event)\" [(ngModel)]=\"benefitsSelected\">\n                                </ng-multiselect-dropdown>\n                            </div>\n                            \n                        </div>\n                        <div *ngIf=\"intakeEdit.value.businessBenefits.length>0\" class=\"form-row businessBenefitForm\">\n                            <div class=\"col-md-12 pb-0\">\n                                <div class=\"dynamicTable\">\n                                    <table class=\"table table-bordered w-100 mt-3 mb-0\">\n                                        <thead>\n                                            <tr>\n                                                <th style=\"width:27%\">Business Benefits</th>\n                                                <th>Description</th>\n                                            </tr>\n                                        </thead>\n                                        <ng-container formArrayName=\"benefitsFormEdit\" *ngFor=\"let item of this.benefitsFormEdit().controls; let i = index\">\n                                            <tbody [formGroupName]=\"i\">\n                                                <tr>\n                                                    <td>{{item.value.ideaBenefitName}}</td>\n                                                    <td style=\"padding:0px !important;\"><input formControlName=\"description\" maxlength=501 class=\"table-cell form-control\" type=\"text\"></td>\n                                                </tr>\n                                                <tr *ngIf=\"item?.controls.description.value.length>500\">\n                                                    <td colspan=\"2\" style=\"padding: 2px 10px !important;\n                                                    background-color: #ffebee;\n                                                    text-align: right;color: red;font-size: 10px;\">You have Exceeded the Maximum Limit of 500 characters for the decription of <strong>{{item.value.ideaBenefitName}}!</strong></td> \n                                                 </tr>\n                                            </tbody> \n                                        </ng-container> \n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"header\" id=\"headingFour\">\n                    <div class=\"mb-0\">\n                        <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseFour\"\n                            aria-expanded=\"false\" aria-controls=\"collapseFour\">\n                            Effort Estimation<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i\n                                class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                        </button>\n                    </div>\n                </div>\n                <div id=\"collapseFour\" class=\"collapse trg-show\">\n                    <div class=\"card-body-collapse\">\n                        <div class=\"form-row\">\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Savings type of the Idea\">\n                                <div><label for=\"\">Savings Type <sup class=\"mandatory-alert\">*</sup></label></div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\"\n                                        (change)=\"changeSavingsType($event)\" id=\"OPEX_Savings\" value=\"OPEX Savings\"\n                                        [checked]=\"savings == 'OPEX Savings'\">\n                                    <label class=\"form-check-label\" for=\"gridRadios1\">\n                                        OPEX Savings\n                                    </label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\"\n                                        (change)=\"changeSavingsType($event)\" id=\"OPEX_Avoidance\" value=\"OPEX Avoidance\"\n                                        [checked]=\"savings == 'OPEX Avoidance'\">\n                                    <label class=\"form-check-label\" for=\"gridRadios2\">\n                                        OPEX Avoidance\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of full time resources\">\n                                <label for=\"\">Actual FTE/Day <sup class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"actualFTE\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.actualFTE.errors }\" appNumberDirective />\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of times the work is executed per day\">\n                                <label for=\"validationCustom02\">Average Volume/Day <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"avgDailyVolume\" class=\"form-control\" (keyup)=\"vaildateZero($event.target.value)\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.avgDailyVolume.errors }\"\n                                    appTwodigitdecimaldirective />\n                                    <span style=\"font-size: 10px; color:red;\" *ngIf=\"zeromessage\"> greater than 0 should be allowed</span>\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Average time consumed for execution\">\n                                <label for=\"validationCustom02\">Average Time Spent/Execution (Mins) <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"aet\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.aet.errors }\" appNumberDirective />\n                            </div>\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"No. of working days per month\">\n                                <label for=\"validationCustom02\">No. of workingDays/Month <sup class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"noOfWorkingDays\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfWorkingDays.errors }\" />\n                            </div> -->\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Rate of FTE is determined using this field\">\n                                <label for=\"validationCustom02\">FTE Rate <sup class=\"mandatory-alert\">*</sup></label>\n                                <select class=\"custom-select\" formControlName=\"fteRate\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.fteRate.errors }\">\n                                    <option selected value=\"\">Select FTE Rate</option>\n                                    <option *ngFor=\"let fte of fteRate\" [value]=\"fte.fteRateId\">{{fte.fteType}}</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-sm-12 pb-0 alert-info\">Effort spent which cannot be automated (mins)</div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <label for=\"validationCustom02\">Data Interpretation(Mins)</label>\n                                <input type=\"text\" formControlName=\"dataInterpretation\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.dataInterpretation.errors }\"\n                                    appNumberDirective />\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <label for=\"validationCustom02\">Manual Activity(Mins)</label>\n                                <input type=\"text\" formControlName=\"manualActivity\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.manualActivity.errors }\"\n                                    appNumberDirective />\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <label for=\"validationCustom02\">Decision Making(Mins)</label>\n                                <input type=\"text\" formControlName=\"decisionMaking\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.decisionMaking.errors }\"\n                                    appNumberDirective />\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <label for=\"validationCustom02\">Automation Ratio</label>\n                                <input type=\"text\" formControlName=\"automationRatio\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.automationRatio.errors }\" readonly />\n                            </div>\n                            <div class=\"col-md-12\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Financial Benefits\">\n                                <div><label for=\"\">Will the automation generate recurrent benefits in the next 3+ years?</label></div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"financialBenefits\" value=\"Yes\"\n                                        (change)=\"changeFinancialBenefits($event)\" [checked]=\"financialBenefits == 'Yes'\">\n                                    <label class=\"form-check-label radiolabel\" for=\"financialBenefits1\">\n                                        Yes\n                                    </label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"financialBenefits\" value=\"No\"\n                                        (change)=\"changeFinancialBenefits($event)\" [checked]=\"financialBenefits == 'No'\">\n                                    <label class=\"form-check-label radiolabel\" for=\"financialBenefits2\">\n                                        No\n                                    </label>\n                                </div>\n                                <button type=\"button\" class=\"btn btn-sm btn-calculate\"\n                                    (click)=\"calculateRatio();\">Calculate</button>\n                            </div>\n                            <!-- <div class=\"offset-md-9 col-md-3 text-right\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"\">\n                                \n                            </div> -->\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col-sm-12 pb-0 alert-info\">Complexity Mapping</div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of DeviceInterfaces\">\n                                <label for=\"validationCustom02\">No. of Device Interfaces <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"noOfSBI\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfSBI.errors }\"\n                                    (change)=\"limitSBI($event.target.value)\" maxlength=\"1\" appRealNumberDirective />\n                                <!-- <select class=\"custom-select\" formControlName=\"noOfSBI\" (change)=\"limitSBI()\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfSBI.errors }\">\n                                    <option selected value=\"\">Select no. of Device Interfaces</option>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select> -->\n                            </div>\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Type of the Device Interfaces\">\n                                <label for=\" validationCustom02\">Type of Device Interface<sup class=\"mandatory-alert\">*</sup></label>\n                                <ng-multiselect-dropdown name=\"typeOfSBI\" [placeholder]=\"'Select Device Interface'\"\n                                    [data]=\"sbiList\" [disabled]=\"disabled\" [settings]=\"sbiTypeDropdownSettings\"\n                                    formControlName=\"typeOfSBI\" (onSelect)=\"onSbiItemSelect($event)\" (onDeSelect)=\"onItemDeSelect($event)\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.typeOfSBI.errors }\"\n                                    [(ngModel)]=\"sbiTypeSelected\">\n                                </ng-multiselect-dropdown>\n                            </div>\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Device Names\">\n                                <label for=\"validationCustom02\">Device Names <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"deviceNames\" maxlength=\"100\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.deviceNames.errors }\" />\n                            </div> -->\n                        </div>\n                        <div class=\"form-row\" *ngIf=\"this.intakeData.rfEffort.device.length>=1\">\n                            <div class=\"col-md-12 pb-0\">\n                                <div class=\"dynamicTable\">\n                                    <table class=\"table table-bordered w-100 mt-3 mb-0\">\n                                        <thead>\n                                            <tr>\n                                                <th style=\"width:27%\">Device Interface<sup\n                                                    class=\"mandatory-alert\">*</sup></th>\n                                                <th>Role in Automation<sup\n                                                    class=\"mandatory-alert\">*</sup></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor=\"let item of this.intakeData.rfEffort.device;let i=index\">\n                                                <td style=\"width:41%\">\n                                                <span id=\"deviceName_edit_{{i}}\" *ngIf=\"item.otherFlag != 'Other (Specify)'\">{{item.devicename}}</span>\n                                                <span id=\"deviceName_edit_{{i}}\" *ngIf=\"item.otherFlag == 'Other (Specify)'\">Other (Specify)</span>\n                                                <input id=\"other-Name-edit\" maxlength=\"100\" (change)=\"otherFieldValidation($event.target.value, i)\" [ngClass]=\"{'errorMessage':(errorAlertDevice && item.devicename.length>99)}\"  *ngIf = \"item.otherFlag == 'Other (Specify)'\" class=\"table-cell-other\" type=\"text\" (keydown)=\"vaildationmessagedevice($event)\" [value]=item.devicename [(ngModel)]='item.devicename'  [ngModelOptions]=\"{standalone: true}\" >\n                                                <!-- <input id=\"other-Name-edit\" (change)=\"otherFieldValidation($event.target.value, i)\" *ngIf = \"reselectSbi && item.sbitype == 'Other (Specify)'\" class=\"table-cell-other\" type=\"text\" value = ''> -->\n                                                <!-- <div *ngIf=\"item.otherFlag == 'Other (Specify)'\">\n                                                    <div *ngIf=\"item.devicename.length>99\">\n                                                        <span style=\"color: red;font-size: 10px;\">You have reached the maximum limit of  {{item.devicename.length}} characters!</span>\n                                                      </div>\n                                                  </div> -->\n                                                </td>\n                                                <td><input maxlength=\"100\" (change)=\"roleValidationSbi(i)\" class=\"table-cell\" id=\"deviceRole_edit_{{i}}\" type=\"text\"  (keyup)=\"vaildationdevicerole(item.roleInAutomation,i)\" [value]=item.roleInAutomation #devicerole [(ngModel)]=\"item.roleInAutomation\" [ngModelOptions]=\"{standalone: true}\">\n                                                    <!-- <div *ngIf=\"devicerole?.value.length>99\">\n                                                        <span style=\"color: red;font-size: 10px;\">You have reached the maximum limit of  {{devicerole?.value.length}} characters!</span>\n                                                      </div> -->\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n\n                                    \n                                    <div>\n                                                \n                                        <span *ngIf=\"(errorAlertDevice) || messageroledevice\" style=\"color: #e65100;\n                                            font-size: 12px;\n                                            margin-left: 11px;\">You have reached the maximum limit 100 characters!</span>\n                                </div>\n                                    <div class=\"alert-other\" *ngIf=\"otherDeviceName\">Please Enter the device name for the Others field</div>\n                                    <div class=\"alert-other\" *ngIf=\"intakeData.rfEffort.device.length!=SBItableLength.length\">Please Enter {{SBItableLength.length}} Device Interface</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-row mt-2\">\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"No. of Systems involved\">\n                                <label for=\"validationCustom02\">No. of Systems <sup class=\"mandatory-alert\">*</sup></label>\n                                <select class=\"custom-select\" formControlName=\"noOfSystems\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfSystems.errors }\">\n                                    <option selected value=\"\">Select no. of Systems</option>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n                            </div> -->\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"No. of Applications\">\n                                <label for=\"validationCustom02\">No. of Applications <sup\n                                        class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"noOfNBI\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfNBI.errors }\"\n                                    (change)=\"limitNBI($event.target.value)\" maxlength=\"1\" appRealNumberDirective />\n                                <!-- <select class=\"custom-select\" formControlName=\"noOfNBI\" (change)=\"limitNBI()\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfNBI.errors }\">\n                                    <option selected value=\"\">Select no. of Applications</option>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select> -->\n                            </div>\n\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"Application Names\">\n                                <label for=\" validationCustom02\">Application Name<sup class=\"mandatory-alert\">*</sup></label>\n                                <ng-multiselect-dropdown name=\"typeOfNBI\" [placeholder]=\"'Select Application Names'\"\n                                    [data]=\"nbiList\" [disabled]=\"disabled\" [settings]=\"nbiTypeDropdownSettings\"\n                                    formControlName=\"typeOfNBI\" (onDeSelect)=\"onItemDeSelectApp($event)\" (onSelect)=\"onNbiItemSelect($event)\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.typeOfNBI.errors }\"\n                                    [(ngModel)]=\"nbiTypeSelected\">\n                                </ng-multiselect-dropdown>\n                            </div>\n                        </div>\n                        <div class=\"form-row\" *ngIf=\"this.intakeData.rfEffort.application.length>=1\">\n                            <div class=\"col-md-12 pb-0\">\n                                <div class=\"dynamicTable\">\n                                    <table class=\"table table-bordered w-100 mt-3 mb-0\">\n                                        <thead>\n                                            <tr>\n                                                <th style=\"width:27%\">Application Names<sup\n                                                    class=\"mandatory-alert\">*</sup></th>\n                                                <th>Role in Automation<sup\n                                                    class=\"mandatory-alert\">*</sup></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor=\"let item of this.intakeData.rfEffort.application;let i=index\">\n                                                <td style=\"width:41%\">\n                                                    <span id=\"applicationName_edit_{{i}}\" *ngIf = \"item.otherFlag != 'Other (Specify)'\">{{item.applicationName}}</span>\n                                                    <span id=\"applicationName_edit_{{i}}\" *ngIf = \"item.otherFlag == 'Other (Specify)'\">Other (Specify)</span>\n                                                    <input id=\"other-Name-app-edit\" maxlength=\"100\" (change)=\"otherFieldValidationApp($event.target.value, i)\" [ngClass]=\"{'errorMessage':(errorAlertApp && item.applicationName.length>99)}\" *ngIf = \"item.otherFlag == 'Other (Specify)'\" (keydown)=\"vaildationmessageApp($event)\" class=\"table-cell-other\" type=\"text\" [value]=item.applicationName [(ngModel)]='item.applicationName'  [ngModelOptions]=\"{standalone: true}\"/>\n\n                                                    <!-- <div *ngIf=\"item.otherFlag == 'Other (Specify)'\">\n                                                        <div *ngIf=\"item.applicationName.length>99\">\n                                                            <span style=\"color: red;font-size: 10px;\">You have reached the maximum limit of  {{item.applicationName.length}} characters!</span>\n                                                          </div>\n                                                      </div> -->\n                                                    <!-- <input id=\"other-Name-app-edit\" class=\"table-cell-other\" (change)=otherFieldValidationApp($event.target.value) *ngIf = \"reselectNbi && item.nbitype == 'Other (Specify)'\" type=\"text\" [value] = ''> -->\n                                                </td>\n                                                <td><input (change)=\"roleValidationNbi(i)\" maxlength=\"100\"   (keyup)=\"vaildationApprole(item.roleInAutomation,i)\" class=\"table-cell\" id=\"applicationRole_edit_{{i}}\" type=\"text\"  #applicationrole [(ngModel)]=\"item.roleInAutomation\" [ngModelOptions]=\"{standalone: true}\"[value]=item.roleInAutomation>\n                                                    <!-- <div *ngIf=\"applicationrole?.value.length>99\">\n                                                        <span style=\"color: red;font-size: 10px;\">You have reached the maximum limit  of {{applicationrole?.value.length}} characters!</span>\n                                                      </div>   -->\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                    <div>\n                                        <span *ngIf=\"(errorAlertApp) || messageroleApp\" id=\"appMessage\" style=\"color: #e65100;\n                                            font-size: 12px;\n                                            margin-left: 11px;\">You have reached the maximum limit 100 characters!</span>\n                                    </div>\n                                    <div class=\"alert-other\" *ngIf=\"otherApplicationName\">Please Enter the Application name for the Others field</div>\n                                    <div class=\"alert-other\" *ngIf=\"intakeData.rfEffort.application.length != NBItableLength.length\">Please Enter {{NBItableLength.length}} Application name</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-row mt-2\">\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                title=\"User assigned complexity\">\n                                <label for=\"validationCustom02\">Complexity<sup class=\"mandatory-alert\">*</sup></label>\n                                <select *ngIf=\"complexityList\" class=\"custom-select\"\n                                    formControlName=\"requestedComplexity\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.requestedComplexity.errors }\">\n                                    <option selected value=\"\">Select type</option>\n                                    <option *ngFor=\"let complex of complexityList\" [value]=\"complex.complexityCode\">\n                                        {{complex.complexityDesc}}</option>\n                                </select>\n                            </div>\n                            <!-- <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <div><label for=\"\">is validation required ?</label></div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"isComparisonRequired\"\n                                        (change)=\"changecomparisonreq($event)\" value=\"Yes\"\n                                        [checked]=\"comparison == 'Yes'\">\n                                    <label class=\"form-check-label radiolabel\" for=\"isComparisonRequired\">\n                                        Yes\n                                    </label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"isComparisonRequired\"\n                                        (change)=\"changecomparisonreq($event)\" value=\"No\"\n                                        [checked]=\"comparison == 'No'\">\n                                    <label class=\"form-check-label radiolabel\" for=\"isComparisonRequired\">\n                                        No\n                                    </label>\n                                </div>\n                            </div> -->\n                            <!-- <div class=\"col-md-3\">\n                                <label for=\"validationCustom02\">No. of months <sup class=\"mandatory-alert\">*</sup></label>\n                                <input type=\"text\" formControlName=\"noOfMonths\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.noOfMonths.errors }\" />\n                            </div> -->\n                        </div>\n                        <!-- <div class=\"form-row\">\n                            <div class=\"col-md-3\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\">\n                                <div><label for=\"\">SPOC required for detailed workshop?</label></div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"spocrequirement\"\n                                        (change)=\"changeSPOCreq($event)\" value=\"Yes\" [checked]=\"spoc == 'Yes'\">\n                                    <label class=\"form-check-label radiolabel\" for=\"spocrequirement1\">\n                                        Yes\n                                    </label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"spocrequirement\"\n                                        (change)=\"changeSPOCreq($event)\" value=\"No\" [checked]=\"spoc == 'No'\">\n                                    <label class=\"form-check-label radiolabel\" for=\"spocrequirement2\">\n                                        No\n                                    </label>\n                                </div>\n                            </div>\n                        </div> -->\n                    </div>\n                </div>\n\n                <div class=\"header\" id=\"headingThree\">\n                    <div class=\"mb-0\">\n                        <button class=\"btn btn-link collapsed collapselast\" data-toggle=\"collapse\"\n                            data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                            File Upload<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                                aria-hidden=\"true\"></i>\n                        </button>\n                    </div>\n                </div>\n                <div id=\"collapseThree\" class=\"collapse trg-show\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                    title=\"\">\n                    <div class=\"card-body-collapse\">\n                        <!-- <div class=\"downloadFile\"><a target=\"_blank\" href=\"assets/images/Add-icon.png\">Download and View the High Level Manual Process Map Template</a></div> -->\n                        <label class=\"ml-1 mt-1\">High Level Manual Process Map / Business Justification Document(\n                            <span>Refer<a  href=\"https://rcirogers.sharepoint.com/:p:/r/sites/ossautomation/governance/Shared%20Documents/Governance%20Presentation%20Templates/Automation%20Governance%20Intake%20Template.pptx?d=w7a1a2b505a6442279844b85ab79ff56d&csf=1&web=1&e=A89JWt\" target=\"_blank\">   Digital Governance Template<i class=\"fa fa-external-link\" style=\"align-items: right;font-size: 12px;margin-left: 5px;\" aria-hidden=\"true\"></i></a></span> )</label>\n                        <div class=\"custom-file-Upload mx-1\">\n                            <div>\n                                <label for=\"upload\">\n                                    <input type=\"file\" id=\"upload\" #fileInput (change)=\"onFileSelect(fileInput)\"\n                                        multiple />\n                                    <div class=\"upload-icon\">+</div>\n                                    Add Files\n                                </label>\n                            </div>\n                            <div class=\"filess\">\n                                <ul class=\"file-list\">\n                                    <ng-container *ngFor=\"let file of intakeData.rfUploadFile; let i = index\">\n                                        <li id=\"uploaded_{{i}}\">\n                                            <div class=\"text-center\">\n                                                <i class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                            </div>\n                                            <div class=\"pt-1\">\n                                                {{file.fileName}}\n                                            </div>\n                                        </li>\n                                        <i class=\"fa fa-times-circle\" (click)=\"removeUploadedFile(file, i,file.fileName)\"\n                                            aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                    <ng-container *ngFor=\"let file of fileInfo; let i = index\">\n                                        <li id=\"{{i}}\">\n                                            <div class=\"text-center\">\n                                                <i class=\"fa fa-file\" aria-hidden=\"true\"></i>\n                                            </div>\n                                            <div class=\"pt-1\">\n                                                {{file.name}}\n                                            </div>\n                                        </li>\n                                        <i class=\"fa fa-times-circle\" (click)=\"removeFile(i,file.name)\" aria-hidden=\"true\"></i>\n                                    </ng-container>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"intakeEdit.invalid\" class=\"mandatory-alert text-right mb-4\">Please fill all the mandatory\n                    values to view Summary</div>\n            </div>\n        </div>\n        <div class=\"model-overlay slider-wrap-up  edit-view-summary\">\n        </div>\n        <div class=\"create-summary slider-wrap-up  edit-view-summary\">\n            <div class=\"create-summary-title\"><img src=\"./assets/images/summary-logo.png\" alt=\"\" class=\"mr-2\">Summary\n                Details</div>\n            <div class=\"container-fluild summary-view-port slider-wrap-up  edit-view-summary\">\n                <div class=\"row\">\n                    <div class=\"col-md-4 pr-0\">\n                        <div class=\" basic-details\">\n                            <div class=\"basic-details-content\">\n                                <table>\n                                    <tbody>\n                                        <tr>\n                                            <td>\n                                                <div class=\"field-name\" > \n                                       \n                                                    Intake ID  \n                                                        \n                                                    </div>\n                                                <div class=\"field-value\">{{intakeData.intakeId}}</div>\n    \n    \n    \n                                            <td>\n                                            \n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"field-name\">Team Name</div>\n                                                <div class=\"field-value\">{{selectedBusinessUnit}}</div>\n                                            </td>\n                                            <td>\n                                                <div class=\"field-name\">Director</div>\n                                                <div class=\"field-value\">{{intakeEdit.value.benefittingDirector}}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"field-name\">Savings Type</div>\n                                                <div class=\"field-value\">{{savings}}</div>\n                                            </td>\n                                            <td>\n                                                <div class=\"field-name\">Actual FTE/Day</div>\n                                                <div class=\"field-value\">{{intakeEdit.value.actualFTE}}</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"field-name\">Average Daily Volume</div>\n                                                <div class=\"field-value\">{{intakeEdit.value.avgDailyVolume}}</div>\n                                            </td>\n                                            <td>\n                                                <div class=\"field-name\">Average Time Spent/Execution</div>\n                                                <div class=\"field-value\">{{intakeEdit.value.aet}} mins</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"field-name\">Manual Cost</div>\n                                                <div *ngIf=\"calcValues\" class=\"field-value\">\n                                                    ${{calcValues.manualCostFormatted}}</div>\n                                            </td>\n                                            <td>\n                                                <div class=\"field-name\">Cost Spent on Automation<small style=\"color:#000\"> (T-shirt OTL size)</small></div>\n                                                <div *ngIf=\"calcValues\" class=\"field-value\">\n                                                    ${{calcValues.automationCostFormatted}}</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td  colspan=\"2\">\n                                                <div class=\"field-name\">Idea Name</div>\n                                                <div class=\"field-value\">{{intakeEdit.value.ideaName}}</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colspan=\"2\">\n                                                <div class=\"field-name\">Problem Statement</div>\n                                                <div class=\"field-value decription_box\" style=\"white-space: pre-wrap;\">{{intakeEdit.value.ideaDescription}}</div>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n\n                            </div>\n\n                            <div class=\"currency-card card m-0\">\n                                <div class=\"card-header\" id=\"headingCurrency\">\n\n                                    <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\"\n                                        data-target=\"#collapseCurrency\" aria-expanded=\"false\"\n                                        aria-controls=\"collapseCurrency\">\n                                        <div *ngIf=\"calcValues\" class=\"filter-status currency-status d-flex mr-4 mb-1\">\n                                            <ng-container *ngFor=\"let roi of calcValues.monthlyRoi; let i = index\">\n                                                <div *ngIf=\"lesserThan(roi, 0)\" class=\"btn currency-indicator loss\">\n                                                </div>\n                                                <div *ngIf=\"greaterThan(roi, 0)\" class=\"btn currency-indicator profit\">\n                                                </div>\n                                                <div *ngIf=\"roi == 0\" class=\"btn currency-indicator neutral-savings\">\n                                                </div>\n                                            </ng-container>\n                                            <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i>\n                                            <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                                        </div>\n\n                                    </button>\n\n                                </div>\n\n                                <div *ngIf=\"calcValues\" id=\"collapseCurrency\" class=\"collapse\"\n                                    aria-labelledby=\"headingCurrency\">\n                                    <div *ngFor=\"let roi of calcValues.monthlyRoi; let i = index\" class=\"card-body\">\n                                        <div class=\"month\">Month {{i + 1}}</div>\n                                        <div class=\"savingsRoi d-flex\">\n                                            <div class=\"savingsValue\"><span\n                                                    class=\"pr-1\">$</span>{{calcValues.monthlyRevenueFormatted[i]}}</div>\n                                            <div class=\"roiPercentage d-flex ml-auto\">\n                                                <div class=\"name\">\n                                                    ROI\n                                                </div>\n                                                <!-- <div class=\"percentage\" [ngClass]=\"{'warning-bg' : lesserThan(roi, 0)}\">\n                                                    {{roi}}%\n                                                </div> -->\n                                                <div class=\"percentage\"  [ngStyle]=\"setStyle(roi, 0)\">\n                                                    {{roi}}%\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"basic-details-bottom\">\n                                <div class=\"roi\">\n                                    <div class=\"percentage\" [ngClass]=\"{'warning-bg' : lesserThan(roiPerc, 0)}\">\n                                        {{roiPerc}}%\n                                    </div>\n                                    <div class=\"name\">\n                                        ROI\n                                    </div>\n                                </div>\n                                <div class=\"d-flex summary-currency\">\n                                    <div class=\"dollar mr-2\"><img src=\"./assets/images/Dollar-symbol.png\" alt=\"\"\n                                            class=\"w-100 h-100\"></div>\n                                    <div>\n                                        <span *ngIf=\"calcValues\"\n                                            class=\"value d-block\">{{calcValues.revenueFormatted}}</span>\n                                        <span class=\"value-description\"\n                                            [ngClass]=\"{'font-warning' : lesserThan(roiPerc, 0)}\">Total savings/Annum</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"col-md-8 other-details\">\n                        <div class=\"all-estimation\">\n                            <div class=\"block-heading\">\n                                Complexity Mapping\n                            </div>\n                            <div class=\"estimation\">\n                                <div>\n                                    <div class=\"d-flex\">\n                                        <div>No. of Device Interfaces</div>\n                                        <div class=\"estimationValue\">{{intakeEdit.value.noOfSBI}}</div>\n                                    </div>\n                                    <div class=\"d-flex\">\n                                        <div>No. of Applications</div>\n                                        <div class=\"estimationValue\">{{intakeEdit.value.noOfNBI}}</div>\n                                    </div>\n                                    <!-- <div class=\"d-flex\">\n                                        <div>Device Names</div>\n                                        <div class=\"estimationValue\">{{intakeEdit.value.deviceNames}}</div>\n                                    </div> -->\n                                </div>\n                                <div>\n                                    <!-- <div class=\"d-flex\">\n                                        <div>No. of Systems</div>\n                                        <div class=\"estimationValue\">{{intakeEdit.value.noOfSystems}}</div>\n                                    </div> -->\n                                    <div *ngIf=\"sbiTypeSelected.length > 0\" class=\"d-flex\">\n                                        <div>Type of Device Interfaces</div>\n                                        <div class=\"estimationValue\"><span *ngIf=\"sbiTypeSelected\"> <span\n                                                    *ngFor=\"let sbiTypeList of sbiTypeSelected; let i = index\">{{sbiTypeList.sbitype}}\n                                                    <span *ngIf=\"i<(sbiTypeSelected.length-1)\">,&nbsp;</span></span>\n                                                    <ng-container>\n                                                       \n                                                        {{deviceapplicationNames}}\n                                                   \n                                                </ng-container>\n                                            </span></div>\n                                    </div>\n                                    <div *ngIf=\"nbiTypeSelected.length > 0\" class=\"d-flex\">\n                                        <div>Application Names</div>\n                                        <div class=\"estimationValue\"><span *ngIf=\"nbiTypeSelected\"> <span\n                                                    *ngFor=\"let nbiTypeList of nbiTypeSelected; let i = index\">{{nbiTypeList.nbitype}}\n                                                    <span *ngIf=\"i<(nbiTypeSelected.length-1)\">,&nbsp;</span></span>\n                                                    <ng-container>\n                                                       \n                                                        {{applicationNames}}\n                                                   \n                                                </ng-container>\n                                            </span></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"estimation estimation-2\">\n                                <div>\n                                    <!-- <div *ngIf=\"selectedComplexity\" class=\"d-flex\">\n                                        <div>User assigned Complexity</div>\n                                        <div class=\"estimationValue\">{{selectedComplexity.complexityDesc}}</div>\n                                    </div> -->\n                                    <!-- <div class=\"d-flex\">\n                                        <div>Validation Required</div>\n                                        <div class=\"estimationValue\">{{comparison}}</div>\n                                    </div> -->\n                                    <div class=\"d-flex\">\n                                        <div>Financial benefits</div>\n                                        <div class=\"estimationValue\">{{financialBenefits}}</div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"text-right\">\n                                    <img _ngcontent-rvk-c59=\"\" src=\"./assets/images/summary-graph.png\" alt=\"\"\n                                        width=\"100px\" height=\"90px\">\n                                </div> -->\n                            </div>\n                            <!-- <div *ngIf=\"complexity && comparison=='No'\" class=\"text-center complexity-value\">\n                                Framework assigned Complexity : {{complexity.complexityDesc}}\n                            </div> -->\n                            <div *ngIf=\"complexity\" class=\"text-center complexity-value\">\n                                Framework assigned Complexity : {{complexity.complexityDesc}} vs User assigned\n                                Complexity : {{selectedComplexity.complexityDesc}}\n                            </div>\n                        </div>\n                        <!-- <div class=\"inner-block \">\n                            <div class=\"block-heading\">\n                                Hours/Month (in hrs)\n\n                            </div>\n                            <div class=\"block-content\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-2 bot-image\">\n                                        <img src=\"./assets/images/raf-bot.png\" alt=\"\">\n                                    </div>\n                                    <div class=\"col-md-10 block-details\">\n                                        <div class=\"d-flex mb-3\">\n                                            <div class=\"block-name\">\n                                                Manual Hours\n                                            </div>\n                                            <div class=\"progress\">\n                                                <div class=\"progress-bar bg-danger\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div class=\"content-value mr-5\">{{manualHours}} hrs</div>\n                                        </div>\n                                        <div class=\"d-flex\">\n                                            <div class=\"block-name\">\n                                                Automation Hours\n                                            </div>\n                                            <div class=\"progress progress-sm\">\n                                                <div class=\"progress-bar bg-success\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div class=\"content-value mr-5\">{{automationHours}} hrs</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"inner-block\">\n                            <div class=\"block-heading\">\n                                Cost/Month (in $)\n                            </div>\n                            <div class=\"block-content\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-2 bot-image\">\n                                        <img src=\"./assets/images/raf-bot.png\" alt=\"\">\n                                    </div>\n                                    <div class=\"col-md-10 block-details\">\n                                        <div class=\"d-flex mb-3\">\n                                            <div class=\"block-name\">\n                                                Manual Cost (in $)\n                                            </div>\n                                            <div class=\"progress\">\n                                                <div class=\"progress-bar bg-danger\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div *ngIf=\"calcValues\" class=\"content-value mr-5\">${{calcValues.manualCostFormatted}}</div>\n                                        </div>\n                                        <div class=\"d-flex\">\n                                            <div class=\"block-name\">\n                                                Automation Cost (in $)\n                                            </div>\n                                            <div class=\"progress progress-sm\">\n                                                <div class=\"progress-bar bg-primary\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div *ngIf=\"calcValues\" class=\"content-value mr-5\">${{calcValues.automationCostFormatted}}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> -->\n                        <div class=\"inner-block\">\n                            <div class=\"block-heading\">\n                                Potential Savings For First Month\n                            </div>\n                            <div class=\"block-content\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-2 bot-image\">\n                                        <img src=\"./assets/images/raf-bot.png\" alt=\"\">\n                                    </div>\n                                    <div class=\"col-md-10 block-details\">\n                                        <div class=\"d-flex mb-3\">\n                                            <div class=\"block-name\">\n                                                Hours Saved\n                                            </div>\n                                            <div class=\"progress progress-medium\">\n                                                <div class=\"progress-bar bg-success\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div class=\"content-value mr-5\">{{hoursSaving}} hrs</div>\n                                        </div>\n                                        <div class=\"d-flex\">\n                                            <div class=\"block-name\">\n                                                Cost Saved\n                                            </div>\n                                            <div class=\"progress progress-large\">\n                                                <div class=\"progress-bar bg-primary\" role=\"progressbar\"\n                                                    style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                                    aria-valuemax=\"100\"></div>\n                                            </div>\n                                            <div *ngIf=\"calcValues\" class=\"content-value mr-5\">\n                                                ${{calcValues.costSavingFormatted}}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"disclaimer\"><sup>*</sup>All these numbers are based on T-Shirt sizing and\n                            estimations. Will have to be fine-tuned post workshop.</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal-footer\">\n            <div class=\"triangle-up slider-wrap-up edit-view-summary\"></div>\n            <button type=\"button\" class=\"btn btn-secondary float-right mr-3 btn-view-summary trgcollapse\"\n                id=\"edit-view-summary\" [disabled]=\"intakeEdit.invalid || roleInvalidNbi || otherApplicationName || sbiRoleInvalid || otherDeviceName|| isideanameDuplicate ||zeromessage\" (click)=\"viewSummary()\">VIEW SUMMARY</button>\n            <button *ngIf=\"summaryOpened && savingsReturned\" type=\"button\" class=\"btn btn-secondary btn-save-draft\" (click)=\"saveDraft()\"\n                [disabled]='buttonSubmitted'>SAVE AS DRAFT</button>\n            <button *ngIf=\"summaryOpened && savingsReturned\" type=\"button\" class=\"btn btn-danger btn-save-create\" (click)=\"onSubmit()\"\n                [disabled]='buttonSubmitted'>SUBMIT</button>\n        </div>\n    </form>\n</div>","import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../../service/login.service';\nimport { IntakeService } from './../../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-intake-user-created',\n  templateUrl: './intake-user-created.component.html',\n  styleUrls: ['./intake-user-created.component.scss']\n})\nexport class IntakeUserCreatedComponent implements OnInit {\n  @Input() intakes: any;\n  editData: any;\n  index: any;\n  viewData: any;\n  viewindex: any;\n  public message: any;\n  public alertMessage: any = [];\n  public alertdata = false;\n  alertIndex: any;\n  user: any;\n  upadateJiraContent: any;\n\n  constructor(\n    public http: HttpClient,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n  }\n\n  deleteIntake(intake, index) {\n    this.alertIndex = index;\n    this.intakeService.deleteIntake(intake.intakeId).subscribe(\n      val => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"success\", \"close\": true,\n          \"content\": \"Intake deleted successfully\",\n        }];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n      },\n      error => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>Failed</strong> to delete intake\",\n        }\n        ];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n      });\n  }\n\n  editIntake(intake, index){\n    // console.log(intake);\n    this.editData = intake;\n    this.index = index;\n  }\n\n  viewIntake(intake, index){\n    this.viewData = intake;\n    this.viewindex = index;\n  }\n\n  updateJira(intake, index) {\n    this.alertdata = index;\n    intake.rfEffort.device = JSON.stringify(intake.rfEffort.device);\n    intake.rfEffort.application = JSON.stringify(intake.rfEffort.application);\n    this.intakeService.jiraCreateAndUpdate(JSON.stringify(intake)).subscribe(\n      val => {\n        this.upadateJiraContent = val;\n        this.alertdata = true;\n        if (this.upadateJiraContent.message.includes('failed') || this.upadateJiraContent.message.includes('Failed')) {\n          this.alertMessage = [{\n            \"type\": \"danger\", \"close\": true,\n            \"content\": this.upadateJiraContent.message,\n          }];\n        } else {\n          this.alertMessage = [{\n            \"type\": \"success\", \"close\": true,\n            \"content\": this.upadateJiraContent.message,\n          }];\n        }\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n        // console.log(this.upadateJiraContent.message);\n      });\n  }\n}\n","<div class=\"row\">\n    <div *ngFor=\"let intake of intakes; let i = index\" class=\"col-md-3\">\n        <div class=\"card\">\n            <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata && i==alertIndex\"></app-alert>\n            <div class=\"card-body\">\n                <div *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"pos-absolute filter-indicator-small in-progress\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='PENDING'\" class=\"pos-absolute filter-indicator-small yet-to-start\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='APPROVED'\" class=\"pos-absolute filter-indicator-small completed\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='REJECTED'\" class=\"pos-absolute filter-indicator-small rejected\">\n                </div>\n                <div *ngIf=\"intake.rfStatus.status=='AUTOMATED'\" class=\"pos-absolute filter-indicator-small automated\">\n                </div>\n                <div class=\"card-content\">\n                    <div class=\"d-flex px-2 mb-3\">\n                        <div class=\"img-container\"></div>\n                        <div class=\"description\">\n                            <div class=\"card-title\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-view-' + i\"\n                                (click)=\"viewIntake(intake,i)\">\n                                {{intake.ideaName}}</div>\n                            <p class=\"card-text\">by {{intake.createdby.name}}</p>\n                            <div class=\"card-upadted-time\">Updated on {{intake.modifieddate | date:\"dd/MM/yyyy\"}}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"card-body slidder-card\">\n                        <div class=\"card-thumnail\">\n                            <div *ngIf=\"intake.rfStatus.status=='DRAFT'\"\n                                class=\"pos-absolute filter-indicator-small in-progress\"></div>\n                            <div *ngIf=\"intake.rfStatus.status=='PENDING'\"\n                                class=\"pos-absolute filter-indicator-small yet-to-start\"></div>\n                            <div *ngIf=\"intake.rfStatus.status=='APPROVED'\"\n                                class=\"pos-absolute filter-indicator-small completed\"></div>\n                            <div *ngIf=\"intake.rfStatus.status=='REJECTED'\"\n                                class=\"pos-absolute filter-indicator-small rejected\"></div>\n                            <div *ngIf=\"intake.rfStatus.status=='AUTOMATED'\"\n                                class=\"pos-absolute filter-indicator-small automated\"></div>\n                            <img src=\"./assets/images/thumnail-hover.jpg\" class=\"w-100 h-100\">\n                        </div>\n                        <div class=\"card-content inner-card-content mt-0\">\n                            <div class=\"card-title-inner\" data-toggle=\"modal\" [attr.data-target]=\"'#intake-view-' + i\"\n                                (click)=\"viewIntake(intake,i)\">\n                                {{intake.ideaName}}</div>\n                            <!-- <div class=\"dollar\"><img src=\"./assets/images/dollar.png\" alt=\"\"></div> -->\n                            <p class=\"card-text-inner mt-1\">by {{intake.createdby.name}}</p>\n                            <div class=\"inner-card-upadted-time\">Updated on\n                                {{intake.modifieddate | date:\"dd/MM/yyyy\"}}\n                            </div>\n                            <div class=\"inner-description\">{{intake.ideaDescription}}\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"card-bottom\">\n                        <div class=\"comments mr-auto\">\n                            <!-- <i class=\"fa fa-heart mr-2 mt-3\" aria-hidden=\"true\"></i> -->\n                            <img class=\"jira-icon\" *ngIf=\"intake.rfStatus.status!='DRAFT'\" src=\"./assets/images/jiraIcon.png\" (click)=\"updateJira(intake, i)\" alt=\"\">\n                            <i *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"fa fa-trash mr-2\" id=\"intake-delete-{{i}}\"\n                                (click)=\"deleteIntake(intake, i)\" aria-hidden=\"true\"></i>\n                            <i *ngIf=\"intake.rfStatus.status=='DRAFT' || (intake.rfStatus.status=='REJECTED' && intake.createdby.id == user.id)\" class=\"fa fa-pencil-square-o mr-3\"\n                                data-toggle=\"modal\" [attr.data-target]=\"'#intake-edit-' + i\"\n                                (click)=\"editIntake(intake,i)\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div class=\"currency d-flex\">\n                            <div>\n                                <span class=\"value-dollar d-block\">${{intake.rfEffort.revenueFormatted}}</span>\n                                <span class=\"value-description\">Total savings in a Year</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngFor=\"let intake of intakes; let i = index\">\n    <div *ngIf=\"editData && index==i\" class=\"modal fade\" id=\"intake-edit-{{i}}\" tabindex=\"-1\" role=\"dialog\"\n        aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <app-intake-edit [intakeData]=\"editData\"></app-intake-edit>\n        </div>\n    </div>\n    <!-- <div *ngIf=\"viewData && viewindex==i\" class=\"overlay slider-wrap intake-view-{{i}}\">\n      <app-intake-view [intakeData]=\"viewData\"></app-intake-view>\n    </div> -->\n    <div *ngIf=\"viewData && viewindex==i\" class=\"modal fade\" id=\"intake-view-{{i}}\" tabindex=\"-1\" role=\"dialog\"\n        aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <app-intake-view [intakeData]=\"viewData\"></app-intake-view>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { IntakeService } from './../../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../../environments/environment';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-intake-view',\n  templateUrl: './intake-view.component.html',\n  styleUrls: ['./intake-view.component.scss']\n})\nexport class IntakeViewComponent implements OnInit {\n  @Input() intakeData: any;\n  public serviceUrl = environment.serviceUrl;\n  summaryOpened = false;\n  complexity: any;\n  manualCost: any;\n  jiraurl:any=environment.jiraurl\n  deviceapplicationNames:any='';\n  applicationNames:any='';\n  automationCost: any;\n  businessBenfitslist:any;\n  automationtable=false\n  revenue: any;\n  costDifference: any;\n  roiPerc: any;\n  manualHours: any;\n  automationHours: any;\n  costSaving: any;\n  hoursSaving: any;\n  sbiList: any;\n  nbiList: any;\n  complexityList: any;\n  businessUnitList: any;\n  selectedComplexity: any;\n  calcValues: any;\n  nbiTypeSelected: any = [];\n  sbiTypeSelected: any = [];\n  OtherIndexSbi:any;\n  OtherIndexNbi:any;\n  jiraId:any;\n\n  constructor(\n    public http: HttpClient,\n    private intakeService: IntakeService,\n    private router: Router,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit(): void {\n    // console.log('view', this.intakeData);\n    this.generateSafeUrl();\n    this.intakeService.getComplexityList().subscribe(\n      val => {\n        this.complexityList = val;\n        this.selectedComplexity = this.complexityList.filter(item => item.complexityCode === (this.intakeData.rfEffort.requestedComplexity * 1));\n        this.selectedComplexity = this.selectedComplexity[0];\n      });\n    this.nbiTypeSelected = this.intakeData.rfEffort.typeOfNBI;\n    this.sbiTypeSelected = this.intakeData.rfEffort.typeOfSBI;\n    console.log(\"viewintake\",this.intakeData)\n   \n    // this.intakeService.businessBenfitslist().subscribe(data=>\n    //   {\n    //     alert('this is apo')\n    //     this.automationtable=true\n    //    this.businessBenfitslist=data\n    //    console.log(\"businedss\",this.businessBenfitslist)\n    //   }\n    // )\n    this.intakeData.rfEffort.device.filter(item=>\n      {\n        if(item.hasOwnProperty(\"otherFlag\")==true)\n        {\n          if(item.otherFlag!='')\n          {\n          this.deviceapplicationNames=item.devicename\n          }\n        }\n      })\n\n      this.intakeData.rfEffort.application.filter(item=>\n        {\n          if(item.hasOwnProperty(\"otherFlag\")==true)\n          {\n            if(item.otherFlag!='')\n            {\n              this.applicationNames=item.applicationName\n            }\n           \n          }\n        })\n    // for(var i=0;i<this.sbiTypeSelected.length;i++){\n    //   if(this.sbiTypeSelected[i].sbitype == 'Other (Specify)'){\n    //     this.OtherIndexSbi = i;\n    //     }\n    // }\n    // for(var i=0;i<this.nbiTypeSelected.length;i++){\n    //   if(this.nbiTypeSelected[i].nbitype == 'Other (Specify)'){\n    //     this.OtherIndexNbi = i;\n    //     }\n    // }\n    if(this.intakeData.jirakey == null){\n      this.jiraId = \"NA\";\n    }\n    else{\n      this.jiraId = this.intakeData.jirakey;\n    }\n  }\n\n  generateSafeUrl(): SafeUrl {       \n    let safeurl=this.jiraurl+this.jiraId\n    return this.sanitizer.bypassSecurityTrustUrl(safeurl);\n  }    \n    \n  public greaterThan(subj, num) {\n    return subj > num;\n  }\n\n  public lesserThan(subj, num) {\n    return subj < num;\n  }\n  public setStyle(subj, num) {\n    var styleObj={'background-color':''}\n   \n        if(subj==num)\n        {\n         styleObj['background-color']=\"#d0d0c5\"\n        }\n        if(subj>num)\n        {\n         styleObj['background-color']=\"#03bd5a\"\n        }\n        if(subj<num)\n        {\n         styleObj['background-color']=\"#ff9947\"\n        }\n        return styleObj\n        \n     }\n\n  viewSummary() {\n    if (this.summaryOpened === true) {\n      this.summaryOpened = false;\n    } else {\n      this.selectedComplexity = this.complexityList.filter(item => item.complexityCode === (this.intakeData.rfEffort.requestedComplexity * 1));\n      this.selectedComplexity = this.selectedComplexity[0];\n      this.summaryOpened = true;\n      if (this.intakeData.rfEffort.noOfDevices === \"\" || !this.intakeData.rfEffort.noOfDevices) {\n        this.intakeData.rfEffort.noOfDevices = 0;\n      }\n      if (this.intakeData.rfEffort.noOfSBI === \"\" || !this.intakeData.rfEffort.noOfSBI) {\n        this.intakeData.rfEffort.noOfSBI = 0;\n      }\n      if (this.intakeData.rfEffort.noOfSystems === \"\" || !this.intakeData.rfEffort.noOfSystems) {\n        this.intakeData.rfEffort.noOfSystems = 0;\n      }\n      if (this.intakeData.rfEffort.noOfNBI === \"\" || !this.intakeData.rfEffort.noOfNBI) {\n        this.intakeData.rfEffort.noOfNBI = 0;\n      }\n      let getComplexityValues = {\n        noOfDevices: (this.intakeData.rfEffort.noOfDevices * 1),\n        noOfNorthBoundInterface: (this.intakeData.rfEffort.noOfNBI * 1),\n        noOfSouthBoundInterface: (this.intakeData.rfEffort.noOfSBI * 1),\n        noOfSystems: (this.intakeData.rfEffort.noOfSystems * 1)\n      };\n      this.intakeService.getComplexity(getComplexityValues).subscribe(\n        val => {\n          this.complexity = val;\n          let roiCalcValues = {\n            actualFTE: this.intakeData.rfEffort.actualFTE,\n            averageDailyVolume: this.intakeData.rfEffort.avgDailyVolume,\n            aet: this.intakeData.rfEffort.aet,\n            noOfWorkingDays: this.intakeData.rfEffort.noOfWorkingDays,\n            noOfMonths: this.intakeData.rfEffort.noOfMonths,\n            timeDuration: this.complexity.timeDuration,\n            costPerFTE: this.intakeData.rfEffort.fteRate.fteRateId,\n            ftecostPerAutomation: 50,\n            costPerAutomation: this.complexity.costPerAutomation\n          };\n          this.intakeService.getROICalculation(roiCalcValues).subscribe(\n            val1 => {\n              this.calcValues = val1;\n              this.calcValues = this.calcValues.calculation;\n              this.manualHours = this.calcValues.manualHours.toFixed();\n              this.manualCost = this.calcValues.manualCost.toFixed();\n              // this.automationHours = this.calcValues.automationHours.toFixed();\n              this.automationCost = this.calcValues.automationCost.toFixed();\n              this.hoursSaving = this.calcValues.hoursSaving.toFixed();\n              this.costSaving = this.calcValues.costSaving.toFixed();\n              this.roiPerc = this.calcValues.roiPerc.toFixed();\n              this.revenue = this.calcValues.revenue.toFixed();\n            });\n          // console.log('complexity', val);\n        });\n    }\n  }\n\n}\n","<div class=\"modal-content\">\n    <div class=\"modal-header\">\n        <i class=\"fa fa-file mr-3\" aria-hidden=\"true\"></i>\n        <h6 class=\"modal-title\" id=\"exampleModalLongTitle\">VIEW | IDEA</h6>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <!-- <div class=\"heading\">\n        <i class=\"fa fa-file mr-3\" aria-hidden=\"true\"></i>\n        <span class=\"mb-2\">VIEW | INTAKE</span>\n        <i class=\"fa fa-times-circle float-right closepop\" aria-hidden=\"true\"></i>\n    </div> -->\n    <div class=\"modal-body\">\n        <div class=\"content-wrap-card\">\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <div class=\"card-thumnail\"></div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"card-content\">\n                        <div class=\"card-title\">{{intakeData.ideaName}}</div>\n                        <p class=\"card-text\">by {{intakeData.createdby.name}}</p>\n                        <div class=\"card-upadted-time\">Updated on {{intakeData.modifieddate | date:\"dd/MM/yyyy\"}}</div>\n                        <div class=\"description\">{{intakeData.ideaDescription}}</div>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"currency d-flex\">\n                        <i class=\"fa fa-usd\" aria-hidden=\"true\"></i>\n                        <div>\n                            <span class=\"value d-block\">{{intakeData.rfEffort.revenueFormatted}}</span>\n                            <span class=\"value-description\">Total savings/Annum</span>\n                        </div>\n                    </div>\n                    <!-- <div class=\"comments float-right\">\n                        <i class=\"fa fa-heart mr-4 mt-3\" aria-hidden=\"true\"></i>\n                        <i class=\"fa fa-share-square-o mt-3\" aria-hidden=\"true\"></i>\n                    </div> -->\n                </div>\n            </div>\n        </div>\n        <div class=\"content-wrap-collapse\">\n            <div class=\"header\" id=\"headingViewOne\">\n                <div class=\"mb-0\">\n                    <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseViewOne\"\n                        aria-expanded=\"true\" aria-controls=\"collapseViewOne\">\n                        General Info<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                            aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n            <div id=\"collapseViewOne\" class=\"collapse show trg-show\" aria-labelledby=\"headingViewOne\">\n                <table class=\"m-0\">\n                    <tbody>\n                        <tr>\n                            <td style=\"width: 26%;\">\n                                <div class=\"field-name\">Intake ID</div>\n                                <div class=\"field-value\">{{intakeData.intakeId}}</div>\n                                <!-- <div class=\"field-name\">Submitter</div>\n                                <div class=\"field-value\">{{intakeData.createdby.name}}</div> -->\n                            </td>\n                            <td>\n                                <div class=\"field-name\" > \n                                   \n                                    JIRA ID \n                                   \n                                     <!-- <span *ngIf=\"jiraId=='NA'\">JIRA ID</span> -->\n                                        \n                                    </div>\n                                <div class=\"field-value\">{{jiraId}} <a  *ngIf=\"jiraId!='NA'\" [href]=\"generateSafeUrl()\" target=\"_blank\"  >   <i class=\"fa fa-external-link\" style=\"align-items: right;font-size: 12px;margin-left: 5px;\" aria-hidden=\"true\"></i></a></div>\n                            </td>\n                            <!-- <td>\n                                <div class=\"field-name\">Governance Team</div>\n                                <div class=\"field-value\">{{intakeData.approver.roleCode}}</div>\n                            </td> -->\n                            <td>\n                                <div class=\"field-name\">Submitter</div>\n                                <div class=\"field-value\">{{intakeData.createdby.name}}</div>\n                                <!-- <div class=\"field-name\">Director</div>\n                                <div class=\"field-value\">{{intakeData.team.department.director.name}}</div> -->\n                            </td>\n                            <td>\n                                <div class=\"field-name\">Target Implementation Date</div>\n                                <div class=\"field-value\">{{intakeData.targetImplementationDate | date:\"yyyy-MM-dd\"}}</div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"2\">\n                                <div class=\"field-name\">Team Name</div>\n                                <div class=\"field-value\">{{intakeData.team.teamName}}</div>\n                                <!-- <div class=\"field-name\">Idea Name</div>\n                                <div class=\"field-value\"  style=\"white-space: pre-wrap;\">{{intakeData.ideaName}}</div> -->\n                            </td>\n                            <td colspan=\"2\">\n                                <div class=\"field-name\">Director</div>\n                                <div class=\"field-value\">{{intakeData.team.department.director.name}}</div>\n                                <!-- <div class=\"field-name\">Automation Benefits</div>\n                                <div class=\"field-value\" style=\"white-space: pre-wrap;\">{{intakeData.automationBenefits}}</div> -->\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"2\">\n                                <div class=\"field-name\">Idea Name</div>\n                                <div class=\"field-value\"  style=\"white-space: pre-wrap;\">{{intakeData.ideaName}}</div>\n                            </td>\n                            <td colspan=\"2\">\n                                <div class=\"field-name\">Problem Statement</div>\n                                <div class=\"field-value\" style=\"white-space: pre-wrap;\">{{intakeData.ideaDescription}}</div>\n                            </td>\n                        </tr>\n                        <tr>        \n                            <td colspan=\"2\">\n                                <div class=\"field-name\">Automation Objectives</div>\n                                <div class=\"field-value\" style=\"white-space: pre-wrap;\">{{intakeData.automationObjectives}}</div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div class=\"dynamicTable\" *ngIf=\"intakeData.businessBenefit.length >0\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th style=\"width:30%\">Business Benefits</th>\n                                <th>Description</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let item of intakeData.businessBenefit;let i=index\">\n                                <td>  {{item.businessBenefit.businessBenefit}} </td>\n                                <td>  {{item.description}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                \n            </div>\n\n            <div class=\"header\" id=\"headingViewFour\">\n                <div class=\"mb-0\">\n                    <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseViewFour\"\n                        aria-expanded=\"false\" aria-controls=\"collapseViewFour\">\n                        Effort Estimation<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                            aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n            <div id=\"collapseViewFour\" class=\"collapse trg-show\">\n                <table class=\"m-0\">\n                    <tbody>\n                        <tr>\n                            <td>\n                                <div class=\"field-name\">Savings Type</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.savingType}}</div>\n                            </td>\n                            <td>\n                                <div class=\"field-name\">Actual FTE/Day</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.actualFTE}}</div>\n                            </td>\n                            <td>\n                                <div class=\"field-name\">Average Volume/Day</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.avgDailyVolume}}</div>\n                            </td>\n                            <td>\n                                <div class=\"field-name\">Average Time Spent/Execution</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.aet}} mins</div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <!-- <td>\n                                <div class=\"field-name\">No. of workingDays/Month</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.noOfWorkingDays}} days</div>\n                            </td> -->\n                            <td>\n                                <div class=\"field-name\">FTE Rate</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.fteRate.fteType}}</div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"4\">\n                                <div class=\"alert-info\">Effort spent which cannot be automated (mins)\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <div class=\"field-name\">Data Interpretation</div>\n                                <div class=\"field-value\" *ngIf=\"intakeData.rfEffort.dataInterpretation!=null; else elseblock\">{{intakeData.rfEffort.dataInterpretation}} mins</div>\n                            </td>\n                            <td>\n                                <div class=\"field-name\">Manual Activity</div>\n                                <div class=\"field-value\" *ngIf=\"intakeData.rfEffort.manualActivity!=null; else elseblock\">{{intakeData.rfEffort.manualActivity}} mins</div>\n                            </td>\n                            <td>\n                                <div class=\"field-name\">Decision Making</div>\n                                <div class=\"field-value\" *ngIf=\"intakeData.rfEffort.decisionMaking!=null; else elseblock\">{{intakeData.rfEffort.decisionMaking}} mins</div>\n                            </td>\n                            <td>\n                                <div class=\"field-name\">Automation Ratio</div>\n                                <div class=\"field-value\" *ngIf=\"intakeData.rfEffort.automationRatio!=null; else elseblock\">{{intakeData.rfEffort.automationRatio}}</div>\n                                <ng-template class=\"field-value\" #elseblock>\n                                    NA\n                                </ng-template>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"4\">\n                                <div class=\"field-name\">Will the automation generate recurrent benefits in the next 3+ years?</div>\n                                <div class=\"field-value\">{{intakeData.financialBenefits}}</div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"4\">\n                                <div class=\"alert-info\">Complexity Mapping\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <!-- <td>\n                                <div class=\"field-name\">No. of Devices</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.noOfDevices}}</div>\n                            </td> -->\n                            <td>\n                                <div class=\"field-name\">No. of Device Interfaces</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.noOfSBI}}</div>\n                            </td>\n                            <!-- <td>\n                                <div class=\"field-name\">Type of Device Interfaces</div>\n                                <div class=\"field-value\"><span *ngIf=\"sbiTypeSelected\"> <span\n                                            *ngFor=\"let sbiTypeList of sbiTypeSelected; let i = index\">{{sbiTypeList.sbitype}}\n                                            <span *ngIf=\"i<(sbiTypeSelected.length-1)\">,&nbsp;</span></span> </span>\n                                </div>\n                            </td> -->\n                            <td>\n                                <!-- <div class=\"field-name\">Device Names</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.deviceNames}}</div> -->\n                            </td>\n                            <td></td>\n                        </tr>\n                        <tr *ngIf=\"intakeData.rfEffort.device.length > 0\">\n                            <td colspan=\"4\">\n                                <div class=\"dynamicTable\">\n                                    <table class=\"table table-bordered w-100 my-1\">\n                                        <thead>\n                                            <tr>\n                                                <th style=\"width:27%\">Device Names</th>\n                                                <th>Role in Automation</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor=\"let item of intakeData.rfEffort.device;let i=index\">\n                                                <td> \n                                                    <span style=\"color:#077fff\" *ngIf=\"item.otherFlag == 'Other (Specify)'\">Other - </span>\n                                                {{item.devicename}}</td>\n                                                <td>{{item.roleInAutomation}}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <!-- <td>\n                                <div class=\"field-name\">No. of Systems</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.noOfSystems}}</div>\n                            </td> -->\n                            <td>\n                                <div class=\"field-name\">No. of Applications</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.noOfNBI}}</div>\n                            </td>\n                            <!-- <td>\n                                <div class=\"field-name\">Application Name</div>\n                                <div class=\"field-value\"><span *ngIf=\"nbiTypeSelected\"> <span\n                                            *ngFor=\"let nbiTypeList of nbiTypeSelected; let i = index\">{{nbiTypeList.nbitype}}\n                                            <span *ngIf=\"i<(nbiTypeSelected.length-1)\">,&nbsp;</span></span> </span>\n                                </div>\n                            </td> -->\n                            <td></td>\n                        </tr>\n                        <tr *ngIf=\"intakeData.rfEffort.application.length > 0\">\n                            <td colspan=\"4\">\n                                <div class=\"dynamicTable\">\n                                    <table class=\"table table-bordered w-100 my-1\">\n                                        <thead>\n                                            <tr>\n                                                <th style=\"width:27%\">Application Names</th>\n                                                <th>Role in Automation</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr *ngFor=\"let item of intakeData.rfEffort.application;let i=index\">\n                                                <td><span style=\"color:#077fff\" *ngIf=\"item.otherFlag == 'Other (Specify)'\">Other - </span>{{item.applicationName}}</td>\n                                                <td>{{item.roleInAutomation}}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </td>\n\n                        </tr>\n                        <tr>\n                            <td *ngIf=\"selectedComplexity\">\n                                <div class=\"field-name\">Requested Complexity</div>\n                                <div class=\"field-value\">{{selectedComplexity.complexityDesc}}</div>\n                            </td>\n                            <td>\n                                <!-- <div class=\"field-name\">is validation required ?</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.isValidationRequired}}</div> -->\n                            </td>\n                            <td>\n                                <!-- <div class=\"field-name\">No. of months</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.noOfMonths}}</div> -->\n                            </td>\n                            <td></td>\n                        </tr>\n                        <!-- <tr>\n                            <td>\n                                <div class=\"field-name\">SPOC required for detailed workshop?</div>\n                                <div class=\"field-value\">{{intakeData.rfEffort.spocrequirement}}</div>\n                            </td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                        </tr> -->\n                        <tr>\n                            <td colspan=\"4\">\n                                <div class=\"alert-info\">Savings and Cost</div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <div class=\"field-name\">Manual Cost</div>\n                                <div class=\"field-value\">${{intakeData.rfEffort.manualActivityFormatted}}</div>\n                            </td>\n                            <td>\n                                <div class=\"field-name\">Cost Spent on Automation<small style=\"color:#000\"> (T-shirt OTL size)</small></div>\n                                <div class=\"field-value\">${{intakeData.rfEffort.automationCostFormatted}}</div>\n                            </td>\n                            <td>\n                                <div class=\"field-name\">Total Savings<small style=\"color: #000\"> (per annum)</small></div>\n                                <div class=\"field-value\">${{intakeData.rfEffort.revenueFormatted}}</div>\n                            </td>\n                            <td>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <div class=\"header\" id=\"headingViewThree\">\n                <div class=\"mb-0\">\n                    <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseViewThree\"\n                        aria-expanded=\"false\" aria-controls=\"collapseViewThree\">\n                        Attachments<i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i><i class=\"fa fa-angle-down\"\n                            aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n            <div id=\"collapseViewThree\" class=\"collapse trg-show\">\n                <table class=\"m-0\">\n                    <tbody>\n                        <tr>\n                            <td>\n                                <label class=\"ml-1 mt-3\"> High Level Manual Process Map / Business Justification Document(\n                                    <span>Refer<a  href=\"https://rcirogers.sharepoint.com/:p:/r/sites/ossautomation/governance/Shared%20Documents/Governance%20Presentation%20Templates/Automation%20Governance%20Intake%20Template.pptx?d=w7a1a2b505a6442279844b85ab79ff56d&csf=1&web=1&e=A89JWt\" target=\"_blank\" >   Digital Governance Template<i class=\"fa fa-external-link\" style=\"align-items: right;font-size: 12px;margin-left: 5px;\" aria-hidden=\"true\"></i></a></span> )</label>\n                                <!-- <div class=\"field-name\">Attachments</div> -->\n                                <div class=\"custom-file-Upload mx-1\">\n                                    <div class=\"filess\">\n                                        <ul class=\"file-list\">\n                                            <ng-container *ngFor=\"let file of intakeData.rfUploadFile; let i = index\">\n                                                <li id=\"uploaded_{{i}}\">\n                                                    <div class=\"text-center\">\n                                                        <a href='{{serviceUrl}}/file/download/{{file.fileName}}'><i\n                                                                class=\"fa fa-file\" aria-hidden=\"true\"></i></a>\n                                                    </div>\n                                                    <div class=\"pt-1\">\n                                                        {{file.fileName}}\n                                                    </div>\n                                                </li>\n                                            </ng-container>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"model-overlay slider-wrap-up view-summary\">\n    </div>\n    <div class=\"create-summary slider-wrap-up view-summary\">\n        <div class=\"create-summary-title\"><img src=\"./assets/images/summary-logo.png\" alt=\"\" class=\"mr-2\">Summary\n            Details</div>\n        <div class=\"container-fluild summary-view-port slider-wrap-up view-summary\">\n            <div class=\"row\">\n                <div class=\"col-md-4 pr-0\">\n                    <div class=\" basic-details\">\n                        <div class=\"basic-details-content\">\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <div class=\"field-name\" > \n                                   \n                                                Intake ID  \n                                                    \n                                                </div>\n                                            <div class=\"field-value\">{{intakeData.intakeId}}</div>\n\n\n\n                                        <td>\n                                            <div class=\"field-name\" > \n                                   \n                                                JIRA ID \n                                               \n                                                 <!-- <span *ngIf=\"jiraId=='NA'\">JIRA ID</span> -->\n                                                    \n                                                </div>\n                                            <div class=\"field-value\">{{jiraId}} <a  *ngIf=\"jiraId!='NA'\" [href]=\"generateSafeUrl()\" target=\"_blank\"  >   <i class=\"fa fa-external-link\" style=\"align-items: right;font-size: 12px;margin-left: 5px;\" aria-hidden=\"true\"></i></a></div>\n\n\n                                            \n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <div class=\"field-name\">Team Name</div>\n                                            <div class=\"field-value\">{{intakeData.team.teamName}}</div>\n                                        </td>\n                                        <td>\n                                            <div class=\"field-name\">Director</div>\n                                            <div class=\"field-value\">{{intakeData.benefitingdirector}}</div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <div class=\"field-name\">Savings Type</div>\n                                            <div class=\"field-value\">{{intakeData.rfEffort.savingType}}</div>\n                                        </td>\n                                        <td>\n                                            <div class=\"field-name\">Actual FTE/Day</div>\n                                            <div class=\"field-value\">{{intakeData.rfEffort.actualFTE}}</div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <div class=\"field-name\">Average Daily Volume</div>\n                                            <div class=\"field-value\">{{intakeData.rfEffort.avgDailyVolume}}</div>\n                                        </td>\n                                        <td>\n                                            <div class=\"field-name\">Average Time Spent/Execution</div>\n                                            <div class=\"field-value\">{{intakeData.rfEffort.aet}} mins</div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <div class=\"field-name\">Manual Cost</div>\n                                            <div *ngIf=\"calcValues\" class=\"field-value\">\n                                                ${{calcValues.manualCostFormatted}}</div>\n                                        </td>\n                                        <td>\n                                            <div class=\"field-name\">Cost Spent on Automation<small style=\"color: #000\"> (T-shirt OTL size)</small></div>\n                                            <div *ngIf=\"calcValues\" class=\"field-value\">\n                                                ${{calcValues.automationCostFormatted}}</div>\n                                        </td>\n                                    </tr>\n                                   \n                                    <tr>\n                                        <td colspan=\"2\">\n                                            <div class=\"field-name\">Idea Name</div>\n                                            <div class=\"field-value\" style=\"white-space: pre-wrap;\">{{intakeData.ideaName}}</div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td  colspan=\"2\">\n                                            <div class=\"field-name\">Problem Statement</div>\n                                            <div class=\"field-value decription_box\" style=\"white-space: pre-wrap;\">{{intakeData.ideaDescription}}</div>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n\n                        </div>\n\n                        <div class=\"currency-card card m-0\">\n                            <div class=\"card-header\" id=\"headingCurrency\">\n\n                                <button class=\"btn btn-link collapsed\" data-toggle=\"collapse\"\n                                    data-target=\"#collapseCurrency\" aria-expanded=\"false\"\n                                    aria-controls=\"collapseCurrency\">\n                                    <div *ngIf=\"calcValues\" class=\"filter-status currency-status d-flex mr-4 mb-1\">\n                                        <ng-container *ngFor=\"let roi of calcValues.monthlyRoi; let i = index\">\n                                            <div *ngIf=\"lesserThan(roi, 0)\" class=\"btn currency-indicator loss\"></div>\n                                            <div *ngIf=\"greaterThan(roi, 0)\" class=\"btn currency-indicator profit\">\n                                            </div>\n                                            <div *ngIf=\"roi == 0\" class=\"btn currency-indicator neutral-savings\"></div>\n                                        </ng-container>\n                                        <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i>\n                                        <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n                                    </div>\n\n                                </button>\n\n                            </div>\n\n                            <div *ngIf=\"calcValues\" id=\"collapseCurrency\" class=\"collapse\"\n                                aria-labelledby=\"headingCurrency\">\n                                <div *ngFor=\"let roi of calcValues.monthlyRoi; let i = index\" class=\"card-body\">\n                                    <div class=\"month\">Month {{i + 1}}</div>\n                                    <div class=\"savingsRoi d-flex\">\n                                        <div class=\"savingsValue\"><span\n                                                class=\"pr-1\">$</span>{{calcValues.monthlyRevenueFormatted[i]}}</div>\n                                        <div class=\"roiPercentage d-flex ml-auto\">\n                                            <div class=\"name\">\n                                                ROI\n                                            </div>\n\n                                            <div class=\"percentage\"  [ngStyle]=\"setStyle(roi, 0)\">\n                                                {{roi}}%\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"basic-details-bottom\">\n                            <div class=\"roi\">\n                                <div class=\"percentage\" [ngClass]=\"{'warning-bg' : lesserThan(roiPerc, 0)}\">\n                                    {{roiPerc}}%\n                                </div>\n                                <div class=\"name\">\n                                    ROI\n                                </div>\n                            </div>\n                            <div class=\"d-flex summary-currency\">\n                                <div class=\"dollar mr-2\"><img src=\"./assets/images/Dollar-symbol.png\" alt=\"\"\n                                        class=\"w-100 h-100\"></div>\n                                <div>\n                                    <span *ngIf=\"calcValues\"\n                                        class=\"value d-block\">{{calcValues.revenueFormatted}}</span>\n                                    <span class=\"value-description\"\n                                        [ngClass]=\"{'font-warning' : lesserThan(roiPerc, 0)}\">Total savings/Annum</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"col-md-8 other-details\">\n                    <div class=\"all-estimation\">\n                        <div class=\"block-heading\">\n                            Complexity Mapping\n                        </div>\n                        <div class=\"estimation\">\n                            <div>\n                                <!-- <div class=\"d-flex\">\n                                    <div>No. of Devices</div>\n                                    <div class=\"estimationValue\">{{intakeData.rfEffort.noOfDevices}}</div>\n                                </div> -->\n                                <div class=\"d-flex\">\n                                    <div>No. of Device Interfaces</div>\n                                    <div class=\"estimationValue\">{{intakeData.rfEffort.noOfSBI}}</div>\n                                </div>\n                                <div class=\"d-flex\">\n                                    <div>No. of Applications</div>\n                                    <div class=\"estimationValue\">{{intakeData.rfEffort.noOfNBI}}</div>\n                                </div>\n                                <!-- <div class=\"d-flex\">\n                                    <div>Device Names</div>\n                                    <div class=\"estimationValue\">{{intakeData.rfEffort.deviceNames}}</div>\n                                </div> -->\n                            </div>\n                            <div>\n                                <!-- <div class=\"d-flex\">\n                                    <div>No. of Systems</div>\n                                    <div class=\"estimationValue\">{{intakeData.rfEffort.noOfSystems}}</div>\n                                </div> -->\n                                <div *ngIf=\"sbiTypeSelected.length > 0\" class=\"d-flex\">\n                                    <div>Type of Device Interfaces</div>\n                                    <div class=\"estimationValue\"><span *ngIf=\"sbiTypeSelected\"> <span\n                                                *ngFor=\"let sbiTypeList of sbiTypeSelected; let i = index\">{{sbiTypeList.sbitype}}\n                                                <span *ngIf=\"i<(sbiTypeSelected.length-1)\">,&nbsp;</span></span> </span>\n                                                <span>\n                                                    {{deviceapplicationNames}}\n                                                </span>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"nbiTypeSelected.length > 0\" class=\"d-flex\">\n                                    <div>Application Names</div>\n                                    <div class=\"estimationValue\"><span *ngIf=\"nbiTypeSelected\"> <span\n                                                *ngFor=\"let nbiTypeList of nbiTypeSelected; let i = index\">{{nbiTypeList.nbitype}}\n                                                <span *ngIf=\"i<(nbiTypeSelected.length-1)\">,&nbsp;</span></span> </span>\n                                                <span>\n                                                    {{applicationNames}}\n                                                </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"estimation estimation-2\">\n                            <div>\n                                <!-- <div *ngIf=\"selectedComplexity\" class=\"d-flex\">\n                                    <div>User assigned Complexity</div>\n                                    <div class=\"estimationValue\">{{selectedComplexity.complexityDesc}}</div>\n                                </div> -->\n                                <!-- <div class=\"d-flex\">\n                                    <div>Validation Required</div>\n                                    <div class=\"estimationValue\">{{intakeData.rfEffort.isValidationRequired}}</div>\n                                </div> -->\n                                <div class=\"d-flex\">\n                                    <div>Financial Benefits</div>\n                                    <div class=\"estimationValue\">{{intakeData.financialBenefits}}</div>\n                                </div>\n                            </div>\n                            <!-- <div class=\"text-right\">\n                                <img _ngcontent-rvk-c59=\"\" src=\"./assets/images/summary-graph.png\" alt=\"\" width=\"100px\"\n                                    height=\"90px\">\n                            </div> -->\n                        </div>\n                        <!-- <div *ngIf=\"complexity && intakeData.rfEffort.isValidationRequired=='No'\"\n                            class=\"text-center complexity-value\">\n                            Framework assigned Complexity : {{complexity.complexityDesc}}\n                        </div> -->\n                        <div *ngIf=\"complexity\"\n                            class=\"text-center complexity-value\">\n                            Framework assigned Complexity : {{complexity.complexityDesc}} vs User assigned Complexity :\n                            {{selectedComplexity.complexityDesc}}\n                        </div>\n                    </div>\n                    <!-- <div class=\"inner-block \">\n                        <div class=\"block-heading\">\n                            Hours/Month (in hrs)\n                        </div>\n                        <div class=\"block-content\">\n                            <div class=\"row\">\n                                <div class=\"col-md-2 bot-image\">\n                                    <img src=\"./assets/images/raf-bot.png\" alt=\"\">\n                                </div>\n                                <div class=\"col-md-10 block-details\">\n                                    <div class=\"d-flex mb-3\">\n                                        <div class=\"block-name\">\n                                            Manual Hours\n                                        </div>\n                                        <div class=\"progress\">\n                                            <div class=\"progress-bar bg-danger\" role=\"progressbar\" style=\"width: 252px\"\n                                                aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                        <div class=\"content-value mr-5\">{{manualHours}} hrs</div>\n                                    </div>\n                                    <div class=\"d-flex\">\n                                        <div class=\"block-name\">\n                                            Automation Hours\n                                        </div>\n                                        <div class=\"progress progress-sm\">\n                                            <div class=\"progress-bar bg-success\" role=\"progressbar\" style=\"width: 100%\"\n                                                aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                        <div class=\"content-value mr-5\">{{automationHours}} hrs</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"inner-block\">\n                        <div class=\"block-heading\">\n                            Cost/Month (in $)\n                        </div>\n                        <div class=\"block-content\">\n                            <div class=\"row\">\n                                <div class=\"col-md-2 bot-image\">\n                                    <img src=\"./assets/images/raf-bot.png\" alt=\"\">\n                                </div>\n                                <div class=\"col-md-10 block-details\">\n                                    <div class=\"d-flex mb-3\">\n                                        <div class=\"block-name\">\n                                            Manual Cost (in $)\n                                        </div>\n                                        <div class=\"progress\">\n                                            <div class=\"progress-bar bg-danger\" role=\"progressbar\" style=\"width: 252px\"\n                                                aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                        <div *ngIf=\"calcValues\" class=\"content-value mr-5\">${{calcValues.manualCostFormatted}}</div>\n                                    </div>\n                                    <div class=\"d-flex\">\n                                        <div class=\"block-name\">\n                                            Automation Cost (in $)\n                                        </div>\n                                        <div class=\"progress progress-sm\">\n                                            <div class=\"progress-bar bg-primary\" role=\"progressbar\" style=\"width: 100%\"\n                                                aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                        <div *ngIf=\"calcValues\" class=\"content-value mr-5\">${{calcValues.automationCostFormatted}}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div> -->\n                    <div class=\"inner-block\">\n                        <div class=\"block-heading\">\n                            Potential Saving For First Month\n                        </div>\n                        <div class=\"block-content\">\n                            <div class=\"row\">\n                                <div class=\"col-md-2 bot-image\">\n                                    <img src=\"./assets/images/raf-bot.png\" alt=\"\">\n                                </div>\n                                <div class=\"col-md-10 block-details\">\n                                    <div class=\"d-flex mb-3\">\n                                        <div class=\"block-name\">\n                                            Hours Saved\n                                        </div>\n                                        <div class=\"progress progress-medium\">\n                                            <div class=\"progress-bar bg-success\" role=\"progressbar\" style=\"width: 100%\"\n                                                aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                        <div class=\"content-value mr-5\">{{hoursSaving}} hrs</div>\n                                    </div>\n                                    <div class=\"d-flex\">\n                                        <div class=\"block-name\">\n                                            Cost Saved\n                                        </div>\n                                        <div class=\"progress progress-large\">\n                                            <div class=\"progress-bar bg-primary\" role=\"progressbar\" style=\"width: 100%\"\n                                                aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                        <div *ngIf=\"calcValues\" class=\"content-value mr-5\">\n                                            ${{calcValues.costSavingFormatted}}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"disclaimer\"><sup>*</sup>All these numbers are based on T-Shirt sizing and\n                        estimations. Will have to be fine-tuned post workshop.</div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <div class=\"triangle-up slider-wrap-up view-summary\"></div>\n        <button type=\"button\" class=\"btn btn-secondary float-right mr-3 btn-view-summary trgcollapse\" id=\"view-summary\"\n            (click)=\"viewSummary()\">VIEW\n            SUMMARY</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from '../../service/login.service';\nimport { IntakeService } from '../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-intake',\n  templateUrl: './intake.component.html',\n  styleUrls: ['./intake.component.scss'],\n  providers: [DatePipe]\n})\nexport class IntakeComponent implements OnInit {\n  public message: any;\n  public alertMessage: any = [];\n  public alertdata = false;\n  user: any;\n  intakeCreate: FormGroup;\n  intakeList: any = [];\n  fullIntakeList: any = [];\n  createdByMeList: any = [];\n  approvalPendingList: any = [];\n  pendingList: any = [];\n  automatedCount: any;\n  automationPendingList: any = [];\n  pendingCount: any;\n  draftCount: any;\n  approvedCount: any;\n  rejectedCount: any;\n  totalCount: any;\n  total = true;\n  pending = false;\n  draft = false;\n  approved = false;\n  rejected = false;\n  automated = false;\n  menuList: any;\n  all = false;\n  byMe = false;\n  approval = false;\n  automationTab = false;\n  add = false;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    // console.log(this.user);\n    if (!this.user) {\n      this.router.navigateByUrl('loginmain');\n    }\n\n    this.menuList = JSON.parse(localStorage.getItem('MENU'));\n    this.menuList = this.menuList.filter(item => item.mainMenu.menuName === 'Intake Portal');\n    this.menuList = this.menuList[0].subMenu;\n    let j = this.menuList.filter(item => item.menuName === 'All');\n    if (j.length > 0) {\n      this.all = true;\n    }\n    j = this.menuList.filter(item => item.menuName === 'Uploaded By Me');\n    if (j.length > 0) {\n      this.byMe = true;\n    }\n    j = this.menuList.filter(item => item.menuName === 'Add an Idea');\n    if (j.length > 0) {\n      this.add = true;\n    }\n    j = this.menuList.filter(item => item.menuName === 'Approval Pending');\n    if (j.length > 0) {\n      this.approval = true;\n    }\n    j = this.menuList.filter(item => item.menuName === 'Automation Pending');\n    if (j.length > 0) {\n      this.automationTab = true;\n    }\n\n    this.intakeService.getAllIntakes().subscribe(\n      val => {\n        this.intakeList = val;\n        this.intakeList.forEach((element, index) => {\n          element.rfEffort.device = JSON.parse(element.rfEffort.device);\n          element.rfEffort.application = JSON.parse(element.rfEffort.application);\n        });\n        this.fullIntakeList = val;\n        this.fullIntakeList = this.fullIntakeList.filter(item => item.rfStatus.status !== 'DRAFT' || (item.rfStatus.status === 'DRAFT' && item.createdby.id === this.user.id));\n        this.intakeList = this.intakeList.filter(item => item.rfStatus.status !== 'DRAFT' || (item.rfStatus.status === 'DRAFT' && item.createdby.id === this.user.id));\n        this.totalCount = this.intakeList.length;\n        // console.log('full', this.fullIntakeList);\n        let j = this.intakeList.filter(item => item.rfStatus.status === 'PENDING');\n        this.pendingCount = j.length;\n        j = this.intakeList.filter(item => item.rfStatus.status === 'APPROVED');\n        this.approvedCount = j.length;\n        j = this.intakeList.filter(item => item.rfStatus.status === 'REJECTED');\n        this.rejectedCount = j.length;\n        j = this.intakeList.filter(item => item.rfStatus.status === 'DRAFT');\n        this.draftCount = j.length;\n        j = this.intakeList.filter(item => item.rfStatus.status === 'AUTOMATED');\n        this.automatedCount = j.length;\n        this.createdByMeList = this.intakeList.filter(item => item.createdby.id === this.user.id);\n        // this.approvalPendingList = this.intakeList.filter(item => item.approver.id === this.user.id);\n        this.approvalPendingList = this.approvalPendingList.filter(item => item.rfStatus.status === 'PENDING');\n        this.pendingList = this.intakeList.filter(item => item.rfStatus.status === 'PENDING');\n        this.automationPendingList = this.intakeList.filter(item => item.rfStatus.status === 'APPROVED');\n      });\n  }\n\n  filterBasedonStatus(status) {\n    if (status === 'total') {\n      this.total = true;\n      this.draft = false;\n      this.approved = false;\n      this.rejected = false;\n      this.pending = false;\n      this.automated = false;\n      this.intakeList = JSON.parse(JSON.stringify(this.fullIntakeList));\n      // this.intakeList = this.intakeList.filter(item => item.createdby.id === this.user.id || (item.approver.id === this.user.id && item.rfStatus.status !== 'DRAFT'));\n    } else if (status === 'draft') {\n      this.draft = true;\n      this.total = false;\n      this.approved = false;\n      this.rejected = false;\n      this.pending = false;\n      this.automated = false;\n      this.intakeList = JSON.parse(JSON.stringify(this.fullIntakeList.filter(item => item.rfStatus.status === 'DRAFT')));\n    } else if (status === 'pending') {\n      this.pending = true;\n      this.total = false;\n      this.approved = false;\n      this.rejected = false;\n      this.draft = false;\n      this.automated = false;\n      this.intakeList = JSON.parse(JSON.stringify(this.fullIntakeList.filter(item => item.rfStatus.status === 'PENDING')));\n    } else if (status === 'approved') {\n      this.approved = true;\n      this.total = false;\n      this.draft = false;\n      this.rejected = false;\n      this.pending = false;\n      this.automated = false;\n      this.intakeList = JSON.parse(JSON.stringify(this.fullIntakeList.filter(item => item.rfStatus.status === 'APPROVED')));\n    } else if (status === 'rejected') {\n      this.rejected = true;\n      this.total = false;\n      this.approved = false;\n      this.draft = false;\n      this.pending = false;\n      this.automated = false;\n      this.intakeList = JSON.parse(JSON.stringify(this.fullIntakeList.filter(item => item.rfStatus.status === 'REJECTED')));\n    } else if (status === 'automated') {\n      this.rejected = false;\n      this.total = false;\n      this.approved = false;\n      this.draft = false;\n      this.pending = false;\n      this.automated = true;\n      this.intakeList = JSON.parse(JSON.stringify(this.fullIntakeList.filter(item => item.rfStatus.status === 'AUTOMATED')));\n    }\n    this.createdByMeList = this.intakeList.filter(item => item.createdby.id === this.user.id);\n    this.approvalPendingList = this.intakeList.filter(item => item.approver.id === this.user.id);\n    this.approvalPendingList = this.approvalPendingList.filter(item => item.rfStatus.status === 'PENDING');\n    this.pendingList = this.intakeList.filter(item => item.rfStatus.status === 'PENDING');\n    this.automationPendingList = this.intakeList.filter(item => item.rfStatus.status === 'APPROVED');\n  }\n}\n","<div class=\"container-fluid intake-summary\">\n  <div class=\"row summary-chart\">\n    <div class=\"col summary-value\">\n      <div class=\"value\">\n        {{totalCount}}\n      </div>\n      <div class=\"title-summary\">\n        <span class=\"filter-indicator total-bots\"></span>\n        <span class=\"summary-name\">TOTAL IDEAS</span>\n        <!-- <div class=\"graph\">\n          <figure class=\"highcharts-figure h-100\">\n            <div id=\"highchart-container\" class=\"h-100\"></div>\n          </figure>\n        </div> -->\n      </div>\n    </div>\n    <span class=\"divider\"></span>\n    <div class=\"col summary-value\">\n      <div class=\"value\">\n        {{pendingCount}}\n      </div>\n      <div class=\"title-summary\">\n        <div class=\"filter-indicator yet-to-start\"></div>\n        <span class=\"summary-name\">PENDING</span>\n        <div class=\"graph\">\n          <figure class=\"highcharts-figure h-100\">\n            <div id=\"highchart-container-2\" class=\"h-100\"></div>\n          </figure>\n        </div>\n      </div>\n    </div>\n    <span class=\"divider\"></span>\n    <div class=\" col summary-value\">\n      <div class=\"value\">\n        {{draftCount}}\n      </div>\n      <div class=\"title-summary\">\n        <div class=\"filter-indicator in-progress\"></div>\n        <span class=\"summary-name\">DRAFT</span>\n        <div class=\"graph\">\n          <figure class=\"highcharts-figure h-100\">\n            <div id=\"highchart-container-3\" class=\"h-100\"></div>\n          </figure>\n        </div>\n      </div>\n    </div>\n    <span class=\"divider\"></span>\n    <div class=\"col summary-value\">\n      <div class=\"value\">\n        {{rejectedCount}}\n      </div>\n      <div class=\"title-summary\">\n        <div class=\"filter-indicator rejected\"></div>\n        <span class=\"summary-name\">REJECTED</span>\n        <div class=\"graph\">\n          <figure class=\"highcharts-figure h-100\">\n            <div id=\"highchart-container-4\" class=\"h-100\"></div>\n          </figure>\n        </div>\n      </div>\n    </div>\n    <span class=\"divider\"></span>\n    <div class=\"col summary-value\">\n      <div class=\"value\">\n        {{approvedCount}}\n      </div>\n      <div class=\"title-summary\">\n        <div class=\"filter-indicator completed\"></div>\n        <span class=\"summary-name\">APPROVED</span>\n        <div class=\"graph\">\n          <figure class=\"highcharts-figure h-100\">\n            <div id=\"highchart-container-5\" class=\"h-100\"></div>\n          </figure>\n        </div>\n      </div>\n    </div>\n    <span class=\"divider\"></span>\n    <div class=\"col summary-value\">\n      <div class=\"value\">\n        {{automatedCount}}\n      </div>\n      <div class=\"title-summary\">\n        <div class=\"filter-indicator automated\"></div>\n        <span class=\"summary-name\">AUTOMATED</span>\n        <div class=\"graph\">\n          <figure class=\"highcharts-figure h-100\">\n            <div id=\"highchart-container-5\" class=\"h-100\"></div>\n          </figure>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"intake-content\">\n  <nav>\n    <div class=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n      <a *ngIf=\"all\" class=\"nav-item nav-link active\" id=\"nav-all-tab\" data-toggle=\"tab\" href=\"#nav-all\" role=\"tab\"\n        aria-controls=\"nav-home\" aria-selected=\"true\">All<span class=\"all-value\">({{intakeList.length}})</span></a>\n      <a *ngIf=\"byMe\" class=\"nav-item nav-link\" id=\"nav-myUploads-tab\" data-toggle=\"tab\" href=\"#nav-myUploads\" role=\"tab\"\n        aria-controls=\"nav-profile\" aria-selected=\"false\">Uploaded by me<span\n          class=\"my-uploades\">({{createdByMeList.length}})</span></a>\n      <a *ngIf=\"approval\" class=\"nav-item nav-link\" id=\"nav-pending-tab\" data-toggle=\"tab\" href=\"#nav-pending\" role=\"tab\"\n        aria-controls=\"nav-contact\" aria-selected=\"false\">Approval pending<span\n          class=\"pending-value\">({{pendingList.length}})</span></a>\n      <a *ngIf=\"automationTab\" class=\"nav-item nav-link\" id=\"nav-automated-tab\" data-toggle=\"tab\" href=\"#nav-automated\" role=\"tab\"\n        aria-controls=\"nav-automated\" aria-selected=\"false\">Automation pending<span\n          class=\"pending-value\">({{automationPendingList.length}})</span></a>\n      <div *ngIf=\"add\" type=\"button\" class=\"btn-plus\" data-toggle=\"modal\" data-target=\"#intake-create\">+</div><a *ngIf=\"add\"\n        class=\"create-link\">Add an Idea</a>\n      <!-- <div type=\"button\" class=\"btn-plus trgslide\" id=\"intake-create\">+</div><a class=\"create-link\">Add an\n        Idea</a> -->\n      <div class=\"float-right ml-auto\">\n        <div class=\"filter-options\">\n          <div class=\"filter-status d-flex mr-4\">\n            <div class=\"btn filter-indicator total-bots\" [ngClass]=\" { 'active' : total}\"\n              (click)='filterBasedonStatus(\"total\")'></div>\n            <div class=\"btn filter-indicator yet-to-start\" [ngClass]=\" { 'active' : pending}\"\n              (click)='filterBasedonStatus(\"pending\")'></div>\n            <div class=\"btn filter-indicator in-progress\" [ngClass]=\" { 'active' : draft}\"\n              (click)='filterBasedonStatus(\"draft\")'></div>\n            <div class=\"btn filter-indicator rejected\" [ngClass]=\" { 'active' : rejected}\"\n              (click)='filterBasedonStatus(\"rejected\")'></div>\n            <div class=\"btn filter-indicator completed\" [ngClass]=\" { 'active' : approved}\"\n              (click)='filterBasedonStatus(\"approved\")'></div>\n            <div class=\"btn filter-indicator automated\" [ngClass]=\" { 'active' : automated}\"\n              (click)='filterBasedonStatus(\"automated\")'></div>\n          </div>\n          <!-- <i class=\"fa fa-list mr-4\" aria-hidden=\"true\"></i>\n          <i class=\"fa fa-th-large ml-1\" aria-hidden=\"true\"></i>\n          <i class=\"fa fa-th\" aria-hidden=\"true\"></i> -->\n        </div>\n      </div>\n    </div>\n  </nav>\n  <div class=\"tab-content\" id=\"nav-tabContent\">\n    <div *ngIf=\"all\" class=\"tab-pane fade show active\" id=\"nav-all\" role=\"tabpanel\" aria-labelledby=\"nav-all-tab\">\n      <app-intake-all [intakes]=\"intakeList\"></app-intake-all>\n    </div>\n    <div *ngIf=\"byMe\" class=\"tab-pane fade\" id=\"nav-myUploads\" role=\"tabpanel\" aria-labelledby=\"nav-myUploads-tab\">\n      <app-intake-user-created [intakes]=\"createdByMeList\"></app-intake-user-created>\n    </div>\n    <div *ngIf=\"approval\" class=\"tab-pane fade\" id=\"nav-pending\" role=\"tabpanel\" aria-labelledby=\"nav-pending-tab\">\n      <app-intake-approval [intakes]=\"pendingList\"></app-intake-approval>\n    </div>\n    <div *ngIf=\"automationTab\" class=\"tab-pane fade\" id=\"nav-automated\" role=\"tabpanel\" aria-labelledby=\"nav-automated-tab\">\n      <app-automated [intakes]=\"automationPendingList\"></app-automated>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, Output, ElementRef, ViewChild, OnChanges, EventEmitter, SimpleChanges, SimpleChange } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from './../../../service/login.service';\nimport { IntakeService } from './../../../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-pending',\n  templateUrl: './pending.component.html',\n  styleUrls: ['./pending.component.scss']\n})\nexport class PendingComponent implements OnInit {\n  @Input() intakes: any;\n  editData: any;\n  index: any;\n  viewData: any;\n  viewindex: any;\n  public message: any;\n  public alertMessage: any = [];\n  public alertdata = false;\n  alertIndex: any;\n  roles: any;\n  approverFlag = false;\n\n  constructor(\n    public http: HttpClient,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // console.log('user', this.intakes);\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    let j = this.roles.filter(item => item.rolePermission.permission === 'Approver');\n    if (j.length > 0) {\n      this.approverFlag = true;\n    }\n  }\n\n  deleteIntake(intake, index) {\n    this.alertIndex = index;\n    this.intakeService.deleteIntake(intake.intakeId).subscribe(\n      val => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"success\", \"close\": true,\n          \"content\": \"Intake deleted successfully\",\n        }];\n        setTimeout(function () {\n          this.alertdata = false;\n          window.location.reload();\n        }.bind(this), 1000);\n      },\n      error => {\n        this.alertdata = true;\n        this.alertMessage = [{\n          \"type\": \"danger\", \"close\": true,\n          \"content\": \"<strong>Failed</strong> to delete intake\",\n        }\n        ];\n        setTimeout(function () { this.alertdata = false; }.bind(this), 1000);\n      });\n  }\n\n  editIntake(intake, index){\n    // console.log(intake);\n    this.editData = intake;\n    this.index = index;\n  }\n\n  viewIntake(intake, index){\n    this.viewData = intake;\n    this.viewindex = index;\n  }\n}\n","<div class=\"row\">\n    <div *ngFor=\"let intake of intakes; let i = index\" class=\"col-md-3\">\n        <div class=\"card\">\n            <app-alert [data]=\"alertMessage\" *ngIf=\"alertdata && i==alertIndex\"></app-alert>\n            <div class=\"card-body\">\n                <div class=\"card-thumnail mb-2\">\n                    <div *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"pos-absolute filter-indicator-small in-progress\"></div>\n                    <div *ngIf=\"intake.rfStatus.status=='PENDING'\" class=\"pos-absolute filter-indicator-small yet-to-start\"></div>\n                    <div *ngIf=\"intake.rfStatus.status=='APPROVED'\" class=\"pos-absolute filter-indicator-small completed\"></div>\n                    <div *ngIf=\"intake.rfStatus.status=='REJECTED'\" class=\"pos-absolute filter-indicator-small rejected\"></div>\n                </div>\n                <div class=\"card-content\">\n                    <div class=\"card-title trgslide\" id=\"intake-view-{{i}}\" (click)=\"viewIntake(intake,i)\">{{intake.ideaName}}</div>\n                    <p class=\"card-text\">by {{intake.createdby.name}}</p>\n                    <div class=\"card-upadted-time\">Updated on {{intake.modifieddate | date:\"dd/MM/yyyy\"}}</div>\n                    <div class=\"description\">{{intake.ideaDescription}}</div>\n                    <div class=\"card-bottom\">\n                        <div class=\"currency d-flex\">\n                            <i class=\"fa fa-usd\" aria-hidden=\"true\"></i>\n                            <div>\n                                <span class=\"value d-block\">{{intake.rfEffort.revenueFormatted}}</span>\n                                <span class=\"value-description\">Revenue in ($)</span>\n                            </div>\n                        </div>\n                        <div class=\"comments ml-auto\">\n                            <!-- <i class=\"fa fa-heart mr-2 mt-3\" aria-hidden=\"true\"></i> -->\n                            <!-- <i class=\"fa fa-share-square-o mt-3\" aria-hidden=\"true\"></i> -->\n                            <i *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"fa fa-trash\" id=\"intake-delete-{{i}}\" (click)=\"deleteIntake(intake, i)\"  aria-hidden=\"true\"></i>\n                            <i *ngIf=\"intake.rfStatus.status=='DRAFT'\" class=\"fa fa-pencil-square-o trgslide\" id=\"intake-edit-{{i}}\" (click)=\"editIntake(intake,i)\" aria-hidden=\"true\"></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngFor=\"let intake of intakes; let i = index\">\n    <div *ngIf=\"editData && index==i\" class=\"slider-wrap intake-edit-{{i}}\">\n        <app-intake-edit [intakeData]=\"editData\"></app-intake-edit>\n    </div>\n    <div *ngIf=\"viewData && viewindex==i\" class=\"slider-wrap intake-view-{{i}}\">\n        <app-intake-view [intakeData]=\"viewData\"></app-intake-view>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LoginService } from '../service/login.service';\nimport { IntakeService } from '../service/intake.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n  providers: [DatePipe]\n})\nexport class MainComponent implements OnInit {\n  user: any;\n  roles: any;\n  menuList: any;\n  public tabHeading = \"Intake\";\n  adminConsole = false;\n  dashboard = false;\n  intakePortal = false;\n  automationFactory = false;\n\n  constructor(\n    public http: HttpClient,\n    private loginService: LoginService,\n    private intakeService: IntakeService,\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('USER'));\n    this.roles = JSON.parse(localStorage.getItem('ROLES'));\n    \n    // console.log(this.user);\n    if (!this.user) {\n      this.router.navigateByUrl('loginmain');\n    }\n    this.menuList = JSON.parse(localStorage.getItem('MENU'));\n    let j = this.menuList.filter(item => item.mainMenu.menuName === 'Admin Portal');\n    if (j.length > 0) {\n      this.adminConsole = true;\n    }\n    j = this.menuList.filter(item => item.mainMenu.menuName === 'Automation factory');\n    if (j.length > 0) {\n      this.automationFactory = true;\n    }\n    j = this.menuList.filter(item => item.mainMenu.menuName === 'Intake Portal');\n    if (j.length > 0) {\n      this.intakePortal = true;\n    }\n    j = this.menuList.filter(item => item.mainMenu.menuName === 'Dashboard');\n    if (j.length > 0) {\n      this.dashboard = true;\n    }\n  }\n\n  setHeading(heading) {\n    this.tabHeading = heading;\n  }\n\n  logout() {\n    localStorage.removeItem('USER');\n    localStorage.removeItem('MENU');\n    localStorage.removeItem('ROLES');\n    localStorage.removeItem('basicAuth');\n    this.router.navigateByUrl('loginmain');\n  }\n}\n","<div class=\"intake\">\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-transparant\">\n    <a class=\"navbar-brand mb-1\">{{tabHeading}}</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <div class=\"float-right ml-auto\">\n        <!-- <div class=\"float-left header-blk drop-setting position-relative\">\n          <i class=\"d-inline fa fa-search\"></i>\n        </div>\n        <div class=\"float-left header-blk drop-setting position-relative\">\n          <i class=\"fa fa-cog\" aria-hidden=\"true\"></i>\n        </div>\n        <div class=\"float-left header-blk drop-notify position-relative\">\n          <i class=\"d-inline fa fa-bell\"></i>\n          <span class=\"badge badge-warning position-absolute\">5</span>\n        </div> -->\n        <div class=\"float-left header-blk drop-profile\">\n          <div class=\"float-right profile-pic\"></div>\n          <div class=\"float-left profile-name\"><span class=\"title-name\">{{user.name}}</span>\n            <span class=\"role\">{{roles[0].rolePermission.permission}}</span></div>\n          <!-- <i class=\"fa fa-caret-down pos-abs-top-right\"></i> -->\n        </div>\n        <!-- <div class=\"float-left header-blk drop-menu position-relative\">\n          <i class=\"d-inline fa fa-bars\"></i>\n        </div> -->\n      </div>\n    </div>\n  </nav>\n\n  <div class=\"intake-side-nav d-flex\">\n    <div class=\"nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n      <a class=\"nav-link disabled\" id=\"v-pills-home-tab\" data-toggle=\"pill\" href=\"#v-pills-home\" role=\"tab\"\n        aria-controls=\"v-pills-home\" aria-selected=\"true\" disabled><img src=\"./assets/images/logo-white.png\"\n          class=\"my-2\" width=\"38px\"></a>\n      <a *ngIf=\"dashboard\" class=\"nav-link\" id=\"v-pills-profile-tab\" data-toggle=\"pill\" href=\"#v-pills-profile\" role=\"tab\"\n        aria-controls=\"v-pills-profile\" aria-selected=\"false\" (click)=\"setHeading('Dashboard')\" mdbTooltip=\"tooltip\" data-placement=\"right\" title=\"Dashboard\">\n        <div class=\"menu-icon dashboard\"></div>\n      </a>\n      <a *ngIf=\"intakePortal\" class=\"nav-link  active\" id=\"intake-tab\" data-toggle=\"pill\" href=\"#intake\" role=\"tab\"\n        aria-controls=\"intake\" aria-selected=\"false\" (click)=\"setHeading('Intake')\" mdbTooltip=\"tooltip\" data-placement=\"right\" title=\"Intake\">\n        <div class=\"menu-icon idea\"></div>\n      </a>\n      <a *ngIf=\"automationFactory\" class=\"nav-link\" id=\"v-pills-list-tab\" data-toggle=\"pill\" href=\"#v-pills-list\" role=\"tab\"\n        aria-controls=\"v-pills-list\" aria-selected=\"false\" (click)=\"setHeading('Catalog')\" mdbTooltip=\"tooltip\" data-placement=\"right\" title=\"Catalog\">\n        <div class=\"menu-icon list\"></div>\n      </a>\n      <a *ngIf=\"adminConsole\" class=\"nav-link\" id=\"v-pills-settings-tab\" data-toggle=\"pill\" href=\"#v-pills-settings\" role=\"tab\"\n        aria-controls=\"v-pills-settings\" aria-selected=\"false\" (click)=\"setHeading('Admin Console')\" mdbTooltip=\"tooltip\" data-placement=\"right\" title=\"Admin Console\">\n        <div class=\"menu-icon mic\"></div>\n      </a>\n      <a class=\"log-out\" (click)=\"logout()\" mdbTooltip=\"tooltip\" data-placement=\"right\" title=\"Log Out\"><i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></a>\n    </div>\n    <div class=\"intake-bg\">\n      <div class=\"tab-content\" id=\"v-pills-tabContent\">\n        <div class=\"tab-pane fade\" id=\"v-pills-home\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\">...</div>\n        <div *ngIf=\"dashboard\" class=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">\n          <app-dashboard></app-dashboard>\n        </div>\n        <div *ngIf=\"intakePortal\" class=\"tab-pane fade show active\" id=\"intake\" role=\"tabpanel\"\n          aria-labelledby=\"intake-tab\">\n          <app-intake></app-intake>\n        </div>\n        <div *ngIf=\"automationFactory\" class=\"tab-pane fade\" id=\"v-pills-list\" role=\"tabpanel\" aria-labelledby=\"v-pills-list-tab\">\n          <app-automation-factory></app-automation-factory>\n        </div>\n        <div *ngIf=\"adminConsole\" class=\"tab-pane fade\" id=\"v-pills-settings\" role=\"tabpanel\" aria-labelledby=\"v-pills-settings-tab\">\n          <app-admin-console></app-admin-console>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!----Intake-create----->\n  <!-- <div id=\"popup1\" class=\"overlay slider-wrap intake-create\">\n    <app-intake-create></app-intake-create>\n  </div> -->\n  <div class=\"modal fade\" data-backdrop=\"static\" data-keyboard=\"false\" id=\"intake-create\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <app-intake-create></app-intake-create>\n    </div>\n  </div>\n</div>","import{Directive,ElementRef,HostListener}from'@angular/core';\n \n@Directive({\n  selector:'[appNumberDirective]'\n})\nexport class NumberDirective{\n// Allow decimal numbers and negative values\nprivate regex:RegExp=new RegExp(/^[1-9]\\d*$/g);\n// Allow key codes for special events. Reflect :\n// Backspace, tab, end, home\nprivate specialKeys:Array<string>=['Backspace','Tab','End','Home','ArrowLeft','ArrowRight','Del','Delete'];\n \nconstructor(private el:ElementRef){\n}\n@HostListener('keydown',['$event'])\n  onKeyDown(event:KeyboardEvent){\n// Allow Backspace, tab, end, and home keys\nif(this.specialKeys.indexOf(event.key)!==-1){\nreturn;\n}\nlet current:string=this.el.nativeElement.value;\nconst position =this.el.nativeElement.selectionStart;\nconst next:string=[current.slice(0, position), event.key =='Decimal'?'.': event.key, current.slice(position)].join('');\nif(next &&!String(next).match(this.regex)){\n      event.preventDefault();\n}\n}\n}\n\n","import{Directive,ElementRef,HostListener}from'@angular/core';\n \n@Directive({\n  selector:'[appRealNumberDirective]'\n})\nexport class RealNumberDirective{\n// Allow decimal numbers and negative values\nprivate regex:RegExp=new RegExp(/^[0-9]\\d*$/g);\n// Allow key codes for special events. Reflect :\n// Backspace, tab, end, home\nprivate specialKeys:Array<string>=['Backspace','Tab','End','Home','ArrowLeft','ArrowRight','Del','Delete'];\n \nconstructor(private el:ElementRef){\n}\n@HostListener('keydown',['$event'])\n  onKeyDown(event:KeyboardEvent){\n// Allow Backspace, tab, end, and home keys\nif(this.specialKeys.indexOf(event.key)!==-1){\nreturn;\n}\nlet current:string=this.el.nativeElement.value;\nconst position =this.el.nativeElement.selectionStart;\nconst next:string=[current.slice(0, position), event.key =='Decimal'?'.': event.key, current.slice(position)].join('');\nif(next &&!String(next).match(this.regex)){\n      event.preventDefault();\n}\n}\n}\n\n","import {\n  trigger,\n  transition,\n  style,\n  query,\n  group,\n  animateChild,\n  animate,\n  keyframes,\n} from '@angular/animations';\n\nexport const slider =\n  trigger('routeAnimations', [\n    // transition('* => isLeft', slideTo('left') ),\n    // transition('* => isRight', slideTo('right') ),\n    // transition('isRight => *', slideTo('left') ),\n    // transition('isLeft => *', slideTo('right') )\n    transition('* <=> *', slideTo('left') )\n  ]);\n\nfunction slideTo(direction) {\n  const optional = { optional: true };\n  return [\n    // set new page X location to be -100%\n    query(\n      ':enter',\n      style({\n        position: 'fixed',\n        width: '100%',\n        transform: 'translateX(100%)',\n      }), optional\n    ),\n\n    // group([\n      // slide existing page from 0% to 100% to the right\n      query(\n        ':leave',\n        animate(\n          '500ms ease',\n          style({\n            position: 'fixed',\n            width: '100%',\n            transform: 'translateX(100%)',\n          }),\n        ), optional\n      ),\n      // slide new page from -100% to 0% to the right\n      query(\n        ':enter',\n        animate(\n          '500ms ease',\n          style({\n            opacity: 1,\n            transform: 'translateX(0%)',\n          }),\n        ), optional\n      ),\n    // ]),\n  ];\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminPortalService {\n  public url8080 = environment.serviceUrl;\n  public headers : any;\n\n\n  constructor(private http: HttpClient) { \n    this.headers = new HttpHeaders();\n  }\n\n  public createServer(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json')\n    let auth = localStorage.getItem('basicAuth');\n    head = head.append(\"Authorization\", \"Basic \" + btoa(auth));\n\n    let params = data;\n    return this.http.post(this.url8080 + '/login/updateserver', params, {headers:head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public getServerList(){\n    let head= this.headers;\n    let auth = localStorage.getItem('basicAuth');\n    head = head.append(\"Authorization\", \"Basic \" + btoa(auth));\n\n    return this.http.get(this.url8080 + '/login/serverlist',{headers:head});\n  }\n\n  public getServerType(){\n    let head= this.headers;\n    let auth = localStorage.getItem('basicAuth');\n    head = head.append(\"Authorization\", \"Basic \" + btoa(auth));\n\n    return this.http.get(this.url8080 + '/login/servertype',{headers:head});\n  }\n  \n  public getServerDetailList(data){\n    let head= this.headers;\n    let auth = localStorage.getItem('basicAuth');\n    head = head.append(\"Authorization\", \"Basic \" + btoa(auth));\n\n    return this.http.get(this.url8080 + '/login/serverbyid/'+data,{headers:head});\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutomationFactoryService {\n  public url8080 = environment.serviceUrlRogers;\n  public url1 = environment.serviceUrl;\n  public headers : any;\n\n  static refreshlist = new EventEmitter<any>();\n\n  constructor(private http: HttpClient) {\n    this.headers = new HttpHeaders();\n    let auth = localStorage.getItem('basicAuth');\n    this.headers = this.headers.append(\"Authorization\", \"Basic \" + btoa(auth));\n    // this.headers = this.headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n   }\n\n  // public getAllOrders() {\n  //   return this.http.get(this.url8080 + '/order/getOrderList');\n  // }\n\n  public getAllOrders(roles) {\n    let data = 'role=';\n    roles.forEach((element, index) => {\n      if (index == 0) {\n        data = data + element.roleId;\n      } else {\n        data = data + ',' + element.roleId;\n      }\n\n    });\n    return this.http.get(this.url8080 + '/order/getOrderList?' + data,{headers: this.headers});\n  }\n\n  public getOrderDetails(orderId) {\n    return this.http.get(this.url8080 + '/order/getInfoByOrderId?orderId=' + orderId,{headers: this.headers});\n  }\n\n  public getCatalogueList() {\n    return this.http.get(this.url8080 + '/order/getCatalogue',{headers: this.headers});\n  }\n\n  public getCatalogueByorderType(orderType, role){\n    return this.http.get(this.url1 + '/order/getCatalogue?orderType=' + orderType + '&role=' + role,{headers: this.headers});\n  }\n\n  public getBotConfig(botId) {\n    let data = 'botId=';\n    botId.forEach((element, index) => {\n      if (index == 0) {\n        data = data + element;\n      } else {\n        data = data + ',' + element;\n      }\n\n    });\n    return this.http.get(this.url1 + '/order/getBotConfig?' + data,{headers: this.headers});\n  }\n\n  public createOrder(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.post(this.url8080 + '/order/create', params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public scheduleOrder(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.post(this.url8080 + '/order/createSchduler', params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public scheduleOrderUpdate(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.post(this.url8080 + '/order/updateSchedulerById', params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public getOrderType() {\n    return this.http.get(this.url1 + '/order/getOrderType',{headers: this.headers});\n  }\n\n  // public getScheduleList(){\n  //   return this.http.get(this.url8080 + '/order/getScheduleList');\n  // }\n  public roleTypeuser(user_id){\n    \n    \n    return this.http.get(this.url1+'/order/getUserRoles?userId=' + user_id,{headers: this.headers});\n  }\n  public getScheduleList(roles){\n    let data = 'role=';\n    roles.forEach((element, index) => {\n      if (index == 0) {\n        data = data + element.roleId;\n      } else {\n        data = data + ',' + element.roleId;\n      }\n\n    });\n    return this.http.get(this.url8080 + '/order/getScheduleList?' + data,{headers: this.headers});\n  }\n\n  public getSchedularDetails(schedular_id){\n    return this.http.get(this.url8080 + '/order/getSchedulerDetailsById?schedulerId=' + schedular_id,{headers: this.headers});\n  }\n\n  public getSuitAndBotDetails(schedular_id){\n    return this.http.get(this.url8080 + '/order/getSuiteDetailsBySchedulerId?schedulerId=' + schedular_id,{headers: this.headers});\n  }\n\n  public deleteSchedule(id){\n    return this.http.delete(this.url8080 + '/order/deleteScheduler?schedulerId=' + id,{headers: this.headers});\n  }\n\n  public pauseSchedule(id) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = {};\n    return this.http.post(this.url8080 + '/order/pauseScheduledOrder?schedulerId=' + id, params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public resumeSchedule(id) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head = this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = {};\n    return this.http.post(this.url8080 + '/order/resumeScheduledOrder?schedulerId=' + id, params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntakeService {\n  public url8080 = environment.serviceUrl;\n  public headers : any;\n\n  constructor(private http: HttpClient) { \n    this.headers = new HttpHeaders();\n    let auth = localStorage.getItem('basicAuth');\n    this.headers = this.headers.append(\"Authorization\", \"Basic \" + btoa(auth));\n    // this.headers = this.headers.append('Content-Type', 'application/json');\n    // this.headers = this.headers.append('Cache-Control', 'no-cache');\n    // this.headers = this.headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n  }\n\n  public automateIntake(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let params = data;\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    return this.http.post(this.url8080 + '/intake/automate', params,{headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public getRoleByPermission(data) {\n    return this.http.get(this.url8080 + '/intake/getrolebyrolepermission/'+ data,{headers: this.headers});\n  }\n\n  public automateIntakeEdit(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let params = data;\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    return this.http.post(this.url8080 + '/intake/editAutomate', params,{headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public getAutomateById(data) {\n    return this.http.get(this.url8080 + '/intake/getIntakeById/'+ data,{headers: this.headers});\n  }\n\n  public createIntake(data, userid) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.post(this.url8080 + '/intake/submit/' + userid, params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public jiraCreateAndUpdate(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.post(this.url8080 + '/intake/jiraCreateAndUpdate', params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public saveIntake(data, userid) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.post(this.url8080 + '/intake/save/' + userid, params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public editIntake(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.post(this.url8080 + '/intake/edit', params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  // public approveIntake(data, intakeid) {\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n  //   };\n  //   let params = data;\n  //   return this.http.post(this.url8080 + '/intake/approve/' + intakeid, params).pipe(map(val => {\n  //     return val;\n  //   })\n  //   );\n  // }\n\n  // public automateIntake(data) {\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n  //   };\n  //   let params = data;\n  //   return this.http.post(this.url8080 + '/intake/automate', params).pipe(map(val => {\n  //     return val;\n  //   })\n  //   );\n  // }\n\n  public approveIntake(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.post(this.url8080 + '/intake/approve', params,{headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public rejectIntake(data, intakeid) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.put(this.url8080 + '/intake/reject/' + intakeid, params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public getAllIntakes() {\n    return this.http.get(this.url8080 + '/intake/list',{headers: this.headers});\n  }\n\n  public getBusinessBenefitsList(){\n    return this.http.get(this.url8080 + '/intake/businessbenefit',{headers: this.headers});\n  }\n\n  public getSBIList() {\n    return this.http.get(this.url8080 + '/intake/SBIList',{headers: this.headers});\n  }\n\n  public getNBIList() {\n    return this.http.get(this.url8080 + '/intake/NBIList',{headers: this.headers});\n  }\n\n  public getBusinessUnitList() {\n    return this.http.get(this.url8080 + '/intake/depAndDirectorList',{headers: this.headers});\n  }\n\n  public getComplexityList() {\n    return this.http.get(this.url8080 + '/intake/complexityList',{headers: this.headers});\n  }\n\n  public getFTErate() {\n    return this.http.get(this.url8080 + '/intake/fterate',{headers: this.headers});\n  }\n\n  public getcommonApprover() {\n    return this.http.get(this.url8080 + '/login/getCommonApprover/Approver',{headers: this.headers});\n  }\n\n  public getUserRoleMapping(userId) {\n    return this.http.get(this.url8080 + '/login/getuserrolefordasboard?userId=' + userId, {headers: this.headers});\n  }\n\n\n  public getComplexity(data) {\n    return this.http.get(this.url8080 + '/intake/complexity?noOfNorthBoundInterface=' + data.noOfNorthBoundInterface + '&noOfSouthBoundInterface=' + data.noOfSouthBoundInterface,{headers: this.headers});\n  }\n\n  public getROICalculation(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json');\n    let params = data;\n    return this.http.post(this.url8080 + '/intake/roiCalculation', params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public fetchApprover(userid) {\n    return this.http.get(this.url8080 + '/login/fetchApprover/' + userid,{headers: this.headers});\n  }\n\n  public deleteIntake(intakeid) {\n    return this.http.get(this.url8080 + '/intake/delete/' + intakeid,{headers: this.headers});\n  }\n\n  public downloadFile(file, intakeid) {\n    return this.http.get(this.url8080 + '/file/download/' + file.fileName,{headers: this.headers});\n  }\n\n  public deleteFile(file, intakeid) {\n    return this.http.delete(this.url8080 + '/file/remove/' + intakeid + '/' + file.fileId,{headers: this.headers});\n  }\n\n  public fileUpload(files, intakeid) {\n    const HttpUploadOptions = {\n      headers: new HttpHeaders({ \"Accept\": \"application/json\" })\n    }\n    let head= this.headers;\n    // let head= new HttpHeaders();\n    head = head.append('Accept', 'application/json');\n    var formData = new FormData();\n    for(var index = 0; index < files.length; index++) {\n        formData.append(\"files\", files[index]);\n    }\n    let params = formData;\n    return this.http.post(this.url8080 + '/file/upload/' + intakeid, params, {headers: head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LoaderState } from '../loader/loader';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  private loaderSubject = new Subject<LoaderState>();\n  loaderState = this.loaderSubject.asObservable();\n\n  constructor() { }\n  show() {\n    this.loaderSubject.next(<LoaderState>{ show: true });\n  }\n  hide() {\n    this.loaderSubject.next(<LoaderState>{ show: false });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, pipe } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\nimport {environment} from '../../environments/environment'\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderinterceptorService {\n\n  constructor(private loaderService: LoaderService) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const  urlarray=environment.apiendpoint\n     const {url}=req\n     const currentpath=url.split('/')\n \n  // var isSpinnerneed=urlarray.includes([...currentpath].pop())\n//  console.log(\"url\")\n  var isSpinnerneed=!(urlarray.some(x=>url.includes(x)))\n    //  console.log(\"req,\",isSpinnerneed,req.url,currentpath.pop(),url.includes(''))\n //this.showLoader()\n \n if(isSpinnerneed==true)\n {\n  //  console.log(\"co\")\n   this.showLoader();\n \n }\n      \n     return next.handle(req).pipe(tap((event: HttpEvent<any>) => { \n       \n       if (event instanceof HttpResponse) {\n         this.onEnd();\n       }\n     },\n       (err: any) => {\n          this.onEnd();\n     }));\n   }\n   private onEnd(): void {\n     this.hideLoader();\n   }\n   private showLoader(): void {\n     this.loaderService.show();\n   }\n   private hideLoader(): void {\n     setTimeout(() => {\n       /** spinner ends after 5 seconds */\n       this.loaderService.hide();\n     }, 1000);\n   }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  public url8080 = environment.serviceUrl;\n  public headers : any;\n  public ldapurllogin=environment.ldaplogin;\n\n  constructor(private http: HttpClient) { \n    this.headers = new HttpHeaders();\n  }\n\n  /* ///////// Login ///////// */\n  public login(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let params = data;\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json')\n    let auth = localStorage.getItem('basicAuth');\n    head = head.append(\"Authorization\", \"Basic \" + btoa(auth));\n    \n    return this.http.post(this.url8080 +'/login/'+this.ldapurllogin, params, {headers:head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  /* ///////// SignUp ///////// */\n  // public signup(data) {\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n  //   };\n  //   let params = data;\n  //   return this.http.post('http://10.168.155.61:8080/login/register', params, httpOptions).pipe(map(val => {\n  //     return val;\n  //   })\n  //   );\n  // }\n  public signup(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let params = data;\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json')\n    let auth = localStorage.getItem('basicAuth');\n    head = head.append(\"Authorization\", \"Basic \" + btoa(auth));\n    return this.http.post(this.url8080 + '/login/register', params, {headers:head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public changePassword(data, username) {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let params = data;\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json')\n    let auth = localStorage.getItem('basicAuth');\n    head = head.append(\"Authorization\", \"Basic \" + btoa(auth));\n    return this.http.put(this.url8080 + '/login/updateUser/' + username, params, {headers:head}).pipe(map(val => {\n      return val;\n    })\n    );\n  }\n\n  public getAllUsers() {\n    let head= this.headers;\n    // head = head.append('Cache-Control', 'no-cache');\n    // head = head.append('Content-Type', 'application/json')\n    let auth = localStorage.getItem('basicAuth');\n    head = head.append(\"Authorization\", \"Basic \" + btoa(auth));\n    return this.http.get(this.url8080 + '/login/getUsersList',{headers:head});\n  }\n\n  /* ///////// Mail Send ///////// */\n  public sendMail(data){\n    const httpOptions = {\n      headers: new HttpHeaders({  'Content-Type':  'application/json', 'Cache-Control': 'no-cache' })\n    };\n    let params =   data ;\n    let head= this.headers;\n    head = head.append('Cache-Control', 'no-cache');\n    head = head.append('Content-Type', 'application/json')\n    let auth = localStorage.getItem('basicAuth');\n    head = head.append(\"Authorization\", \"Basic \" + btoa(auth));\n    return this.http.post(this.url8080 + '/mail/send', params, {headers:head} ).pipe(map(val => {\n        return val;\n      })\n    );\n}\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss']\n})\nexport class AlertComponent implements OnInit {\n  static response = new EventEmitter<any>();\n\n  Object = Object;\n  @Input() data: String;\n  @Input() button: boolean;\n  alertdata:any;\n  constructor() { }\n\n  ngOnInit() {\n\n    //Type: primary, secondary, success, danger, warning, info, light, dark\n    //Attr: type, title, content, close \n    this.alertdata = this.data;\n  }\n  buttonAction(e){\n    // console.log(e);\n    AlertComponent.response.emit(e);\n  }\n}\n","<div *ngFor=\"let data of alertdata\" class=\"alert alert-dismissible fade in show alert-{{data.type}}\"  role=\"alert\">\n    <h4 *ngIf=\"data.title\" class=\"alert-heading\">{{data.title}}</h4>\n    <hr *ngIf=\"data.title\">\n    <button *ngIf=\"data.close\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div *ngIf=\"data.content\" [innerHTML]=\"data.content\">\n    </div>\n    <div *ngIf=\"data.content && button\" >\n            <button class=\"btn btn-success float-left\" id=\"yes\" type=\"button\" (click)=\"buttonAction('Yes')\"> Yes </button>\n            <button class=\"btn btn-secondary float-left\" type=\"button\" id=\"No\" (click)=\"buttonAction('No')\"> No </button>\n    </div>   \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoaderService } from '../../service/loader.service';\nimport { LoaderState } from '../../loader/loader';\nimport { NgxSpinnerService } from \"ngx-spinner\"; \n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n  show = false;\n  private subscription: Subscription;\n  constructor(private loaderService: LoaderService,private Spinnerservice:NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    // console.log(\"Sss\",this.show)\n    this.subscription = this.loaderService.loaderState\n    .subscribe((state: LoaderState) => {\n      // console.log(\"state\",state)\n      this.show = state.show;\n      if(this.show==true)\n      {\n        this.Spinnerservice.show()\n \n      }\n     \n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","<div [class.hidden]=\"!show\">\n\n    <div *ngIf=\"show\">\n      <ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" type=\"ball-spin-clockwise\">  \n        <p style=\"color: white\">Please Wait... </p>  \n        </ngx-spinner>    \n    </div>\n","import { Directive,ElementRef ,HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appTwodigitdecimaldirective]'\n})\nexport class TwodigitdecimaldirectiveDirective {\n  private regex: RegExp = new RegExp(/^\\d*\\.?\\d{0,2}$/g); //accept input and float number restrict 0\n  private specialKeys: Array<string> = [\n    'Backspace',\n    'Tab',\n    'End',\n    'Home',\n    'ArrowLeft',\n    'ArrowRight',\n    'Del',\n    'Delete'\n  ];\n  constructor(private el: ElementRef) { }\n  @HostListener('keydown',['$event'])\n  onKeyDown(event:KeyboardEvent){\n// Allow Backspace, tab, end, and home keys\nif(this.specialKeys.indexOf(event.key)!==-1){\nreturn;\n}\nlet current:string=this.el.nativeElement.value;\nconst position =this.el.nativeElement.selectionStart;\nconst next:string=[current.slice(0, position), event.key =='Decimal'?'.': event.key, current.slice(position)].join('');\nif(next &&!String(next).match(this.regex)){\n      event.preventDefault();\n}\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n\n\nexport const environment = {\n    production: false,\n    baseUrl: 'https://taf.oss.rogers.com/taf/',\n    serviceUrl: 'https://taf-app01-prod-wlfdle.oss.rogers.com:8443/uiService',\n\tldaplogin:'ldapauthentication',\n    // serviceUrl: 'https://10.168.160.65:8080/ldapAuth',\n    serviceUrlRogers: 'https://taf-app01-prod-wlfdle.oss.rogers.com:8443/afService',\n        jiraurl:'https://reqcentral.com/browse/',\n    apiendpoint:['complexityList','complexity?noOfNorthBoundInterface=','&noOfSouthBoundInterface=','/login/getUsersList','depAndDirectorList','Approver','getOrderType','complexityList','SBIList','NBIList','fterate','getuserrolefordasboard'],\n        // serviceUrlRogers: 'https://10.168.160.100:8080/afService',\n    // serviceUrlAdmin: 'https://10.168.160.65:8080/admin/',\n    livelogStart: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/f39334c0-e8ef-11ea-9fe9-173709a55481?embed=true&_g=(filters:!(),\",\n    livelogMid: \"time:(from:now-365d,to:now))&_a=(description:'',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),\",\n    livelogEnd: \"timeRestore:!f,title:'RAF_DEV%20Live%20Log',viewMode:view)\",\n    reportStart: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/9d2a7e00-e619-11ea-9fe9-173709a55481?embed=true&_g=(filters:!(),\",\n    reportMid: \"time:(from:now-365d,to:now))&_a=(description:'10.168.160.65%3D%3E%20Cluster%20Dev%20Env',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),\",\n    reportEnd: \"timeRestore:!f,title:'RAF_DEV%20DashBoard',viewMode:view)\",\n    adminReportStart: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/9d2a7e00-e619-11ea-9fe9-173709a55481?embed=true&_g=(filters:!(),\",\n    adminReportEnd: \"time:(from:now-365d,to:now))&_a=(description:'10.168.160.65%3D%3E%20Cluster%20Dev%20Env',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),query:(language:kuery,query:''),timeRestore:!f,title:'RAF_DEV%20DashBoard',viewMode:view)\",\n    adminSchedulerReportStart: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/523627f0-28b3-11eb-892a-0717bb95a8a8?embed=true&_g=(filters:!(),\",\n    adminSchedulerReportEnd: \"time:(from:now-365d,to:now))&_a=(description:'',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),query:(language:kuery,query:''),timeRestore:!f,title:'scheduler%20dashboard',viewMode:view)\",\n    schedulerReportStart: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/523627f0-28b3-11eb-892a-0717bb95a8a8?embed=true&_g=(filters:!(),\",\n    schedulerReportMid: \"time:(from:now-365d,to:now))&_a=(description:'',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),\",\n    schedulerReportEnd: \"timeRestore:!f,title:'scheduler%20dashboard',viewMode:view)\",\n    userDashboardStart: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/d35cdd70-5297-11eb-aaab-cd14f52f728c?embed=true&_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-365d,to:now))&_a=(description:'New%20Customer%20Environment%20',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),\",\n    userDashboardEnd: \"timeRestore:!f,title:'New%20Prod%20Rogers%20User%20Dashboard%20-%20Normal%20User',viewMode:view)\",\n    deptDashboardStart: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/a5e92a00-5298-11eb-aaab-cd14f52f728c?embed=true&_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-365d,to:now))&_a=(description:'New%20customer%20Environment%20',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),\",\n    deptDashboardEnd: \"timeRestore:!f,title:'New%20Prod%20Rogers%20Department%20Dashboard%20',viewMode:view)\",\n    executiveDashboardStart: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/021ccdd0-5114-11eb-aaab-cd14f52f728c?embed=true&_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-365d,to:now))&_a=(description:'Customer%20Environment%20',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),\",\n    executiveDashboardEnd: \"timeRestore:!f,title:'New%20Prod%20Rogers%20Executive%20Dashboard',viewMode:view)\",\n    adminUserDashboard: `https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/7d36c270-5289-11eb-aaab-cd14f52f728c?embed=true&_a=(description:'New%20Customer%20Environment%20',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),query:(language:kuery,query:''),timeRestore:!f,title:'New%20Prod%20Rogers%20User%20Dashboard%20-%20admin%20dashboard',viewMode:view)&_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-365d,to:now))`,\n    adminDeptDashboard: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/a5e92a00-5298-11eb-aaab-cd14f52f728c?embed=true&_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-365d,to:now))&_a=(description:'New%20customer%20Environment%20',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),query:(language:kuery,query:''),timeRestore:!f,title:'New%20Prod%20Rogers%20Department%20Dashboard%20',viewMode:view)\",\n    adminExecutiveDashboard: \"https://taf-elk01-prod-wlfdle.oss.rogers.com:8443/app/kibana#/dashboard/021ccdd0-5114-11eb-aaab-cd14f52f728c?embed=true&_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-365d,to:now))&_a=(description:'Customer%20Environment%20',filters:!(),fullScreenMode:!f,options:(hidePanelTitles:!f,useMargins:!t),query:(language:kuery,query:''),timeRestore:!f,title:'New%20Prod%20Rogers%20Executive%20Dashboard',viewMode:view)\"\n};\n\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}